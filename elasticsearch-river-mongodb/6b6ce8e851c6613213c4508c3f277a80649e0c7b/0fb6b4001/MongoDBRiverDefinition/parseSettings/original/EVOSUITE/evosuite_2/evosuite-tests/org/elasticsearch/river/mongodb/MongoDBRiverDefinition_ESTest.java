/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 16:18:23 GMT 2021
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.LazyWriteableDBObject;
import com.mongodb.MongoClientOptions;
import com.mongodb.ServerAddress;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.SortedMap;
import java.util.TreeMap;
import java.util.TreeSet;
import org.bson.BasicBSONObject;
import org.bson.LazyBSONCallback;
import org.bson.LazyBSONList;
import org.bson.io.BSONByteBuffer;
import org.bson.types.BSONTimestamp;
import org.bson.types.Binary;
import org.elasticsearch.action.support.single.instance.InstanceShardOperationRequest;
import org.elasticsearch.action.termvector.TermVectorRequest;
import org.elasticsearch.cluster.metadata.MetaData;
import org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider;
import org.elasticsearch.common.collect.ImmutableBiMap;
import org.elasticsearch.common.collect.ImmutableList;
import org.elasticsearch.common.collect.ImmutableMap;
import org.elasticsearch.common.collect.ImmutableSortedMap;
import org.elasticsearch.common.component.Lifecycle;
import org.elasticsearch.common.io.stream.ByteBufferStreamInput;
import org.elasticsearch.common.jackson.core.JsonParser;
import org.elasticsearch.common.jackson.core.ObjectCodec;
import org.elasticsearch.common.jackson.core.io.IOContext;
import org.elasticsearch.common.jackson.core.json.ReaderBasedJsonParser;
import org.elasticsearch.common.jackson.core.sym.CharsToNameCanonicalizer;
import org.elasticsearch.common.jackson.core.util.BufferRecycler;
import org.elasticsearch.common.joda.time.DateTimeZone;
import org.elasticsearch.common.joda.time.tz.UTCProvider;
import org.elasticsearch.common.logging.ESLoggerFactory;
import org.elasticsearch.common.settings.ImmutableSettings;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.unit.TimeValue;
import org.elasticsearch.common.util.BigFloatArrayList;
import org.elasticsearch.discovery.DiscoverySettings;
import org.elasticsearch.env.Environment;
import org.elasticsearch.index.engine.Engine;
import org.elasticsearch.index.fielddata.ordinals.DocIdOrdinals;
import org.elasticsearch.index.fielddata.ordinals.MultiOrdinals;
import org.elasticsearch.index.fielddata.ordinals.OrdinalsBuilder;
import org.elasticsearch.index.fielddata.plain.FloatArrayAtomicFieldData;
import org.elasticsearch.index.query.BoostingQueryParser;
import org.elasticsearch.index.translog.Translog;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.river.RiverSettings;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.Timestamp;
import org.elasticsearch.script.ScriptEngineService;
import org.elasticsearch.script.ScriptService;
import org.elasticsearch.threadpool.ThreadPool;
import org.elasticsearch.watcher.ResourceWatcherService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MongoDBRiverDefinition_ESTest extends MongoDBRiverDefinition_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      String string0 = "Lj/Np$Q>9wld";
      String string1 = "";
      boolean boolean0 = true;
      String string2 = MongoDBRiverDefinition.addRemovePrefix(string0, string1, boolean0);
      assertNotNull(string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-1911);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int1 = 2058;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(2058, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals((-1911), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-72);
      byteArray0[0] = byte0;
      byte byte1 = (byte)94;
      byteArray0[1] = byte1;
      byte byte2 = (byte)75;
      byteArray0[2] = byte2;
      byte byte3 = (byte)81;
      byteArray0[3] = byte3;
      boolean boolean1 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte)94, (byte)75, (byte)81}, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ByteSizeValue byteSizeValue0 = MongoDBRiverDefinition.DEFAULT_BULK_SIZE;
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      
      String string3 = ".";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      
      String string4 = "/GB0iqU5:|F$K,9";
      String string5 = "XZz/Sf$b[";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      String string6 = "ghR|YsE;?sBBf";
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.of(string6, (Object) string6, string3, (Object) mongoDBRiverDefinition_Builder1);
      assertNotNull(immutableSortedMap0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string6);
      assertNotSame(string3, string0);
      assertNotSame(string3, string5);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, immutableSortedMap0);
      assertNotNull(riverSettings0);
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      
      ScriptService scriptService0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string1, string3, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string6);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string6);
      assertNotSame(string3, string0);
      assertNotSame(string3, string5);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(".", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertNotSame(string1, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string6);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string6);
      assertNotSame(string3, string0);
      assertNotSame(string3, string5);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(".", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string6);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string6);
      assertNotSame(string3, string0);
      assertNotSame(string3, string5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(".", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder0.scriptType(string5);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string6);
      assertNotSame(string5, string1);
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoLocalUser(string4);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertFalse(boolean0 == boolean1);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.mongoSecondaryReadPreference(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertTrue(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string7 = mongoDBRiverDefinition1.getMongoOplogNamespace();
      assertNotNull(string7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string7, string1);
      assertNotSame(string7, string5);
      assertNotSame(string7, string3);
      assertNotSame(string7, string2);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(string7, string6);
      assertTrue(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertEquals("null.null", string7);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string8 = mongoDBRiverDefinition1.getScriptType();
      assertNotNull(string8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(string8, string5);
      assertNotSame(string8, string7);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      assertNotSame(string8, string3);
      assertNotSame(string8, string1);
      assertNotSame(string8, string6);
      assertTrue(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string6));
      assertEquals("XZz/Sf$b[", string8);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string9 = mongoDBRiverDefinition1.getStatisticsTypeName();
      assertNull(string9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertTrue(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(string1.equals((Object)string0));
      assertEquals("null.null", string1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("null.null", string2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = "I>b>C^m}Rg/T";
      String string4 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // I>b>C^m}Rg/T
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "_Czj(fin:Up.d#aQ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      String string1 = "P0";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      int int0 = 43;
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      assertNotNull(set0);
      assertFalse(set0.isEmpty());
      assertEquals(3, set0.size());
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder5.parentTypes(set0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertFalse(set0.isEmpty());
      assertEquals(3, set0.size());
      assertFalse(set0.contains(string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      
      int int1 = (-2203);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean0 == boolean2);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      InetAddress inetAddress0 = null;
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0, mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(serverAddress0);
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean3 = false;
      boolean boolean4 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean3);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      
      String string3 = "";
      ServerAddress serverAddress1 = new ServerAddress(string3);
      assertNotNull(serverAddress1);
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress1, serverAddress0);
      assertNotNull(immutableList0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertTrue(immutableList0.contains(serverAddress0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      ImmutableList<ServerAddress> immutableList1 = ImmutableList.copyOf((Collection<? extends ServerAddress>) immutableList0);
      assertNotNull(immutableList1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder1.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder5.script(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string4 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder5.riverIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      
      boolean boolean5 = mongoDBRiverDefinition0.isMongoUseSSL();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean4);
      assertFalse(boolean1 == boolean2);
      assertTrue(boolean1 == boolean4);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(boolean5);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String string0 = "";
      String string1 = "mongoServersSettings: ";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      ScriptService scriptService0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongoServersSettings: ", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getStatisticsIndexName();
      assertNull(string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongoServersSettings: ", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int0 = mongoDBRiverDefinition0.getConnectTimeout();
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongoServersSettings: ", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(mongoDBRiverDefinition0.SERVERS_FIELD, mongoDBRiverDefinition0.SSL_VERIFY_CERT_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // ssl_verify_certificate
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      String string0 = "org.elasticsearch.cluster.routing.allocation.command.AllocationCommands";
      String string1 = "";
      String string2 = MongoDBRiverDefinition.addPrefix(string0, string1);
      assertNotNull(string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      int int0 = 824;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = "3fYRiMxyJ}k0)S@i,";
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.mongoDb(string3);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int1 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder1.connectTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertFalse(int1 == int0);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean1 == boolean0);
      assertFalse(int0 == int1);
      assertFalse(boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertEquals("", string4);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(boolean1 == boolean0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      int int2 = 628;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.concurrentRequests(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder3.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder8.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string5 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNotSame(string5, string3);
      assertSame(string5, string1);
      assertSame(string5, string2);
      assertNotSame(string5, string0);
      assertSame(string5, string4);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertEquals("", string5);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder4.statisticsTypeName(mongoDBRiverDefinition0.ADMIN_DB_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int3 = mongoDBRiverDefinition_Bulk0.getBulkActions();
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(int3 == int0);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(628, int3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string7 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string7);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      byte byte0 = (byte) (-96);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = byte0;
      Binary binary0 = new Binary(byte0, byteArray0);
      assertNotNull(binary0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-96)}, byteArray0);
      assertEquals((byte) (-96), binary0.getType());
      assertEquals(1, binary0.length());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder5.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      int int0 = 380;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      BSONTimestamp bSONTimestamp1 = new BSONTimestamp();
      assertNotNull(bSONTimestamp1);
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      
      Integer integer0 = new Integer(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(380, (int)integer0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string1 = "TE";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("TE", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = mongoDBRiverDefinition0.getScript();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("TE", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("TE", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      long long0 = (-1165L);
      int int1 = (-924);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int1 == int0);
      
      TimeValue timeValue0 = new TimeValue(long0);
      assertNotNull(timeValue0);
      
      long long1 = 128L;
      TimeValue timeValue1 = InstanceShardOperationRequest.DEFAULT_TIMEOUT;
      assertNotNull(timeValue1);
      assertNotSame(timeValue1, timeValue0);
      assertFalse(timeValue1.equals((Object)timeValue0));
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertNotSame(timeValue0, timeValue1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("TE", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertFalse(timeValue0.equals((Object)timeValue1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = true;
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string1);
      assertSame(string3, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("TE", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = "org.elasticsearch.cluster.routing.allocation.command.AllocationCommands";
      String string1 = "";
      String string2 = MongoDBRiverDefinition.addPrefix(string0, string1);
      assertNotNull(string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      int int0 = 824;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = "3fYRiMxyJ}k0)S@i,";
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.mongoDb(string3);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int1 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder1.connectTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertFalse(int1 == int0);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean1 == boolean0);
      assertFalse(int0 == int1);
      assertFalse(boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertEquals("", string4);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      int int2 = 628;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.concurrentRequests(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder3.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder8.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string5 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(string5, string1);
      assertNotSame(string5, string3);
      assertSame(string5, string2);
      assertNotSame(string5, string0);
      assertSame(string5, string4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertEquals("", string5);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder4.statisticsTypeName(mongoDBRiverDefinition0.ADMIN_DB_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int3 = mongoDBRiverDefinition_Bulk0.getBulkActions();
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(628, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(628, int3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string6 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BasicDBObject basicDBObject1 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNull(basicDBObject1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string7 = mongoDBRiverDefinition0.getIndexName();
      assertNull(string7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(string1, string5);
      assertNotSame(string1, string0);
      assertSame(string1, string4);
      assertNotSame(string2, string0);
      assertSame(string2, string4);
      assertSame(string2, string5);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(824, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      int int0 = 380;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)120;
      byteArray0[0] = byte0;
      byte byte1 = (byte)70;
      byteArray0[1] = byte1;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)120, (byte)70}, byteArray0);
      assertFalse(boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      
      BSONTimestamp bSONTimestamp1 = new BSONTimestamp();
      assertNotNull(bSONTimestamp1);
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      
      int int1 = bSONTimestamp0.compareTo(bSONTimestamp1);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertNotSame(bSONTimestamp1, bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      String string1 = "l*";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getScript();
      assertNull(string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      long long0 = (-1195L);
      int int2 = (-924);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      TimeValue timeValue0 = new TimeValue(long0);
      assertNotNull(timeValue0);
      
      long long1 = 128L;
      TimeValue timeValue1 = TimeValue.timeValueMinutes(long1);
      assertNotNull(timeValue1);
      assertNotSame(timeValue1, timeValue0);
      assertFalse(long1 == long0);
      assertFalse(timeValue1.equals((Object)timeValue0));
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNotSame(timeValue0, timeValue1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertFalse(timeValue0.equals((Object)timeValue1));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean1 = true;
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(string3, string0);
      assertNotSame(string3, string1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNotNull(timestamp0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = (-1140);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string0 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals("", string0);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string1 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(string1, string0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals("", string1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals((-1140), mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int1 = mongoDBRiverDefinition0.getThrottleSize();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      TreeMap<Object, JsonParser.Feature> treeMap0 = new TreeMap<Object, JsonParser.Feature>();
      assertNotNull(treeMap0);
      assertEquals(0, treeMap0.size());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(treeMap0);
      assertNotNull(basicDBObject0);
      assertEquals(0, treeMap0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertEquals(0, treeMap0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      int int2 = mongoDBRiverDefinition0.getConnectTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(int0 == int1);
      assertTrue(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(0, int2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = true;
      boolean boolean2 = false;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean1, boolean0, boolean2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk2 = mongoDBRiverDefinition0.getBulk();
      assertNotNull(mongoDBRiverDefinition_Bulk2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertNotSame(mongoDBRiverDefinition_Bulk2, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk2, mongoDBRiverDefinition_Bulk1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals(1, mongoDBRiverDefinition_Bulk2.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk2.getBulkActions());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition_Bulk2.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string3 = mongoDBRiverDefinition0.getScript();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean2);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string4 = "UEF";
      String string5 = "mongodb";
      boolean boolean4 = false;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string4, string5, boolean4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // mongodb
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      
      String string0 = "index.translog.flush_threshold_ops";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      
      String string1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      
      int int0 = (-4286);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("index.translog.flush_threshold_ops", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("index.translog.flush_threshold_ops", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals((-4286), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = "LRlV]:";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.includeCollection(string2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("index.translog.flush_threshold_ops", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("index.translog.flush_threshold_ops", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals((-4286), mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean2 == boolean1);
      assertFalse(string0.equals((Object)string2));
      assertEquals("", string3);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      byte[] byteArray0 = new byte[2];
      String string4 = " entries";
      String string5 = ")=nDK";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string4, string5, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // )=nDK
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "localhost";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      int int0 = 900499;
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string1 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(900499, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("localhost", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getParentTypes();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(900499, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("localhost", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(900499, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("localhost", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = mongoDBRiverDefinition0.getStatisticsIndexName();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(900499, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("localhost", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(900499, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("localhost", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertEquals("", string4);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)25;
      byteArray0[0] = byte0;
      byte byte1 = (byte)47;
      byteArray0[1] = byte1;
      byte byte2 = (byte)72;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-112);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-93);
      byteArray0[4] = byte4;
      byte byte5 = (byte)18;
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-119);
      byteArray0[6] = byte6;
      byte byte7 = (byte)11;
      byteArray0[7] = byte7;
      byte byte8 = (byte)5;
      byteArray0[8] = byte8;
      Binary binary0 = new Binary(byteArray0);
      assertNotNull(binary0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)25, (byte)47, (byte)72, (byte) (-112), (byte) (-93), (byte)18, (byte) (-119), (byte)11, (byte)5}, byteArray0);
      assertEquals(9, binary0.length());
      assertEquals((byte)0, binary0.getType());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder4.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      int int0 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = mongoDBRiverDefinition0.isMongoUseSSL();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean1 == boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder0.mongoAdminUser(mongoDBRiverDefinition0.CONNECTION_TIMEOUT);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition0.getScript();
      assertNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean2 = mongoDBRiverDefinition0.isMongoGridFS();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.script(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder5.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getParentTypes();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = "post_tags";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.mongoLocalPassword(string3);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder5.mongoLocalUser(mongoDBRiverDefinition0.INCLUDE_FIELDS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertTrue(boolean1 == boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean3 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      Set<String> set1 = mongoDBRiverDefinition0.getParentTypes();
      assertNull(set1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string3));
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "5RH+6-1rO";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoLocalUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = mongoDBRiverDefinition0.isStoreStatistics();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean1);
      
      Locale locale0 = new Locale(string0, string0);
      assertNotNull(locale0);
      assertEquals("", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getLanguage());
      assertEquals("", locale0.getISO3Language());
      assertEquals("", locale0.getISO3Country());
      assertEquals("", locale0.toString());
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.riverIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      byte[] byteArray0 = new byte[0];
      Binary binary0 = new Binary(byteArray0);
      assertNotNull(binary0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals((byte)0, binary0.getType());
      assertEquals(0, binary0.length());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder2.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-11106851);
      TimeValue timeValue0 = TimeValue.timeValueHours(int0);
      assertNotNull(timeValue0);
      
      int int1 = 455;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int0 == int1);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      long long0 = (-800L);
      TimeValue timeValue0 = TimeValue.timeValueMillis(long0);
      assertNotNull(timeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-4272);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      DiskThresholdDecider diskThresholdDecider0 = new DiskThresholdDecider(immutableSettings0);
      assertNotNull(diskThresholdDecider0);
      
      String string0 = "disable_index_refresh";
      ByteSizeValue byteSizeValue0 = diskThresholdDecider0.thresholdBytesFromWatermark(string0);
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int1 = 0;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.bulkActions(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder4.bulkActions(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      UTCProvider uTCProvider0 = new UTCProvider();
      assertNotNull(uTCProvider0);
      
      Set<String> set0 = uTCProvider0.getAvailableIDs();
      assertNotNull(set0);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertFalse(set0.contains(string0));
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoAdminPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertFalse(set0.contains(string1));
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertFalse(set0.contains(string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(set0.contains(string1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(set0.contains(string1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(set0.isEmpty());
      assertEquals(1, set0.size());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertFalse(set0.contains(string1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(mongoDBRiverDefinition0.BULK_SIZE_FIELD, mongoDBRiverDefinition0.IMPORT_ALL_COLLECTIONS_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // import_all_collections
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "U*~6xmEk@+77em-M";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      int int0 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("U*~6xmEk@+77em-M", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      int int0 = 922;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      int int1 = 570;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(int1 == int0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition1.getMongoLocalUser();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(string1, string0);
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", string1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = mongoDBRiverDefinition1.getScriptType();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.script(mongoDBRiverDefinition1.SERVERS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.script(mongoDBRiverDefinition0.SIZE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = mongoDBRiverDefinition0.getScriptType();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean2 = mongoDBRiverDefinition1.isDisableIndexRefresh();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(boolean2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(mongoDBRiverDefinition1.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkActions(mongoDBRiverDefinition1.DEFAULT_DB_PORT);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertTrue(mongoDBRiverDefinition1.isImportAllCollections());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(570, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(570, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string4 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string4);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertFalse(int0 == int1);
      
      int int2 = 0;
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int2, int1);
      assertNotNull(bSONTimestamp0);
      assertEquals(570, bSONTimestamp0.getInc());
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder0.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertEquals(570, bSONTimestamp0.getInc());
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getParentTypes();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(string2, string0);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", string2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder1.mongoUseSSL(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      String string0 = "";
      String string1 = "";
      int int0 = 54;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(int0);
      assertNotNull(byteBuffer0);
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=54 cap=54]", byteBuffer0.toString());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(54, byteBuffer0.remaining());
      assertTrue(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      
      ByteBufferStreamInput byteBufferStreamInput0 = new ByteBufferStreamInput(byteBuffer0);
      assertNotNull(byteBufferStreamInput0);
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=54 cap=54]", byteBuffer0.toString());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(54, byteBuffer0.remaining());
      assertTrue(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      
      Settings settings0 = ImmutableSettings.readSettingsFromStream(byteBufferStreamInput0);
      assertNotNull(settings0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      
      int int1 = 1000;
      BasicDBObject basicDBObject0 = new BasicDBObject(int1);
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertFalse(int1 == int0);
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, basicDBObject0);
      assertNotNull(riverSettings0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      Environment environment0 = new Environment();
      assertNotNull(environment0);
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      TreeSet<ScriptEngineService> treeSet0 = new TreeSet<ScriptEngineService>(hashSet0);
      assertNotNull(treeSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      
      ThreadPool threadPool0 = new ThreadPool();
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(int0 == int1);
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, treeSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean0 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertSame(string0, string1);
      assertSame(string1, string0);
      assertEquals(1, byteBuffer0.position());
      assertEquals(53, byteBuffer0.remaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.isDirect());
      assertEquals("java.nio.DirectByteBuffer[pos=1 lim=54 cap=54]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(54, byteBuffer0.limit());
      assertEquals(54, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasArray());
      assertTrue(byteBufferStreamInput0.markSupported());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(boolean0);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      int int0 = (-537);
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals((-537), bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals((-537), bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("null.null", string1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      ByteSizeValue byteSizeValue0 = mongoDBRiverDefinition_Bulk0.getBulkSize();
      assertNotNull(byteSizeValue0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      boolean boolean2 = mongoDBRiverDefinition0.isImportAllCollections();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.statisticsIndexName(mongoDBRiverDefinition0.HOST_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean1 == boolean2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoClientOptions mongoClientOptions0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertEquals((-537), bSONTimestamp0.getInc());
      assertTrue(boolean0 == boolean2);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      String string0 = "6H5mf.l/vGF@-A$#";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.scriptType(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      
      Set<String> set0 = charset0.aliases();
      assertNotNull(set0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertFalse(set0.contains(string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertFalse(set0.contains(string0));
      
      String string1 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertFalse(set0.contains(string1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(set0.contains(string1));
      assertFalse(string0.equals((Object)string1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoOplogFilter();
      assertNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(set0.contains(string1));
      assertFalse(string0.equals((Object)string1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = "";
      String string3 = MongoDBRiverDefinition.addPrefix(mongoDBRiverDefinition0.ADMIN_DB_FIELD, string2);
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string3, string0);
      assertSame(string3, string2);
      assertNotSame(string3, string1);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("6H5mf.l/vGF@-A$#", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(set0.contains(string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "HhCA\\Fy{?x";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.riverIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      String string1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "anze";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoCollection(mongoDBRiverDefinition0.USER_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("anze", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoAdminUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(string1.equals((Object)string0));
      assertEquals("null.null", string1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "_Czj(fin:Up.d#aQ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "P0";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int0 = 43;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      
      int int1 = (-2203);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertFalse(boolean2 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      InetAddress inetAddress0 = null;
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0, mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(serverAddress0);
      assertEquals(1, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = "";
      ServerAddress serverAddress1 = new ServerAddress(string3);
      assertNotNull(serverAddress1);
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress1, serverAddress0);
      assertNotNull(immutableList0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals(1, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(immutableList0.contains(serverAddress0));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      ImmutableList<ServerAddress> immutableList1 = ImmutableList.copyOf((Collection<? extends ServerAddress>) immutableList0);
      assertNotNull(immutableList1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertEquals(1, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder1.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertEquals(1, serverAddress0.getPort());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertTrue(immutableList0.contains(serverAddress0));
      assertTrue(immutableList1.contains(serverAddress0));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder5.script(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder5.riverIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      String string0 = "Lj/Np$Q>9wld";
      String string1 = "";
      boolean boolean0 = true;
      String string2 = MongoDBRiverDefinition.addRemovePrefix(string0, string1, boolean0);
      assertNotNull(string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-1911);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int1 = 2058;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(2058, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals((-1911), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ByteSizeValue byteSizeValue0 = mongoDBRiverDefinition_Bulk0.getBulkSize();
      assertNotNull(byteSizeValue0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertEquals(2058, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals((-1911), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string3 = ".";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.script(string3);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      String string4 = "/GB0iqU5:|F$K,9";
      String string5 = "XZz/Sf$b[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.scriptType(string5);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoLocalUser(string4);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(".", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string6 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string6);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string6);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(".", mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(boolean0 == boolean1);
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("null.null", string6);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      Set<String> set0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.parentTypes(set0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "o.";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.riverIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "kA|aRiFH{rbj~";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string1 = "gridfs";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoLocalUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoLocalUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder6.statisticsTypeName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      int int0 = (-13);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.mongoLocalUser(string3);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("kA|aRiFH{rbj~", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals((-13), mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("gridfs", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("gridfs", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("kA|aRiFH{rbj~", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals((-13), mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("gridfs", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("gridfs", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder4.parentTypes(set0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("kA|aRiFH{rbj~", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals((-13), mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("gridfs", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("gridfs", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean2 = mongoDBRiverDefinition0.isStoreStatistics();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("kA|aRiFH{rbj~", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals((-13), mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("gridfs", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("gridfs", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = (-1991);
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int0);
      assertNotNull(bSONTimestamp0);
      assertEquals((-1991), bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals((-1991), bSONTimestamp0.getInc());
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertEquals((-1991), bSONTimestamp0.getInc());
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals((-1991), bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertEquals((-1991), bSONTimestamp0.getInc());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertEquals((-1991), bSONTimestamp0.getInc());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertEquals((-1991), bSONTimestamp0.getInc());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      String string0 = "collection";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // collection
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = 457;
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string0 = "^0+smJd@*x(RcYLoS";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      int int1 = 1;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int1 == int0);
      
      TimeValue timeValue0 = null;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      
      ByteSizeValue byteSizeValue0 = new ByteSizeValue(int0);
      assertNotNull(byteSizeValue0);
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      long long0 = byteSizeValue0.mb();
      assertFalse(int0 == int1);
      assertEquals(0L, long0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertFalse(int0 == int1);
      
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      
      Map<String, Object> map0 = null;
      RiverSettings riverSettings0 = new RiverSettings(settings0, map0);
      assertNotNull(riverSettings0);
      
      Environment environment0 = new Environment();
      assertNotNull(environment0);
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      
      ThreadPool threadPool0 = new ThreadPool();
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, hashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.parseSettings(string0, string0, riverSettings0, scriptService0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      String string0 = "i\u00E9ramos";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // i\u00E9ramos
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "org.apache.lucene.index.MultiDocValues$OrdinalMap";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      TimeValue timeValue0 = mongoDBRiverDefinition_Bulk0.getFlushInterval();
      assertNotNull(timeValue0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string1 = "2),i`";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.typeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoAdminUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("2),i`", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("2),i`", mongoDBRiverDefinition0.getTypeName());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean0 = mongoDBRiverDefinition0.isMongoUseSSL();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("2),i`", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("2),i`", mongoDBRiverDefinition0.getTypeName());
      assertFalse(boolean0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "#DRCijBUW@Rk0i\"";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      int int0 = 1085;
      int int1 = (-1175);
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp(int0, int1);
      assertNotNull(bSONTimestamp0);
      assertEquals((-1175), bSONTimestamp0.getInc());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals((-1175), bSONTimestamp0.getInc());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals((-1175), bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("#DRCijBUW@Rk0i\"", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int2 = mongoDBRiverDefinition0.getThrottleSize();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals((-1175), bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("#DRCijBUW@Rk0i\"", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(0, int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      String string0 = "ssl";
      RiverSettings riverSettings0 = null;
      ScriptService scriptService0 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.parseSettings(string0, string0, riverSettings0, scriptService0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No settings specified
         //
         verifyException("org.elasticsearch.common.Preconditions", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoSecondaryReadPreference(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      String string0 = "org.elasticsearch.river.mongodb.MongoDBRiverDefinition";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      ByteSizeValue byteSizeValue0 = MongoDBRiverDefinition.DEFAULT_BULK_SIZE;
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder1);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "U B";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalPassword(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoSecondaryReadPreference(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.script(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean3 = mongoDBRiverDefinition0.isImportAllCollections();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      ByteSizeValue byteSizeValue0 = Engine.INACTIVE_SHARD_INDEXING_BUFFER;
      assertNotNull(byteSizeValue0);
      
      long long0 = byteSizeValue0.getKb();
      assertEquals(500L, long0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder0.socketTimeout(mongoDBRiverDefinition0.DEFAULT_BULK_ACTIONS);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.statisticsTypeName(mongoDBRiverDefinition0.PORT_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean1 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder6.scriptType(mongoDBRiverDefinition0.ACTIONS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder4.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertEquals(0, bSONTimestamp0.getInc());
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder5.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("U B", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("U B", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean2 == boolean3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int0 = 27017;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      int int1 = 190599;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.throttleSize(int1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(27017, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(190599, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string1 = "";
      String string2 = null;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string1, string2, boolean1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      ImmutableBiMap<MongoDBRiverDefinition, ServerAddress> immutableBiMap0 = ImmutableBiMap.of();
      assertNotNull(immutableBiMap0);
      assertEquals(0, immutableBiMap0.size());
      
      BasicDBObject basicDBObject1 = new BasicDBObject(immutableBiMap0);
      assertNotNull(basicDBObject1);
      assertEquals(0, immutableBiMap0.size());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      
      String string0 = null;
      boolean boolean1 = false;
      BigFloatArrayList bigFloatArrayList0 = new BigFloatArrayList();
      assertNotNull(bigFloatArrayList0);
      assertEquals(0L, bigFloatArrayList0.size());
      
      int int0 = 2130;
      DocIdOrdinals docIdOrdinals0 = new DocIdOrdinals(int0);
      assertNotNull(docIdOrdinals0);
      assertEquals(2130, docIdOrdinals0.getNumDocs());
      assertEquals(2131L, docIdOrdinals0.getMaxOrd());
      assertEquals(2130L, docIdOrdinals0.getNumOrds());
      assertFalse(docIdOrdinals0.isMultiValued());
      assertEquals(4L, docIdOrdinals0.getMemorySizeInBytes());
      
      FloatArrayAtomicFieldData.WithOrdinals floatArrayAtomicFieldData_WithOrdinals0 = new FloatArrayAtomicFieldData.WithOrdinals(bigFloatArrayList0, int0, docIdOrdinals0);
      assertNotNull(floatArrayAtomicFieldData_WithOrdinals0);
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(2130, docIdOrdinals0.getNumDocs());
      assertEquals(2131L, docIdOrdinals0.getMaxOrd());
      assertEquals(2130L, docIdOrdinals0.getNumOrds());
      assertFalse(docIdOrdinals0.isMultiValued());
      assertEquals(4L, docIdOrdinals0.getMemorySizeInBytes());
      assertEquals(2130L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertEquals(2130, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      
      boolean boolean2 = basicDBObject1.replace(string0, (Object) floatArrayAtomicFieldData_WithOrdinals0, (Object) mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertEquals(0, immutableBiMap0.size());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(2130, docIdOrdinals0.getNumDocs());
      assertEquals(2131L, docIdOrdinals0.getMaxOrd());
      assertEquals(2130L, docIdOrdinals0.getNumOrds());
      assertFalse(docIdOrdinals0.isMultiValued());
      assertEquals(4L, docIdOrdinals0.getMemorySizeInBytes());
      assertEquals(2130L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertEquals(2130, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = basicDBObject1.getBoolean(string0, boolean1);
      assertEquals(0, immutableBiMap0.size());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.mongoOplogFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertEquals(0, immutableBiMap0.size());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      
      String string1 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder0.mongoAdminUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean4 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(mongoDBRiverDefinition0.FILTER_FIELD, string2, boolean4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string1 = "Phvoec<>\\jq+x}";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      
      Object object0 = null;
      Object object1 = basicDBObject0.put(string0, object0);
      assertNull(object1);
      assertNotSame(string0, string1);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = true;
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoSecondaryReadPreference(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.dropCollection(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder5.mongoDb(string1);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "8Qx[@hw]b'.";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder5.riverName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      String string3 = "3&ylOi[w={=&4(MQcC";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder10.indexName(string3);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder5.indexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder13.indexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder10.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("8Qx[@hw]b'.", mongoDBRiverDefinition0.getRiverName());
      assertEquals("Phvoec<>\\jq+x}", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("8Qx[@hw]b'.", mongoDBRiverDefinition0.getIndexName());
      assertEquals("Phvoec<>\\jq+x}", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string4 = mongoDBRiverDefinition0.getMongoDb();
      assertNotNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertNotSame(string4, string0);
      assertSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("8Qx[@hw]b'.", mongoDBRiverDefinition0.getRiverName());
      assertEquals("Phvoec<>\\jq+x}", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("8Qx[@hw]b'.", mongoDBRiverDefinition0.getIndexName());
      assertEquals("Phvoec<>\\jq+x}", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals("Phvoec<>\\jq+x}", string4);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder15 = mongoDBRiverDefinition_Builder13.dropCollection(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder15, mongoDBRiverDefinition_Builder9);
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean4 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder16 = mongoDBRiverDefinition_Builder3.storeStatistics(boolean4);
      assertNotNull(mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder16);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder15);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder16, mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "UpTgzF'x!";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoDb(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.scriptType(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "b=byjaIj\"=";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.riverIndexName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.advancedTransformation(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("UpTgzF'x!", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("b=byjaIj\"=", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = mongoDBRiverDefinition0.getScript();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("UpTgzF'x!", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("b=byjaIj\"=", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = "credentials";
      String string5 = "index";
      String string6 = "-";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string5, string6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // -
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      String string0 = "org.apache.lucene.search.FieldComparator$ShortComparator";
      String string1 = "5QaCp=%";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.mongodb.DBObject
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "mpercolate";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "kh`|\\F-";
      String string2 = "initial_timestamp";
      TermVectorRequest termVectorRequest0 = new TermVectorRequest(string0, string1, string2);
      assertNotNull(termVectorRequest0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      Set<String> set0 = termVectorRequest0.selectedFields();
      assertNull(set0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.includeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = "loscUb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.includeCollection(string3);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("loscUb", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mpercolate", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("loscUb", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mpercolate", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertEquals("kh`|\\F-", termVectorRequest0.type());
      assertEquals("mpercolate", termVectorRequest0.index());
      assertNull(termVectorRequest0.preference());
      assertEquals("initial_timestamp", termVectorRequest0.id());
      assertFalse(termVectorRequest0.listenerThreaded());
      assertTrue(termVectorRequest0.operationThreaded());
      assertNull(termVectorRequest0.routing());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("loscUb", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("mpercolate", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertTrue(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      int int0 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1, int0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string1, string0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", string1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "][5O6{% :[K~";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.skipInitialImport(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition0.getMongoDb();
      assertNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.dropCollection(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkActions(mongoDBRiverDefinition0.DEFAULT_BULK_ACTIONS);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder3);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int0 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("][5O6{% :[K~", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, int0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(string0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "drop_collection";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      
      String string1 = "Y/r@7]]Q&jg%49k";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.riverName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.skipInitialImport(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder7.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("drop_collection", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("drop_collection", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = null;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string2, mongoDBRiverDefinition0.BULK_TIMEOUT_FIELD, boolean2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      String string0 = "cluster.routing.allocation.cluster_concurrent_rebalance";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string0, string0, boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // cluster.routing.allocation.cluster_concurrent_rebalance
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "OxlS4'jiT:^Q@9(";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoUseSSL(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.skipInitialImport(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "user";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder5.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = mongoDBRiverDefinition0.getScript();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = "";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.Builder.EMPTY_SETTINGS;
      assertNotNull(immutableSettings0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      
      String string5 = "Parse river settings for {}";
      String string6 = "]$ZxYAU";
      BoostingQueryParser boostingQueryParser0 = new BoostingQueryParser();
      assertNotNull(boostingQueryParser0);
      
      ImmutableMap<String, Object> immutableMap0 = ImmutableMap.of(mongoDBRiverDefinition0.DEFAULT_DB_HOST, (Object) mongoDBRiverDefinition_Builder4, string5, (Object) immutableSettings0, string6, (Object) mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition0.ADMIN_DB_FIELD, (Object) boostingQueryParser0);
      assertNotNull(immutableMap0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean0);
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, immutableMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean0);
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ScriptService scriptService0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition1 = MongoDBRiverDefinition.parseSettings(string4, mongoDBRiverDefinition0.INITIAL_TIMESTAMP_FIELD, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("initial_timestamp", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean0);
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder0.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertFalse(boolean0 == boolean1);
      
      boolean boolean2 = mongoDBRiverDefinition1.isDropCollection();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("initial_timestamp", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean3 = mongoDBRiverDefinition1.isAdvancedTransformation();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("initial_timestamp", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean4 = mongoDBRiverDefinition1.isDisableIndexRefresh();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string0, string6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string6);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(4, immutableMap0.size());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals("", mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("initial_timestamp", mongoDBRiverDefinition1.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("user", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string6));
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean3);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string6));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "1F(.Mx^";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.convertToBasicDBObject(string0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.mongodb.BasicDBObject
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      int int0 = mongoDBRiverDefinition_Bulk0.getConcurrentRequests();
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, int0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder0.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = mongoDBRiverDefinition1.getMongoAdminUser();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertSame(string1, string0);
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals("", string1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      Set<String> set0 = DateTimeZone.getAvailableIDs();
      assertNotNull(set0);
      assertEquals(578, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(set0.contains(string1));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder2.excludeFields(set0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(578, set0.size());
      assertFalse(set0.isEmpty());
      assertFalse(set0.contains(string1));
      
      String string2 = "xX";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder3.riverName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = mongoDBRiverDefinition1.isAdvancedTransformation();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertTrue(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(boolean1 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition mongoDBRiverDefinition2 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(mongoDBRiverDefinition2, mongoDBRiverDefinition0);
      assertNotSame(mongoDBRiverDefinition2, mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition2.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition2.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition2.getIndexName());
      assertEquals("xX", mongoDBRiverDefinition2.getRiverName());
      assertFalse(mongoDBRiverDefinition2.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition2.isStoreStatistics());
      assertNull(mongoDBRiverDefinition2.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition2.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition2.isDisableIndexRefresh());
      assertTrue(mongoDBRiverDefinition2.isDropCollection());
      assertTrue(mongoDBRiverDefinition2.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition2.getMongoDb());
      assertEquals("", mongoDBRiverDefinition2.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition2.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition2.getConnectTimeout());
      assertNull(mongoDBRiverDefinition2.getRiverIndexName());
      assertNull(mongoDBRiverDefinition2.getScriptType());
      assertTrue(mongoDBRiverDefinition2.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition2.getScript());
      assertEquals("", mongoDBRiverDefinition2.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition2.getTypeName());
      assertEquals("", mongoDBRiverDefinition2.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition2.getThrottleSize());
      assertFalse(mongoDBRiverDefinition2.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition2.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition2.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition2.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition2.getMongoCollection());
      assertFalse(mongoDBRiverDefinition2.equals((Object)mongoDBRiverDefinition0));
      assertFalse(mongoDBRiverDefinition2.equals((Object)mongoDBRiverDefinition1));
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int0 = 701;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(701, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition0.getBulk();
      assertNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(701, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(701, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean1 = false;
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder1.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.advancedTransformation(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(701, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoLocalUser(mongoDBRiverDefinition0.SIZE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(701, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string1 = "r-O$Ou(/ZKuqBlL L";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(mongoDBRiverDefinition0.CONCURRENT_REQUESTS_FIELD, string1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // r-O$Ou(/ZKuqBlL L
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string0);
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.storeStatistics(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      int int0 = (-1);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      TimeValue timeValue0 = DiscoverySettings.DEFAULT_PUBLISH_TIMEOUT;
      assertNotNull(timeValue0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      ByteSizeValue byteSizeValue0 = null;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder4.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder4.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals((-1), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-1), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      ByteSizeValue byteSizeValue1 = mongoDBRiverDefinition_Bulk0.getBulkSize();
      assertNull(byteSizeValue1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals((-1), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals((-1), mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals((-1), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      BasicDBObject basicDBObject1 = mongoDBRiverDefinition0.getMongoOplogFilter();
      assertNull(basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals((-1), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals((-1), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      String string0 = "\u0432\u0448\u0438";
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertNotNull(metaData0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      
      Settings settings0 = metaData0.settings();
      assertNotNull(settings0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      
      TreeMap<String, Object> treeMap0 = new TreeMap<String, Object>();
      assertNotNull(treeMap0);
      assertEquals(0, treeMap0.size());
      
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.copyOfSorted((SortedMap<String, ?>) treeMap0);
      assertNotNull(immutableSortedMap0);
      assertEquals(0, treeMap0.size());
      
      String string1 = "beJ'8M_?T@|Q|@XF=v";
      ImmutableSortedMap<String, Object> immutableSortedMap1 = immutableSortedMap0.tailMap(string1);
      assertNotNull(immutableSortedMap1);
      assertSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(string1, string0);
      assertSame(immutableSortedMap1, immutableSortedMap0);
      assertEquals(0, treeMap0.size());
      assertFalse(string1.equals((Object)string0));
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, immutableSortedMap1);
      assertNotNull(riverSettings0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, treeMap0.size());
      assertFalse(string1.equals((Object)string0));
      
      Environment environment0 = new Environment();
      assertNotNull(environment0);
      
      HashSet<ScriptEngineService> hashSet0 = new HashSet<ScriptEngineService>();
      assertNotNull(hashSet0);
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      
      ThreadPool threadPool0 = new ThreadPool();
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(settings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(settings0, environment0, hashSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string0, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string0, string1);
      assertSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(string1, string0);
      assertSame(immutableSortedMap1, immutableSortedMap0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, treeMap0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      int int0 = mongoDBRiverDefinition0.getSocketTimeout();
      assertNotSame(string0, string1);
      assertSame(immutableSortedMap0, immutableSortedMap1);
      assertNotSame(string1, string0);
      assertSame(immutableSortedMap1, immutableSortedMap0);
      assertEquals(0, metaData0.totalNumberOfShards());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, treeMap0.size());
      assertTrue(hashSet0.isEmpty());
      assertEquals(0, hashSet0.size());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("\u0432\u0448\u0438", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, int0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      int int0 = 0;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(0, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "])H+r0j}V_bE:PN";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      TimeValue timeValue0 = mongoDBRiverDefinition_Bulk0.getFlushInterval();
      assertNotNull(timeValue0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(mongoDBRiverDefinition_Bulk0, mongoDBRiverDefinition_Bulk1);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(mongoDBRiverDefinition_Bulk0.equals((Object)mongoDBRiverDefinition_Bulk1));
      
      String string1 = "";
      Settings settings0 = null;
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, basicDBObject0);
      assertNotNull(riverSettings0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      
      ScriptService scriptService0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string0, string1, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalUser(mongoDBRiverDefinition0.CREDENTIALS_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      List<ServerAddress> list0 = mongoDBRiverDefinition0.getMongoServers();
      assertNotNull(list0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("])H+r0j}V_bE:PN", mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder0.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string0 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean0 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "bulk_timeout";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      int int0 = 1000;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      
      String string1 = "YB9$bh(?P#`uS\"{6PD~";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      int int1 = 0;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int1 == int0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoUseSSL(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "`cP@5Jvl4/dga~s 3k";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.riverName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(1000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("YB9$bh(?P#`uS\"{6PD~", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = mongoDBRiverDefinition0.getMongoDb();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(1000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("YB9$bh(?P#`uS\"{6PD~", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int2 = mongoDBRiverDefinition0.getSocketTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(1000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("YB9$bh(?P#`uS\"{6PD~", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(1000, int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder7.mongoLocalUser(mongoDBRiverDefinition0.DB_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(1000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("YB9$bh(?P#`uS\"{6PD~", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertTrue(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int3 = 129;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder3.throttleSize(int3);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      boolean boolean1 = mongoDBRiverDefinition0.isStoreStatistics();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(1000, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("YB9$bh(?P#`uS\"{6PD~", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("bulk_timeout", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder5.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertTrue(boolean0 == boolean1);
      
      String string4 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder2.typeName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertNotSame(string0, string4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      
      byte byte0 = (byte)103;
      byte[] byteArray0 = new byte[0];
      Binary binary0 = new Binary(byte0, byteArray0);
      assertNotNull(binary0);
      assertEquals(0, byteArray0.length);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertEquals(0, binary0.length());
      assertEquals((byte)103, binary0.getType());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder5.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "^[`[Q=8_vExZs.{f";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.includeCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      String string1 = "";
      String string2 = "1m$juH3S";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder1.scriptType(string2);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder1.mongoCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("1m$juH3S", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = "";
      String string4 = "";
      String string5 = MongoDBRiverDefinition.removePrefix(string3, string4);
      assertNotNull(string5);
      assertSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(string3, string4);
      assertSame(string3, string5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(string4, string1);
      assertSame(string4, string5);
      assertSame(string4, string3);
      assertNotSame(string5, string2);
      assertSame(string5, string4);
      assertSame(string5, string1);
      assertNotSame(string5, string0);
      assertSame(string5, string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertEquals("", string5);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string1, string3);
      assertSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("1m$juH3S", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string6 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string6);
      assertNotSame(string6, string0);
      assertSame(string6, string4);
      assertSame(string6, string5);
      assertSame(string6, string1);
      assertSame(string6, string3);
      assertNotSame(string6, string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string1, string3);
      assertSame(string1, string4);
      assertSame(string1, string6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("1m$juH3S", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string6);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition0.getBulk();
      assertNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string1, string3);
      assertSame(string1, string4);
      assertSame(string1, string6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals("1m$juH3S", mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("^[`[Q=8_vExZs.{f", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string7 = "o";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string5, string7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // o
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoAdminPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string1 = "port";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      
      String string2 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int0 = 542;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder2.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      TimeValue timeValue0 = new TimeValue(mongoDBRiverDefinition0.DEFAULT_DB_PORT);
      assertNotNull(timeValue0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder4 = mongoDBRiverDefinition_Bulk_Builder3.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder4, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder3.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals(542, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder5 = mongoDBRiverDefinition_Bulk_Builder3.concurrentRequests(mongoDBRiverDefinition0.DEFAULT_DB_PORT);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder5, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(boolean1 == boolean0);
      
      int int1 = mongoDBRiverDefinition0.getSocketTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(boolean0 == boolean1);
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.parentTypes(set0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertFalse(boolean0 == boolean1);
      
      String string3 = mongoDBRiverDefinition0.getIndexName();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      assertNotNull(bufferRecycler0);
      assertEquals(2000, BufferRecycler.DEFAULT_WRITE_CONCAT_BUFFER_LEN);
      
      boolean boolean2 = false;
      IOContext iOContext0 = new IOContext(bufferRecycler0, mongoDBRiverDefinition_Builder0, boolean2);
      assertNotNull(iOContext0);
      assertFalse(iOContext0.isResourceManaged());
      assertNull(iOContext0.getEncoding());
      assertFalse(boolean2 == boolean0);
      assertEquals(2000, BufferRecycler.DEFAULT_WRITE_CONCAT_BUFFER_LEN);
      
      PipedWriter pipedWriter0 = new PipedWriter();
      assertNotNull(pipedWriter0);
      
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = 286768933;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.riverName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      ByteSizeValue byteSizeValue0 = Translog.INACTIVE_SHARD_TRANSLOG_BUFFER;
      assertNotNull(byteSizeValue0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkSize(byteSizeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder2.disableIndexRefresh(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder1.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      BigFloatArrayList bigFloatArrayList0 = new BigFloatArrayList();
      assertNotNull(bigFloatArrayList0);
      assertEquals(0L, bigFloatArrayList0.size());
      
      int int1 = 0;
      OrdinalsBuilder ordinalsBuilder0 = new OrdinalsBuilder(mongoDBRiverDefinition0.DEFAULT_BULK_ACTIONS);
      assertNotNull(ordinalsBuilder0);
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(int0 == int1);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      float float0 = 0.0F;
      MultiOrdinals multiOrdinals0 = new MultiOrdinals(ordinalsBuilder0, float0);
      assertNotNull(multiOrdinals0);
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(0L, multiOrdinals0.getNumOrds());
      assertEquals(1L, multiOrdinals0.getMaxOrd());
      assertFalse(multiOrdinals0.isMultiValued());
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(int0 == int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      
      FloatArrayAtomicFieldData.WithOrdinals floatArrayAtomicFieldData_WithOrdinals0 = new FloatArrayAtomicFieldData.WithOrdinals(bigFloatArrayList0, int1, multiOrdinals0);
      assertNotNull(floatArrayAtomicFieldData_WithOrdinals0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(0L, multiOrdinals0.getNumOrds());
      assertEquals(1L, multiOrdinals0.getMaxOrd());
      assertFalse(multiOrdinals0.isMultiValued());
      assertEquals(0, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertEquals(0L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.of(mongoDBRiverDefinition0.SECONDARY_READ_PREFERENCE_FIELD, (Object) floatArrayAtomicFieldData_WithOrdinals0);
      assertNotNull(immutableSortedMap0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(0L, multiOrdinals0.getNumOrds());
      assertEquals(1L, multiOrdinals0.getMaxOrd());
      assertFalse(multiOrdinals0.isMultiValued());
      assertEquals(0, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertEquals(0L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, immutableSortedMap0);
      assertNotNull(riverSettings0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(0L, multiOrdinals0.getNumOrds());
      assertEquals(1L, multiOrdinals0.getMaxOrd());
      assertFalse(multiOrdinals0.isMultiValued());
      assertEquals(0, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertEquals(0L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      
      Environment environment0 = new Environment();
      assertNotNull(environment0);
      
      TreeSet<ScriptEngineService> treeSet0 = new TreeSet<ScriptEngineService>();
      assertNotNull(treeSet0);
      
      NodeSettingsService nodeSettingsService0 = new NodeSettingsService(immutableSettings0);
      assertNotNull(nodeSettingsService0);
      
      ThreadPool threadPool0 = new ThreadPool(immutableSettings0, nodeSettingsService0);
      assertNotNull(threadPool0);
      
      ResourceWatcherService resourceWatcherService0 = new ResourceWatcherService(immutableSettings0, threadPool0);
      assertNotNull(resourceWatcherService0);
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      ScriptService scriptService0 = new ScriptService(immutableSettings0, environment0, treeSet0, resourceWatcherService0);
      assertNotNull(scriptService0);
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = MongoDBRiverDefinition.parseSettings(mongoDBRiverDefinition0.SSL_CONNECTION_FIELD, mongoDBRiverDefinition0.SCRIPT_FIELD, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0L, bigFloatArrayList0.size());
      assertEquals(0, ordinalsBuilder0.getNumSingleValuedDocs());
      assertEquals(0, ordinalsBuilder0.getNumMultiValuesDocs());
      assertEquals(1000, ordinalsBuilder0.maxDoc());
      assertEquals(0L, ordinalsBuilder0.currentOrdinal());
      assertEquals(0L, ordinalsBuilder0.getNumOrds());
      assertEquals(0, ordinalsBuilder0.getNumDocsWithValue());
      assertEquals(0, ordinalsBuilder0.getTotalNumOrds());
      assertFalse(ordinalsBuilder0.isMultiValued());
      assertEquals(0L, multiOrdinals0.getNumOrds());
      assertEquals(1L, multiOrdinals0.getMaxOrd());
      assertFalse(multiOrdinals0.isMultiValued());
      assertEquals(0, floatArrayAtomicFieldData_WithOrdinals0.getNumDocs());
      assertTrue(floatArrayAtomicFieldData_WithOrdinals0.isValuesOrdered());
      assertEquals(0L, floatArrayAtomicFieldData_WithOrdinals0.getNumberUniqueValues());
      assertFalse(floatArrayAtomicFieldData_WithOrdinals0.isMultiValued());
      assertEquals(Lifecycle.State.INITIALIZED, resourceWatcherService0.lifecycleState());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertEquals("ssl", mongoDBRiverDefinition1.getTypeName());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertEquals("ssl", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("ssl", mongoDBRiverDefinition1.getMongoDb());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertEquals("ssl", mongoDBRiverDefinition1.getIndexName());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("ssl", mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertEquals("script", mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(0.5F, OrdinalsBuilder.DEFAULT_ACCEPTABLE_OVERHEAD_RATIO, 0.01F);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoCollection();
      assertNotNull(string1);
      assertSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(286768933, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("", string1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int2 = 0;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.socketTimeout(int2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertFalse(int2 == int0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(boolean0 == boolean1);
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      int int0 = 380;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      BSONTimestamp bSONTimestamp1 = new BSONTimestamp();
      assertNotNull(bSONTimestamp1);
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      
      int int1 = bSONTimestamp0.compareTo(bSONTimestamp1);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertNotSame(bSONTimestamp1, bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder0.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      
      String string1 = "l*";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getScript();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      long long0 = (-1165L);
      int int2 = (-924);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      TimeValue timeValue0 = new TimeValue(long0);
      assertNotNull(timeValue0);
      
      long long1 = 128L;
      TimeValue timeValue1 = TimeValue.timeValueMinutes(long1);
      assertNotNull(timeValue1);
      assertNotSame(timeValue1, timeValue0);
      assertFalse(long1 == long0);
      assertFalse(timeValue1.equals((Object)timeValue0));
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNotSame(timeValue0, timeValue1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertFalse(timeValue0.equals((Object)timeValue1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean1 = true;
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean2 = mongoDBRiverDefinition0.isMongoSSLVerifyCertificate();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertTrue(boolean2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertEquals(0, bSONTimestamp0.getInc());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      String string0 = "";
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string1 = "indices/optimize";
      String string2 = "I40C@A$-Q%V7!79M$";
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "\"n$9h9{x.L4U";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "org.elasticsearch.search.aggregations.AggregationBuilder";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = "J5N0\"bg.$/X:HeR";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.typeName(string3);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      
      boolean boolean1 = mongoDBRiverDefinition0.isDropCollection();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = null;
      String string1 = "+PS&HSJET'UpRH|/?nU";
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "W";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.script(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.skipInitialImport(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(boolean0 == boolean1);
      
      int int0 = bSONTimestamp0.getTime();
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, int0);
      
      String string1 = "\u0443\u0439\u0442\u0435";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder3.mongoCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean2 = mongoDBRiverDefinition0.isStoreStatistics();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder6.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("W", mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = "Jr}I";
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-7);
      byteArray0[0] = byte0;
      int int1 = 0;
      BSONByteBuffer bSONByteBuffer0 = BSONByteBuffer.wrap(byteArray0, int0, int1);
      assertNotNull(bSONByteBuffer0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-7)}, byteArray0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=1]", bSONByteBuffer0.toString());
      assertTrue(int1 == int0);
      assertTrue(int0 == int1);
      
      LazyBSONCallback lazyBSONCallback0 = new LazyBSONCallback();
      assertNotNull(lazyBSONCallback0);
      
      LazyWriteableDBObject lazyWriteableDBObject0 = new LazyWriteableDBObject(bSONByteBuffer0, mongoDBRiverDefinition0.DEFAULT_BULK_ACTIONS, lazyBSONCallback0);
      assertNotNull(lazyWriteableDBObject0);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-7)}, byteArray0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=1]", bSONByteBuffer0.toString());
      assertFalse(lazyWriteableDBObject0.isPartialObject());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertTrue(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      BasicDBObject basicDBObject1 = basicDBObject0.append(string2, lazyWriteableDBObject0);
      assertNotNull(basicDBObject1);
      assertEquals(1, byteArray0.length);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertArrayEquals(new byte[] {(byte) (-7)}, byteArray0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=1]", bSONByteBuffer0.toString());
      assertFalse(lazyWriteableDBObject0.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertEquals(1, byteArray0.length);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertSame(basicDBObject0, basicDBObject1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(basicDBObject1, basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertArrayEquals(new byte[] {(byte) (-7)}, byteArray0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(basicDBObject0.isEmpty());
      assertEquals(1, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=1]", bSONByteBuffer0.toString());
      assertFalse(lazyWriteableDBObject0.isPartialObject());
      assertEquals(1, basicDBObject1.size());
      assertFalse(basicDBObject1.isEmpty());
      assertFalse(basicDBObject1.isPartialObject());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(int0 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(int1 == int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = bSONTimestamp0.toString();
      assertNotNull(string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals("TS time:null inc:0", string3);
      
      boolean boolean3 = bSONTimestamp0.equals(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean4 = FileSystemHandling.appendLineToFile(evoSuiteFile0, mongoDBRiverDefinition1.THROTTLE_SIZE_FIELD);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition1.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertEquals("W", mongoDBRiverDefinition1.getScript());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition1.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition1.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertFalse(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertFalse(boolean4);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean5 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder3.mongoUseSSL(boolean5);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean4);
      assertTrue(boolean0 == boolean2);
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      
      boolean boolean6 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder0.dropCollection(boolean6);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertFalse(boolean6 == boolean1);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean5);
      
      BasicDBObject basicDBObject2 = new BasicDBObject();
      assertNotNull(basicDBObject2);
      assertTrue(basicDBObject2.isEmpty());
      assertFalse(basicDBObject2.isPartialObject());
      assertEquals(0, basicDBObject2.size());
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      
      String string4 = "2^(>H`4w]eS)+-D>M;";
      BasicDBObject basicDBObject3 = basicDBObject2.append(string4, mongoDBRiverDefinition_Builder8);
      assertNotNull(basicDBObject3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(basicDBObject2, basicDBObject3);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertNotSame(basicDBObject3, basicDBObject1);
      assertNotSame(basicDBObject3, basicDBObject0);
      assertSame(basicDBObject3, basicDBObject2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertFalse(basicDBObject2.isPartialObject());
      assertEquals(1, basicDBObject2.size());
      assertFalse(basicDBObject2.isEmpty());
      assertFalse(basicDBObject3.isEmpty());
      assertFalse(basicDBObject3.isPartialObject());
      assertEquals(1, basicDBObject3.size());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean4);
      assertTrue(boolean0 == boolean2);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(basicDBObject3.equals((Object)basicDBObject1));
      assertFalse(basicDBObject3.equals((Object)basicDBObject0));
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean6);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject3);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(basicDBObject2, basicDBObject3);
      assertNotSame(basicDBObject2, basicDBObject0);
      assertNotSame(basicDBObject2, basicDBObject1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertNotSame(basicDBObject3, basicDBObject1);
      assertNotSame(basicDBObject3, basicDBObject0);
      assertSame(basicDBObject3, basicDBObject2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertFalse(basicDBObject2.isPartialObject());
      assertEquals(1, basicDBObject2.size());
      assertFalse(basicDBObject2.isEmpty());
      assertFalse(basicDBObject3.isEmpty());
      assertFalse(basicDBObject3.isPartialObject());
      assertEquals(1, basicDBObject3.size());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(basicDBObject2.equals((Object)basicDBObject0));
      assertFalse(basicDBObject2.equals((Object)basicDBObject1));
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean4);
      assertTrue(boolean0 == boolean2);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(basicDBObject3.equals((Object)basicDBObject1));
      assertFalse(basicDBObject3.equals((Object)basicDBObject0));
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean6);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      
      String string5 = mongoDBRiverDefinition0.getScript();
      assertNotNull(string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      assertSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("\u0443\u0439\u0442\u0435", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("W", mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean1);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean4);
      assertTrue(boolean0 == boolean2);
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals("W", string5);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      String string0 = "\"n$9h9{x.L4U";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      BasicDBObject basicDBObject0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "org.elasticsearch.search.aggregations.AggregationBuilder";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = "J5N0\"bg.$/X:HeR";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder5.typeName(string3);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      Set<String> set1 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder1.statisticsIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      
      BasicDBObject basicDBObject1 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNull(basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("org.elasticsearch.search.aggregations.AggregationBuilder", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("\"n$9h9{x.L4U", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("J5N0\"bg.$/X:HeR", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "index";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.riverName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoClientOptions mongoClientOptions0 = null;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoClientOptions(mongoClientOptions0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder2.dropCollection(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder2.mongoGridFS(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int0 = mongoDBRiverDefinition0.getConnectTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, int0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean3 = mongoDBRiverDefinition0.isMongoGridFS();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean4 = mongoDBRiverDefinition0.isSkipInitialImport();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean0 == boolean3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean4);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean5 = mongoDBRiverDefinition0.isMongoGridFS();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean5);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean6 = mongoDBRiverDefinition0.isDisableIndexRefresh();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean6 == boolean5);
      assertFalse(boolean6 == boolean3);
      assertTrue(boolean6 == boolean4);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean5);
      assertFalse(boolean0 == boolean4);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean6);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean6);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean5);
      assertFalse(boolean0 == boolean4);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("index", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("index", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean6);
      assertTrue(boolean0 == boolean3);
      assertTrue(boolean0 == boolean5);
      assertFalse(boolean0 == boolean4);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      String string0 = "5RH+6-1rO";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoCollection(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.typeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      String string2 = ";r1n&(,Zu 6";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder5.riverName(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(";r1n&(,Zu 6", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean1 = mongoDBRiverDefinition0.isStoreStatistics();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(";r1n&(,Zu 6", mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("5RH+6-1rO", mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      int int0 = (-862);
      Random.setNextRandom(int0);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.dropCollection(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      
      String string1 = "mongodb";
      boolean boolean3 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string1);
      assertSame(string1, string0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean4 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      
      boolean boolean5 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean5);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertEquals("null.null", string2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder1.mongoLocalUser(mongoDBRiverDefinition0.SSL_VERIFY_CERT_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean6 = mongoDBRiverDefinition0.isDropCollection();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6 == boolean5);
      assertTrue(boolean6 == boolean0);
      assertFalse(boolean6 == boolean3);
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean2);
      assertTrue(boolean6);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertTrue(boolean0 == boolean6);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean7 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertTrue(boolean0 == boolean6);
      assertTrue(boolean7 == boolean1);
      assertTrue(boolean7 == boolean4);
      assertFalse(boolean7 == boolean6);
      assertFalse(boolean7 == boolean0);
      assertTrue(boolean7 == boolean2);
      assertTrue(boolean7 == boolean3);
      assertTrue(boolean7 == boolean5);
      assertFalse(boolean7);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean8 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertTrue(boolean0 == boolean6);
      assertFalse(boolean0 == boolean7);
      assertTrue(boolean8 == boolean3);
      assertTrue(boolean8 == boolean5);
      assertFalse(boolean8 == boolean0);
      assertTrue(boolean8 == boolean4);
      assertTrue(boolean8 == boolean1);
      assertFalse(boolean8 == boolean6);
      assertTrue(boolean8 == boolean2);
      assertTrue(boolean8 == boolean7);
      assertFalse(boolean8);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      boolean boolean9 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertTrue(boolean0 == boolean6);
      assertFalse(boolean0 == boolean7);
      assertFalse(boolean0 == boolean8);
      assertTrue(boolean9 == boolean4);
      assertTrue(boolean9 == boolean2);
      assertTrue(boolean9 == boolean3);
      assertFalse(boolean9 == boolean6);
      assertTrue(boolean9 == boolean1);
      assertTrue(boolean9 == boolean5);
      assertTrue(boolean9 == boolean7);
      assertFalse(boolean9 == boolean0);
      assertTrue(boolean9 == boolean8);
      assertFalse(boolean9);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      byte byte0 = (byte) (-122);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      Binary binary0 = new Binary(byte0, byteArray0);
      assertNotNull(binary0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-122), (byte) (-122)}, byteArray0);
      assertEquals(2, binary0.length());
      assertEquals((byte) (-122), binary0.getType());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder3.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      String string0 = "_Czj(fin:Up.d#aQ";
      boolean boolean0 = false;
      boolean boolean1 = false;
      String string1 = "P0";
      int int0 = 43;
      int int1 = (-2203);
      boolean boolean2 = true;
      InetAddress inetAddress0 = null;
      String string2 = "";
      ServerAddress serverAddress0 = new ServerAddress(string2);
      assertNotNull(serverAddress0);
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(27017, serverAddress0.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress0.toString());
      assertEquals("127.0.0.1", serverAddress0.getHost());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      String string3 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertNotNull(metaData0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      
      Settings settings0 = metaData0.transientSettings();
      assertNotNull(settings0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.of();
      assertNotNull(immutableSortedMap0);
      
      RiverSettings riverSettings0 = new RiverSettings(settings0, immutableSortedMap0);
      assertNotNull(riverSettings0);
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      
      ScriptService scriptService0 = null;
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string2, string3, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string4 = mongoDBRiverDefinition0.getRiverName();
      assertNotNull(string4);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertSame(string2, string4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string2);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals("", string4);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(string2, string4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string2);
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getRiverName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals("org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals("_na_", metaData0.uuid());
      assertEquals(0L, metaData0.version());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0, metaData0.numberOfShards());
      assertEquals(0, metaData0.totalNumberOfShards());
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string2));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      String string0 = "Lj/Np$Q>9wld";
      String string1 = "";
      boolean boolean0 = true;
      String string2 = MongoDBRiverDefinition.addRemovePrefix(string0, string1, boolean0);
      assertNotNull(string2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(string1, string2);
      assertSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      int int0 = (-1911);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      
      int int1 = 2058;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.concurrentRequests(int1);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder2);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals((-1911), mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(2058, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-72);
      byteArray0[0] = byte0;
      byte byte1 = (byte)94;
      byteArray0[1] = byte1;
      byte byte2 = (byte)75;
      byteArray0[2] = byte2;
      byte byte3 = (byte)81;
      byteArray0[3] = byte3;
      boolean boolean1 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-72), (byte)94, (byte)75, (byte)81}, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ByteSizeValue byteSizeValue0 = MongoDBRiverDefinition.DEFAULT_BULK_SIZE;
      assertNotNull(byteSizeValue0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.dropCollection(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      
      String string3 = ".";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      
      String string4 = "/GB0iqU5:|F$K,9";
      String string5 = "XZz/Sf$b[";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder0.scriptType(string5);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.mongoLocalUser(string4);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertFalse(boolean0 == boolean1);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder6.mongoSecondaryReadPreference(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string6 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string6);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string4));
      assertEquals("null.null", string6);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string7 = mongoDBRiverDefinition0.getScriptType();
      assertNotNull(string7);
      assertNotSame(string7, string4);
      assertNotSame(string7, string0);
      assertNotSame(string7, string1);
      assertNotSame(string7, string6);
      assertSame(string7, string5);
      assertNotSame(string7, string3);
      assertNotSame(string7, string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertEquals("XZz/Sf$b[", string7);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string8 = mongoDBRiverDefinition0.getMongoCollection();
      assertNull(string8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string9 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string9);
      assertNotSame(string9, string1);
      assertNotSame(string9, string7);
      assertNotSame(string9, string2);
      assertNotSame(string9, string5);
      assertNotSame(string9, string3);
      assertNotSame(string9, string0);
      assertSame(string9, string4);
      assertNotSame(string9, string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string6));
      assertEquals("/GB0iqU5:|F$K,9", string9);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string10 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string10, string7);
      assertNotSame(string10, string6);
      assertNotSame(string10, string4);
      assertSame(string10, string2);
      assertSame(string10, string1);
      assertNotSame(string10, string9);
      assertNotSame(string10, string5);
      assertNotSame(string10, string0);
      assertNotSame(string10, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder6);
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("/GB0iqU5:|F$K,9", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("XZz/Sf$b[", mongoDBRiverDefinition0.getScriptType());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string10.equals((Object)string7));
      assertFalse(string10.equals((Object)string6));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string5));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string3));
      assertEquals("", string10);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      int int0 = 12;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "type";
      boolean boolean1 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.storeStatistics(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      
      String string1 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoAdminUser(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean0 == boolean1);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder2.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(12, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals(12, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(boolean0 == boolean1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("null.null", string2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getExcludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(12, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(boolean0 == boolean1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string3 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(string3, string1);
      assertEquals(12, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(boolean0 == boolean1);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals("", string3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      int int1 = mongoDBRiverDefinition0.getThrottleSize();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(12, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertTrue(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(boolean0 == boolean1);
      assertTrue(int1 == int0);
      assertEquals(12, int1);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      int int0 = (-862);
      Random.setNextRandom(int0);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "mongodb";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder0.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.dropCollection(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder0.advancedTransformation(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoSSLVerifyCertificate(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean2);
      
      String string1 = "mongodb";
      boolean boolean3 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string1);
      assertSame(string1, string0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean4 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
      
      int int1 = (-2329);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertFalse(int1 == int0);
      
      boolean boolean5 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder1.skipInitialImport(boolean5);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("null.null", string2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder1.mongoLocalUser(mongoDBRiverDefinition0.SSL_VERIFY_CERT_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean6 = mongoDBRiverDefinition0.isDropCollection();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean6 == boolean1);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean5);
      assertFalse(boolean6);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean6);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean7 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean6);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean7 == boolean2);
      assertTrue(boolean7 == boolean6);
      assertTrue(boolean7 == boolean3);
      assertTrue(boolean7 == boolean5);
      assertTrue(boolean7 == boolean4);
      assertTrue(boolean7 == boolean1);
      assertFalse(boolean7 == boolean0);
      assertFalse(boolean7);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean8 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean6);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean7);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean8 == boolean4);
      assertTrue(boolean8 == boolean5);
      assertTrue(boolean8 == boolean6);
      assertTrue(boolean8 == boolean3);
      assertTrue(boolean8 == boolean7);
      assertFalse(boolean8 == boolean0);
      assertTrue(boolean8 == boolean1);
      assertTrue(boolean8 == boolean2);
      assertFalse(boolean8);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      boolean boolean9 = mongoDBRiverDefinition0.isAdvancedTransformation();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("mongodb", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertTrue(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals((-2329), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean0 == boolean6);
      assertFalse(boolean0 == boolean5);
      assertFalse(boolean0 == boolean3);
      assertFalse(boolean0 == boolean7);
      assertFalse(boolean0 == boolean8);
      assertFalse(boolean0 == boolean4);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean9 == boolean3);
      assertFalse(boolean9 == boolean2);
      assertFalse(boolean9 == boolean5);
      assertFalse(boolean9 == boolean6);
      assertFalse(boolean9 == boolean4);
      assertFalse(boolean9 == boolean1);
      assertTrue(boolean9 == boolean0);
      assertFalse(boolean9 == boolean7);
      assertFalse(boolean9 == boolean8);
      assertTrue(boolean9);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      byte byte0 = (byte) (-122);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      Binary binary0 = new Binary(byte0, byteArray0);
      assertNotNull(binary0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-122), (byte) (-122)}, byteArray0);
      assertEquals(2, binary0.length());
      assertEquals((byte) (-122), binary0.getType());
      
      // Undeclared exception!
      try { 
        mongoDBRiverDefinition_Builder3.initialTimestamp(binary0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // gtid must encode two unsigned longs (128 total bits in length)
         //
         verifyException("org.elasticsearch.river.mongodb.Timestamp$GTID", e);
      }
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "_Czj(fin:Up.d#aQ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "P0";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int0 = 43;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      
      int int1 = (-2203);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      
      boolean boolean2 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean0 == boolean1);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      InetAddress inetAddress0 = null;
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0, mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(serverAddress0);
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(1, serverAddress0.getPort());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder5.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = "";
      ServerAddress serverAddress1 = new ServerAddress(string3);
      assertNotNull(serverAddress1);
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress1, serverAddress0);
      assertNotNull(immutableList0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(immutableList0.contains(serverAddress1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ImmutableList<ServerAddress> immutableList1 = ImmutableList.copyOf((Collection<? extends ServerAddress>) immutableList0);
      assertNotNull(immutableList1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder1.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder5.script(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder5.riverIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      
      String string5 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNotNull(string5);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertSame(string5, string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(string1, string5);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1 == boolean2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals("P0", string5);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      String string0 = "";
      String string1 = "mongoServersSettings: ";
      ImmutableSettings immutableSettings0 = (ImmutableSettings)ImmutableSettings.EMPTY;
      assertNotNull(immutableSettings0);
      
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      RiverSettings riverSettings0 = new RiverSettings(immutableSettings0, hashMap0);
      assertNotNull(riverSettings0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      ScriptService scriptService0 = null;
      boolean boolean0 = false;
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      String string2 = "";
      boolean boolean1 = false;
      boolean boolean2 = true;
      String string3 = null;
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string3);
      assertNotNull(basicDBObject0);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      
      String string4 = "M]q";
      String string5 = "+e8eE$pj&j4SS";
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings(string4, string5, riverSettings0, scriptService0);
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("M]q", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("M]q", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("M]q", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("+e8eE$pj&j4SS", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("M]q", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("M]q", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string6 = mongoDBRiverDefinition0.getScript();
      assertNull(string6);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals("M]q", mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("M]q", mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("M]q", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("+e8eE$pj&j4SS", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("M]q", mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("M]q", mongoDBRiverDefinition0.getRiverName());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      LinkedList<ServerAddress> linkedList0 = new LinkedList<ServerAddress>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      String string0 = "";
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean1 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.statisticsTypeName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "indices/optimize";
      String string2 = "I40C@A$-Q%V7!79M$";
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(boolean1 == boolean0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = null;
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject(string3);
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      ESLoggerFactory eSLoggerFactory0 = mock(ESLoggerFactory.class, new ViolatedAssumptionAnswer());
      ESLoggerFactory.setDefaultFactory(eSLoggerFactory0);
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNull(timestamp0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(boolean1 == boolean0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "_Czj(fin:Up.d#aQ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoGridFS(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "P0";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "dS pSHf";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.mongoAdminPassword(string2);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals("dS pSHf", string3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int0 = 43;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.connectTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      
      int int1 = (-2203);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.socketTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals(0, basicDBObject0.size());
      assertFalse(basicDBObject0.isPartialObject());
      assertTrue(basicDBObject0.isEmpty());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      InetAddress inetAddress0 = null;
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0, mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(serverAddress0);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = "";
      ServerAddress serverAddress1 = new ServerAddress(string4);
      assertNotNull(serverAddress1);
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress1, serverAddress0);
      assertNotNull(immutableList0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(serverAddress0, serverAddress1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(serverAddress1, serverAddress0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(3, immutableList0.size());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(immutableList0.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      ImmutableList<ServerAddress> immutableList1 = ImmutableList.copyOf((Collection<? extends ServerAddress>) immutableList0);
      assertNotNull(immutableList1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(serverAddress0, serverAddress1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder1.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNotSame(serverAddress0, serverAddress1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder5.script(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("dS pSHf", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string5 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder5.riverIndexName(string5);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertNotSame(string1, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertNotSame(string5, string2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string5));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "_Czj(fin:Up.d#aQ";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      boolean boolean1 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoSSLVerifyCertificate(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      
      String string1 = "P0";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.statisticsTypeName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean2 = false;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean2);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean2 == boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder4.riverIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      
      int int0 = (-41);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder8 = mongoDBRiverDefinition_Builder2.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder8, mongoDBRiverDefinition_Builder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminPassword();
      assertNotNull(string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int1 = 43;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder9 = mongoDBRiverDefinition_Builder2.connectTimeout(int1);
      assertNotNull(mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder9, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertFalse(int1 == int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      
      int int2 = (-2203);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder10 = mongoDBRiverDefinition_Builder2.socketTimeout(int2);
      assertNotNull(mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder10, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder11 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder11, mongoDBRiverDefinition_Builder7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      
      BasicDBObject basicDBObject0 = mongoDBRiverDefinition0.getMongoCollectionFilter();
      assertNotNull(basicDBObject0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      InetAddress inetAddress0 = null;
      ServerAddress serverAddress0 = new ServerAddress(inetAddress0, mongoDBRiverDefinition0.DEFAULT_CONCURRENT_REQUESTS);
      assertNotNull(serverAddress0);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = "";
      ServerAddress serverAddress1 = new ServerAddress(string3);
      assertNotNull(serverAddress1);
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of(serverAddress0, serverAddress1, serverAddress0);
      assertNotNull(immutableList0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(serverAddress0, serverAddress1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(string3, string2);
      assertNotSame(serverAddress1, serverAddress0);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(immutableList0.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      ImmutableList<ServerAddress> immutableList1 = ImmutableList.copyOf((Collection<? extends ServerAddress>) immutableList0);
      assertNotNull(immutableList1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertNotSame(serverAddress0, serverAddress1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(string3, string2);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder12 = mongoDBRiverDefinition_Builder1.mongoServers(immutableList1);
      assertNotNull(mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertNotSame(serverAddress0, serverAddress1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(string3, string2);
      assertNotSame(serverAddress1, serverAddress0);
      assertSame(immutableList0, immutableList1);
      assertSame(immutableList1, immutableList0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder12, mongoDBRiverDefinition_Builder8);
      assertEquals(27017, serverAddress0.defaultPort());
      assertEquals("192.168.1.42/192.168.1.42:1", serverAddress0.toString());
      assertEquals("192.168.1.42", serverAddress0.getHost());
      assertEquals(1, serverAddress0.getPort());
      assertEquals("127.0.0.1", serverAddress0.defaultHost());
      assertEquals("127.0.0.1", serverAddress1.defaultHost());
      assertEquals("/127.0.0.1:27017", serverAddress1.toString());
      assertEquals("127.0.0.1", serverAddress1.getHost());
      assertEquals(27017, serverAddress1.getPort());
      assertEquals(27017, serverAddress1.defaultPort());
      assertEquals(3, immutableList0.size());
      assertEquals(3, immutableList1.size());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertTrue(immutableList0.contains(serverAddress1));
      assertTrue(immutableList1.contains(serverAddress1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(serverAddress0.equals((Object)serverAddress1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(serverAddress1.equals((Object)serverAddress0));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder13 = mongoDBRiverDefinition_Builder5.script(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_TYPE_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder13, mongoDBRiverDefinition_Builder3);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = "org.elasticsearch.index.fielddata.ordinals.SinglePackedOrdinals";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder14 = mongoDBRiverDefinition_Builder5.riverIndexName(string4);
      assertNotNull(mongoDBRiverDefinition_Builder14);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder14, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      
      String string5 = mongoDBRiverDefinition0.getMongoDb();
      assertNull(string5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int3 = mongoDBRiverDefinition0.getSocketTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(int3 == int2);
      assertTrue(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals((-41), int3);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string6 = mongoDBRiverDefinition0.getStatisticsTypeName();
      assertNotNull(string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string1, string6);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals("P0", string6);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string7 = mongoDBRiverDefinition0.getMongoDb();
      assertNull(string7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder8);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(string1, string6);
      assertNotSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder10);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder12);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder14);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder11);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder13);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder9);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder8);
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("_Czj(fin:Up.d#aQ", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("P0", mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("P0", mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-41), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean0 == boolean1);
      assertFalse(boolean1 == boolean3);
      assertFalse(boolean1 == boolean0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      int int0 = (-1140);
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.socketTimeout(int0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoGridFS(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk1 = mongoDBRiverDefinition_Bulk_Builder0.build();
      assertNotNull(mongoDBRiverDefinition_Bulk1);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.disableIndexRefresh(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string0 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals("", string0);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string1 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(string1, string0);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertEquals("", string1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition mongoDBRiverDefinition1 = mongoDBRiverDefinition_Builder1.build();
      assertNotNull(mongoDBRiverDefinition1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals((-1140), mongoDBRiverDefinition1.getSocketTimeout());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      int int1 = mongoDBRiverDefinition0.getThrottleSize();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      TreeMap<Object, JsonParser.Feature> treeMap0 = new TreeMap<Object, JsonParser.Feature>();
      assertNotNull(treeMap0);
      assertEquals(0, treeMap0.size());
      
      BasicDBObject basicDBObject0 = new BasicDBObject(treeMap0);
      assertNotNull(basicDBObject0);
      assertEquals(0, treeMap0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder3.mongoCollectionFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals(0, treeMap0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertFalse(int0 == int1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      
      int int2 = mongoDBRiverDefinition0.getConnectTimeout();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(0, int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk2 = mongoDBRiverDefinition0.getBulk();
      assertNotNull(mongoDBRiverDefinition_Bulk2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition_Bulk2, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Bulk2, mongoDBRiverDefinition_Bulk1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1, mongoDBRiverDefinition_Bulk2.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk2.getBulkActions());
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(mongoDBRiverDefinition_Bulk2.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getRiverIndexName();
      assertNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string3 = mongoDBRiverDefinition0.getScript();
      assertNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk2);
      assertNotSame(mongoDBRiverDefinition_Bulk1, mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNotSame(mongoDBRiverDefinition0, mongoDBRiverDefinition1);
      assertEquals(1000, mongoDBRiverDefinition_Bulk1.getBulkActions());
      assertEquals(1, mongoDBRiverDefinition_Bulk1.getConcurrentRequests());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals((-1140), mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(mongoDBRiverDefinition_Bulk1.equals((Object)mongoDBRiverDefinition_Bulk0));
      assertFalse(mongoDBRiverDefinition0.equals((Object)mongoDBRiverDefinition1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = mongoDBRiverDefinition1.getMongoDb();
      assertNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertNotSame(mongoDBRiverDefinition1, mongoDBRiverDefinition0);
      assertNull(mongoDBRiverDefinition1.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition1.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition1.getIncludeCollection());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition1.isDropCollection());
      assertFalse(mongoDBRiverDefinition1.isMongoSecondaryReadPreference());
      assertEquals((-1140), mongoDBRiverDefinition1.getSocketTimeout());
      assertNull(mongoDBRiverDefinition1.getMongoCollection());
      assertNull(mongoDBRiverDefinition1.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition1.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition1.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition1.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition1.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition1.isStoreStatistics());
      assertNull(mongoDBRiverDefinition1.getTypeName());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalUser());
      assertEquals("", mongoDBRiverDefinition1.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition1.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition1.getIndexName());
      assertTrue(mongoDBRiverDefinition1.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition1.getRiverName());
      assertFalse(mongoDBRiverDefinition1.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition1.getConnectTimeout());
      assertFalse(mongoDBRiverDefinition1.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition1.getScript());
      assertNull(mongoDBRiverDefinition1.getScriptType());
      assertNull(mongoDBRiverDefinition1.getRiverIndexName());
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(mongoDBRiverDefinition1.equals((Object)mongoDBRiverDefinition0));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string5 = "UEF";
      String string6 = "mongodb";
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string5, string6, boolean1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // mongodb
         // ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      String string0 = "8sQ!C0}<ldclAX";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addRemovePrefix(string0, string0, boolean0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to com.mongodb.DBObject
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "type";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoSecondaryReadPreference(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.mongoUseSSL(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoLocalPassword(string0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("type", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("type", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean2 = mongoDBRiverDefinition0.isMongoSecondaryReadPreference();
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("type", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertTrue(mongoDBRiverDefinition0.isMongoUseSSL());
      assertTrue(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("type", mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test85()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      BSONTimestamp bSONTimestamp0 = new BSONTimestamp();
      assertNotNull(bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.initialTimestamp(bSONTimestamp0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(0, bSONTimestamp0.getInc());
      
      int int0 = 380;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)120;
      byteArray0[0] = byte0;
      byte byte1 = (byte)70;
      byteArray0[1] = byte1;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(2, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)120, (byte)70}, byteArray0);
      assertFalse(boolean0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.throttleSize(int0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      
      BSONTimestamp bSONTimestamp1 = new BSONTimestamp();
      assertNotNull(bSONTimestamp1);
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      
      int int1 = bSONTimestamp0.compareTo(bSONTimestamp1);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertNotSame(bSONTimestamp1, bSONTimestamp0);
      assertEquals(0, bSONTimestamp0.getInc());
      assertEquals(0, bSONTimestamp1.getInc());
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertTrue(bSONTimestamp1.equals((Object)bSONTimestamp0));
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      String string1 = "l*";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string2 = mongoDBRiverDefinition0.getScript();
      assertNull(string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.flushInterval(mongoDBRiverDefinition0.DEFAULT_FLUSH_INTERVAL);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      long long0 = (-1165L);
      int int2 = (-924);
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder0.bulkActions(int2);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      TimeValue timeValue0 = new TimeValue(long0);
      assertNotNull(timeValue0);
      
      long long1 = 128L;
      TimeValue timeValue1 = TimeValue.timeValueMinutes(long1);
      assertNotNull(timeValue1);
      assertNotSame(timeValue1, timeValue0);
      assertFalse(long1 == long0);
      assertFalse(timeValue1.equals((Object)timeValue0));
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder3 = mongoDBRiverDefinition_Bulk_Builder1.flushInterval(timeValue0);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder3);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder3);
      assertNotSame(timeValue0, timeValue1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder3, mongoDBRiverDefinition_Bulk_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(long0 == long1);
      assertFalse(timeValue0.equals((Object)timeValue1));
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      boolean boolean1 = true;
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(string3, string0);
      assertNotSame(string3, string1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(string3.equals((Object)string1));
      assertEquals("", string3);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Set<String> set0 = mongoDBRiverDefinition0.getIncludeFields();
      assertNull(set0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      Timestamp<?> timestamp0 = mongoDBRiverDefinition0.getInitialTimestamp();
      assertNotNull(timestamp0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      
      String string4 = mongoDBRiverDefinition0.getTypeName();
      assertNull(string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(bSONTimestamp0, bSONTimestamp1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertEquals(380, mongoDBRiverDefinition0.getThrottleSize());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("l*", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, bSONTimestamp0.getInc());
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertTrue(bSONTimestamp0.equals((Object)bSONTimestamp1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
  }

  @Test(timeout = 11000)
  public void test86()  throws Throwable  {
      String string0 = "L7)3";
      String string1 = null;
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.removePrefix(string0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("org.elasticsearch.river.mongodb.MongoDBRiverDefinition", e);
      }
  }

  @Test(timeout = 11000)
  public void test87()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = new MongoDBRiverDefinition.Bulk(mongoDBRiverDefinition_Bulk_Builder0);
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      String string0 = "wB<I-$om";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      boolean boolean0 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.importAllCollections(boolean0);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      
      BasicDBObject basicDBObject0 = new BasicDBObject();
      assertNotNull(basicDBObject0);
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder3.mongoOplogFilter(basicDBObject0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder4.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("wB<I-$om", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      BasicDBObject basicDBObject1 = mongoDBRiverDefinition0.getMongoOplogFilter();
      assertNotNull(basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(basicDBObject1, basicDBObject0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("wB<I-$om", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(basicDBObject1.isPartialObject());
      assertEquals(0, basicDBObject1.size());
      assertTrue(basicDBObject1.isEmpty());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string1 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("wB<I-$om", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      
      String string2 = mongoDBRiverDefinition0.getMongoAdminUser();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(basicDBObject0, basicDBObject1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertNotSame(string2, string0);
      assertEquals(1, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertFalse(basicDBObject0.isPartialObject());
      assertEquals(0, basicDBObject0.size());
      assertTrue(basicDBObject0.isEmpty());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertEquals("wB<I-$om", mongoDBRiverDefinition0.getIndexName());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertFalse(string2.equals((Object)string0));
      assertEquals("", string2);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
  }

  @Test(timeout = 11000)
  public void test88()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      String string0 = "{V T(";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.indexName(string0);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.mongoLocalUser(string0);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      
      String string1 = "t uzYLv/\\v2JAFH,5O";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder2.statisticsIndexName(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder3.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string2 = mongoDBRiverDefinition0.getMongoOplogNamespace();
      assertNotNull(string2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("null.null", string2);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoClientOptions mongoClientOptions0 = mongoDBRiverDefinition0.getMongoClientOptions();
      assertNull(mongoClientOptions0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = mongoDBRiverDefinition0.getIndexName();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertNotSame(string3, string2);
      assertSame(string3, string0);
      assertNotSame(string3, string1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("{V T(", string3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder0 = new MongoDBRiverDefinition.Bulk.Builder();
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder0);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder1 = mongoDBRiverDefinition_Bulk_Builder0.concurrentRequests(mongoDBRiverDefinition0.DEFAULT_BULK_ACTIONS);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk.Builder mongoDBRiverDefinition_Bulk_Builder2 = mongoDBRiverDefinition_Bulk_Builder1.bulkSize(mongoDBRiverDefinition0.DEFAULT_BULK_SIZE);
      assertNotNull(mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Bulk mongoDBRiverDefinition_Bulk0 = mongoDBRiverDefinition_Bulk_Builder2.build();
      assertNotNull(mongoDBRiverDefinition_Bulk0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.bulk(mongoDBRiverDefinition_Bulk0);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder0, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder2);
      assertSame(mongoDBRiverDefinition_Bulk_Builder1, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder0);
      assertSame(mongoDBRiverDefinition_Bulk_Builder2, mongoDBRiverDefinition_Bulk_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getBulkActions());
      assertEquals(1000, mongoDBRiverDefinition_Bulk0.getConcurrentRequests());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string4 = mongoDBRiverDefinition0.getMongoLocalUser();
      assertNotNull(string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNotSame(string4, string1);
      assertSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(string4, string3);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertEquals("{V T(", string4);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string5 = mongoDBRiverDefinition0.getMongoLocalPassword();
      assertNotNull(string5);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertEquals("", string5);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string6 = mongoDBRiverDefinition0.getRiverName();
      assertNull(string6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string7 = mongoDBRiverDefinition0.getScript();
      assertNull(string7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      int int0 = (-1264);
      Random.setNextRandom(int0);
      String string8 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string8);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertNotSame(string0, string8);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(string0, string4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string8);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      assertNotSame(string8, string3);
      assertSame(string8, string5);
      assertNotSame(string8, string1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertEquals("{V T(", mongoDBRiverDefinition0.getMongoLocalUser());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminUser());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertEquals("t uzYLv/\\v2JAFH,5O", mongoDBRiverDefinition0.getStatisticsIndexName());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertNull(mongoDBRiverDefinition0.getMongoDb());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertEquals("", mongoDBRiverDefinition0.getIncludeCollection());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoGridFS());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertEquals("{V T(", mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isImportAllCollections());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertEquals("", string8);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
  }

  @Test(timeout = 11000)
  public void test89()  throws Throwable  {
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder0 = new MongoDBRiverDefinition.Builder();
      assertNotNull(mongoDBRiverDefinition_Builder0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "ejt~FLu@HR@RjX&55p>";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      String string1 = "host";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder1 = mongoDBRiverDefinition_Builder0.mongoDb(string1);
      assertNotNull(mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertFalse(string1.equals((Object)string0));
      
      boolean boolean1 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder2 = mongoDBRiverDefinition_Builder1.importAllCollections(boolean1);
      assertNotNull(mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder3 = mongoDBRiverDefinition_Builder1.includeCollection(string1);
      assertNotNull(mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder3, mongoDBRiverDefinition_Builder1);
      assertFalse(string1.equals((Object)string0));
      
      String string2 = "org.apache.lucene.index.MergePolicy$OneMerge$1";
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder4 = mongoDBRiverDefinition_Builder2.mongoAdminUser(string2);
      assertNotNull(mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      boolean boolean3 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder5 = mongoDBRiverDefinition_Builder4.mongoGridFS(boolean3);
      assertNotNull(mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      
      boolean boolean4 = true;
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder6 = mongoDBRiverDefinition_Builder4.importAllCollections(boolean4);
      assertNotNull(mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder6, mongoDBRiverDefinition_Builder3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean0);
      
      MongoDBRiverDefinition mongoDBRiverDefinition0 = mongoDBRiverDefinition_Builder5.build();
      assertNotNull(mongoDBRiverDefinition0);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("host", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("org.apache.lucene.index.MergePolicy$OneMerge$1", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("host", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      MongoDBRiverDefinition.Builder mongoDBRiverDefinition_Builder7 = mongoDBRiverDefinition_Builder5.riverIndexName(mongoDBRiverDefinition0.INITIAL_TIMESTAMP_SCRIPT_FIELD);
      assertNotNull(mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder7, mongoDBRiverDefinition_Builder0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("host", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("org.apache.lucene.index.MergePolicy$OneMerge$1", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("host", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      String string3 = mongoDBRiverDefinition0.getIncludeCollection();
      assertNotNull(string3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder0, mongoDBRiverDefinition_Builder6);
      assertNotSame(string3, string0);
      assertSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(string1, string3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder1, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder4);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder2, mongoDBRiverDefinition_Builder7);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder5);
      assertSame(mongoDBRiverDefinition_Builder4, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder3);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder0);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder6);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder7);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder2);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder1);
      assertSame(mongoDBRiverDefinition_Builder5, mongoDBRiverDefinition_Builder4);
      assertNull(mongoDBRiverDefinition0.getStatisticsTypeName());
      assertFalse(mongoDBRiverDefinition0.isStoreStatistics());
      assertTrue(mongoDBRiverDefinition0.isMongoGridFS());
      assertNull(mongoDBRiverDefinition0.getIndexName());
      assertFalse(mongoDBRiverDefinition0.isAdvancedTransformation());
      assertFalse(mongoDBRiverDefinition0.isMongoSSLVerifyCertificate());
      assertFalse(mongoDBRiverDefinition0.isSkipInitialImport());
      assertEquals("", mongoDBRiverDefinition0.getMongoAdminPassword());
      assertNull(mongoDBRiverDefinition0.getStatisticsIndexName());
      assertTrue(mongoDBRiverDefinition0.isImportAllCollections());
      assertEquals("host", mongoDBRiverDefinition0.getMongoDb());
      assertNull(mongoDBRiverDefinition0.getTypeName());
      assertFalse(mongoDBRiverDefinition0.isDisableIndexRefresh());
      assertEquals(0, mongoDBRiverDefinition0.getThrottleSize());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalUser());
      assertNull(mongoDBRiverDefinition0.getMongoCollection());
      assertEquals(0, mongoDBRiverDefinition0.getConnectTimeout());
      assertEquals("org.apache.lucene.index.MergePolicy$OneMerge$1", mongoDBRiverDefinition0.getMongoAdminUser());
      assertEquals(0, mongoDBRiverDefinition0.getSocketTimeout());
      assertNull(mongoDBRiverDefinition0.getRiverName());
      assertFalse(mongoDBRiverDefinition0.isMongoSecondaryReadPreference());
      assertFalse(mongoDBRiverDefinition0.isDropCollection());
      assertEquals("host", mongoDBRiverDefinition0.getIncludeCollection());
      assertFalse(mongoDBRiverDefinition0.isMongoUseSSL());
      assertEquals("", mongoDBRiverDefinition0.getMongoLocalPassword());
      assertNull(mongoDBRiverDefinition0.getScript());
      assertNull(mongoDBRiverDefinition0.getRiverIndexName());
      assertNull(mongoDBRiverDefinition0.getScriptType());
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1 == boolean2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertEquals("host", string3);
      assertEquals(27017, MongoDBRiverDefinition.DEFAULT_DB_PORT);
      assertEquals(1, MongoDBRiverDefinition.DEFAULT_CONCURRENT_REQUESTS);
      assertEquals(1000, MongoDBRiverDefinition.DEFAULT_BULK_ACTIONS);
      
      // Undeclared exception!
      try { 
        MongoDBRiverDefinition.addPrefix(mongoDBRiverDefinition0.EXCLUDE_FIELDS_FIELD, mongoDBRiverDefinition0.TYPE_FIELD);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         // type
         //  ^
         //
         verifyException("com.mongodb.util.JSONParser", e);
      }
  }
}
