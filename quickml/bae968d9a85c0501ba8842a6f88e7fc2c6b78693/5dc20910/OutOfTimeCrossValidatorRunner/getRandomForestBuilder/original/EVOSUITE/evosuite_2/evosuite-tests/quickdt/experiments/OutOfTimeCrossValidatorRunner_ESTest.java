/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 07 05:06:35 GMT 2021
 */

package quickdt.experiments;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import quickdt.experiments.OutOfTimeCrossValidatorRunner;
import quickdt.predictiveModels.PredictiveModelBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutOfTimeCrossValidatorRunner_ESTest extends OutOfTimeCrossValidatorRunner_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      OutOfTimeCrossValidatorRunner outOfTimeCrossValidatorRunner0 = new OutOfTimeCrossValidatorRunner();
      assertNotNull(outOfTimeCrossValidatorRunner0);
      
      int int0 = 7;
      PredictiveModelBuilder predictiveModelBuilder0 = OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int0, int0);
      assertNotNull(predictiveModelBuilder0);
      
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      OutOfTimeCrossValidatorRunner.main(stringArray0);
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      OutOfTimeCrossValidatorRunner outOfTimeCrossValidatorRunner0 = new OutOfTimeCrossValidatorRunner();
      assertNotNull(outOfTimeCrossValidatorRunner0);
      
      String[] stringArray0 = null;
      // Undeclared exception!
      OutOfTimeCrossValidatorRunner.main(stringArray0);
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      OutOfTimeCrossValidatorRunner outOfTimeCrossValidatorRunner0 = new OutOfTimeCrossValidatorRunner();
      assertNotNull(outOfTimeCrossValidatorRunner0);
      
      int int0 = 2;
      PredictiveModelBuilder predictiveModelBuilder0 = OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int0, int0);
      assertNotNull(predictiveModelBuilder0);
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = "yfenrqLau3SPGz1D9";
      stringArray0[0] = string0;
      String string1 = "R;mB_GeJ4*G}~M]+s";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      // Undeclared exception!
      OutOfTimeCrossValidatorRunner.main(stringArray0);
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      int int0 = 0;
      int int1 = 3;
      PredictiveModelBuilder predictiveModelBuilder0 = OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int0, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(predictiveModelBuilder0);
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      int int0 = (-2376);
      int int1 = 31;
      PredictiveModelBuilder predictiveModelBuilder0 = OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int0, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(predictiveModelBuilder0);
      
      int int2 = 125;
      PredictiveModelBuilder predictiveModelBuilder1 = OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int2, int0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(predictiveModelBuilder1.equals((Object)predictiveModelBuilder0));
      assertNotSame(predictiveModelBuilder1, predictiveModelBuilder0);
      assertNotNull(predictiveModelBuilder1);
  }
}
