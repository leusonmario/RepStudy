import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.title("no description");
        java.math.BigDecimal bigDecimal13 = strSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema5.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema18 = strSchema5.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + true + "'", boolean19, true);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema33.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str45 = strSchema44.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strSchema44.format("");
        strSchema44.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray60 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        schema58.setRequired((java.util.List<java.lang.String>) strList61);
        strSchema44.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList61);
        schema22.setEnum((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        java.util.List<java.lang.String> strList70 = strSchema67.getRequired();
        strSchema67.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int73 = strSchema67.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema67.not((io.swagger.oas.models.media.Schema) strSchema74);
        java.lang.Boolean boolean82 = strSchema67.getUniqueItems();
        java.lang.Boolean boolean83 = strSchema67.getNullable();
        io.swagger.oas.models.media.Schema schema85 = strSchema67.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strSchema67.maxItems((java.lang.Integer) (-1));
        strSchema67.setType("default");
        io.swagger.oas.models.media.Schema schema90 = schema22.not((io.swagger.oas.models.media.Schema) strSchema67);
        strSchema67.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal93 = strSchema67.getMultipleOf();
        io.swagger.oas.models.media.Schema schema95 = strSchema67.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        schema11.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        io.swagger.oas.models.media.Schema schema22 = strSchema18.maxLength((java.lang.Integer) 1);
        schema22.setPattern("");
        io.swagger.oas.models.media.Schema schema26 = schema22.maxItems((java.lang.Integer) 10);
        strSchema7.addExtension("default", (java.lang.Object) schema22);
        strSchema7.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean11 = schema10.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal12 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema8.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema12.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean15 = schema14.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema14.getNullable();
        strSchema0.addExtension("default", (java.lang.Object) boolean18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strSchema0.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxLength((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass26 = schema23.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        schema13.setExtensions(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal22 = null;
        schema13.setMinimum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.util.List<java.lang.String> strList17 = strSchema14.getRequired();
        strSchema14.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int20 = strSchema14.getMinLength();
        strSchema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = strSchema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strSchema24.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        schema34.setRequired((java.util.List<java.lang.String>) strList38);
        java.util.List<java.lang.String> strList41 = schema34.getEnum();
        io.swagger.oas.models.media.Schema schema42 = strSchema14.addProperties("hi!", schema34);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema14.discriminator(discriminator43);
        schema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema14);
        io.swagger.oas.models.media.Schema schema47 = schema9.format("no description");
        io.swagger.oas.models.media.Schema schema49 = schema9.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema9.getWriteOnly();
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema9.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 10);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema18.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(externalDocumentation20);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxProperties((java.lang.Integer) 0);
        schema9.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema9.setDiscriminator(discriminator20);
        java.lang.String str22 = schema9.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean10 = schema6.getNullable();
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema6.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        schema14.setMultipleOf(bigDecimal15);
        schema14.setPattern("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = strSchema16.nullable((java.lang.Boolean) true);
        java.lang.String str25 = strSchema16.get$ref();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema16.xml(xML26);
        io.swagger.oas.models.media.Schema schema28 = schema15.additionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        java.lang.String str29 = schema28.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str26 = strSchema25.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strSchema25.format("");
        strSchema25.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strSchema25.getExtensions();
        java.lang.Integer int32 = strSchema25.getMinItems();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        schema20.setDefault((java.lang.Object) strSchema25);
        schema20.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = schema20.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 0);
        java.lang.String str18 = schema17.get$ref();
        schema17.setReadOnly((java.lang.Boolean) false);
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#/components/schemas/no description" + "'", str18, "#/components/schemas/no description");
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema13.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str25 = strSchema24.getTitle();
        io.swagger.oas.models.media.Schema schema27 = strSchema24.format("");
        strSchema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema38.setRequired((java.util.List<java.lang.String>) strList41);
        strSchema24.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = schema23.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        strSchema0.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.$ref("no description");
        io.swagger.oas.models.media.Schema schema54 = schema50.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema50.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList57 = schema56.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strList57);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema13.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str25 = strSchema24.getTitle();
        io.swagger.oas.models.media.Schema schema27 = strSchema24.format("");
        strSchema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema38.setRequired((java.util.List<java.lang.String>) strList41);
        strSchema24.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = schema23.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        strSchema0.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxLength((java.lang.Integer) 100);
        schema50.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.maximum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        java.lang.Object obj15 = schema14.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        java.lang.String str27 = schema21.getName();
        io.swagger.oas.models.media.Schema schema29 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema21.getNot();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        java.lang.Boolean boolean22 = schema19.getExclusiveMaximum();
        java.util.List<java.lang.String> strList23 = schema19.getRequired();
        io.swagger.oas.models.media.Schema schema25 = schema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema18.getMinLength();
        schema18.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema18.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        io.swagger.oas.models.media.Schema schema50 = strSchema46.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema52 = strSchema46.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.util.List<java.lang.String> strList56 = strSchema53.getRequired();
        strSchema53.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = strSchema53.title("no description");
        java.lang.String str61 = schema60.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema60.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str65 = strSchema64.getTitle();
        io.swagger.oas.models.media.Schema schema67 = strSchema64.format("");
        strSchema64.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        io.swagger.oas.models.media.Schema schema74 = strSchema70.maxLength((java.lang.Integer) 1);
        schema74.setPattern("");
        io.swagger.oas.models.media.Schema schema78 = schema74.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray82 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema78.setEnum((java.util.List<java.lang.String>) strList83);
        strSchema64.setEnum((java.util.List<java.lang.String>) strList83);
        schema63.setRequired((java.util.List<java.lang.String>) strList83);
        schema52.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema89 = schema45.required((java.util.List<java.lang.String>) strList83);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.multipleOf(bigDecimal90);
        io.swagger.oas.models.media.XML xML92 = null;
        schema89.setXml(xML92);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation94 = schema89.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(externalDocumentation94);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema19.format("default");
        io.swagger.oas.models.media.Schema schema25 = schema19.deprecated((java.lang.Boolean) true);
        schema25.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema25.minItems((java.lang.Integer) 0);
        java.lang.Integer int30 = schema25.getMinProperties();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema25.maximum(bigDecimal31);
        schema25.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj35 = schema25.getExample();
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.Integer int19 = strSchema11.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema20.properties(strMap25);
        java.lang.String str27 = strSchema20.getPattern();
        strSchema20.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strSchema20.exclusiveMinimum((java.lang.Boolean) true);
        schema31.setReadOnly((java.lang.Boolean) true);
        schema31.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.lang.Boolean boolean40 = strSchema37.getWriteOnly();
        strSchema37.setMaxItems((java.lang.Integer) 10);
        strSchema37.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = strSchema37.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = strSchema37.externalDocs(externalDocumentation46);
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema37);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema31.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema31.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema11.setAdditionalProperties(schema54);
        io.swagger.oas.models.media.Schema schema59 = schema54.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.maximum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML19 = null;
        schema16.setXml(xML19);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema8.writeOnly((java.lang.Boolean) false);
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.math.BigDecimal bigDecimal42 = null;
        schema40.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema40.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema40.getAdditionalProperties();
        boolean boolean47 = strSchema28.equals((java.lang.Object) schema40);
        strSchema28.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = strSchema28.deprecated((java.lang.Boolean) false);
        schema51.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema51.deprecated((java.lang.Boolean) true);
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = schema24.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = strSchema61.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strSchema61.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray74 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema71.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.XML xML78 = null;
        schema71.setXml(xML78);
        schema71.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema83 = schema71.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList84 = schema83.getRequired();
        io.swagger.oas.models.media.Schema schema85 = schema24.required(strList84);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.externalDocs(externalDocumentation86);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("");
        io.swagger.oas.models.media.Schema schema15 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.discriminator(discriminator18);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        java.lang.Integer int8 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema10 = schema4.type("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        io.swagger.oas.models.media.Schema schema15 = strSchema11.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema19 = schema15.$ref("default");
        schema19.setType("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema19.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema23.getUniqueItems();
        schema23.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setDefault((java.lang.Object) schema23);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList14 = schema13.getEnum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        schema19.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema19.setMultipleOf(bigDecimal24);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        io.swagger.oas.models.media.Schema schema13 = strSchema9.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema13.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema15.getExternalDocs();
        java.math.BigDecimal bigDecimal18 = schema15.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean21 = strSchema20.getNullable();
        java.lang.Object obj22 = strSchema20.getExample();
        io.swagger.oas.models.media.Schema schema24 = strSchema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema25.title("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema25.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        strSchema25.addExtension("", (java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setName("no description");
        io.swagger.oas.models.media.Schema schema60 = strSchema54.type("");
        io.swagger.oas.models.media.Schema schema62 = strSchema54.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = strSchema54.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray67 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema64.setRequired((java.util.List<java.lang.String>) strList68);
        schema46.setEnum((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema24.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema73 = schema15.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema74 = strSchema0.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.XML xML75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.xml(xML75);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        schema10.setFormat("");
        schema10.setTitle("hi!");
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setName("*/*");
        io.swagger.oas.models.media.Schema schema22 = schema10.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema10.externalDocs(externalDocumentation23);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML11 = null;
        schema8.setXml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        schema36.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema36.type("hi!");
        io.swagger.oas.models.media.Schema schema50 = schema24.not(schema49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        java.math.BigDecimal bigDecimal53 = null;
        schema50.setMaximum(bigDecimal53);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        schema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema9.getNullable();
        io.swagger.oas.models.media.Schema schema16 = schema9.name("");
        io.swagger.oas.models.media.Schema schema18 = schema9.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema18.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int26 = schema18.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strSchema19.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray32 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        schema29.setRequired((java.util.List<java.lang.String>) strList33);
        java.util.List<java.lang.String> strList36 = schema29.getEnum();
        java.lang.String str37 = schema29.toString();
        io.swagger.oas.models.media.Schema schema39 = schema29.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema29.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setAdditionalProperties(schema41);
        java.math.BigDecimal bigDecimal43 = null;
        schema18.setMaximum(bigDecimal43);
        java.lang.String str45 = schema18.getFormat();
        java.lang.Boolean boolean46 = schema18.getExclusiveMaximum();
        java.lang.Integer int47 = schema18.getMaxProperties();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("no description");
        io.swagger.oas.models.media.Schema schema28 = schema17.not(schema27);
        io.swagger.oas.models.media.Schema schema29 = schema6.not(schema27);
        io.swagger.oas.models.media.Schema schema31 = schema29.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML32 = schema29.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML32);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean10 = strSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.discriminator(discriminator11);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        io.swagger.oas.models.media.Schema schema30 = strSchema26.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = strSchema26.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator33 = strSchema26.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema26.properties(strMap34);
        strSchema26.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema26);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema2 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema2.setType("hi!");
        strSchema2.setName("no description");
        io.swagger.oas.models.media.Schema schema8 = strSchema2.type("");
        schema8.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema8.example((java.lang.Object) '#');
        strSchema0.setExample((java.lang.Object) schema8);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema8.getNot();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "#/components/schemas/no description";
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.String str36 = schema33.getFormat();
        schema33.setFormat("");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema33.getExtensions();
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        java.lang.String str41 = schema33.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean15 = strSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema16.properties(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema16.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        strSchema25.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = strSchema35.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strSchema35.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray48 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        schema45.setRequired((java.util.List<java.lang.String>) strList49);
        java.util.List<java.lang.String> strList52 = schema45.getEnum();
        io.swagger.oas.models.media.Schema schema53 = strSchema25.addProperties("hi!", schema45);
        java.math.BigDecimal bigDecimal54 = schema45.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        java.util.List<java.lang.String> strList58 = strSchema55.getRequired();
        strSchema55.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int61 = strSchema55.getMinLength();
        java.math.BigDecimal bigDecimal62 = null;
        strSchema55.setMinimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strSchema55.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = schema65.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.externalDocs(externalDocumentation68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema65.multipleOf(bigDecimal70);
        schema65.setMinProperties((java.lang.Integer) 1);
        schema65.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema45.not(schema65);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema65.maximum(bigDecimal77);
        strSchema16.setExample((java.lang.Object) schema78);
        io.swagger.oas.models.media.Schema schema80 = strSchema0.example((java.lang.Object) schema78);
        java.lang.Boolean boolean81 = strSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean81);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.externalDocs(externalDocumentation24);
        schema18.setNullable((java.lang.Boolean) false);
        schema18.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList14 = schema13.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.discriminator(discriminator15);
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMinimum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        strSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str14 = schema13.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema22.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean28 = schema27.getNullable();
        java.lang.Boolean boolean29 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema27);
        io.swagger.oas.models.media.Schema schema32 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema13.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.multipleOf(bigDecimal16);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema7.properties(strMap12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema19.getMinLength();
        java.lang.Integer int25 = strSchema19.getMaxLength();
        java.math.BigDecimal bigDecimal26 = strSchema19.getMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setType("");
        io.swagger.oas.models.media.Schema schema30 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.String str31 = schema5.getPattern();
        io.swagger.oas.models.media.Schema schema33 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strSchema37.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) true);
        schema45.setUniqueItems((java.lang.Boolean) true);
        schema5.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) true);
        schema5.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = strSchema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema6.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.discriminator(discriminator28);
        schema27.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema29.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = strSchema34.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = strSchema34.getProperties();
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema34);
        io.swagger.oas.models.media.Schema schema42 = schema22.not(schema33);
        schema42.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.maximum(bigDecimal11);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strSchema13.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.minLength((java.lang.Integer) 0);
        schema12.setNot(schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int36 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = schema43.format("no description");
        io.swagger.oas.models.media.Schema schema46 = schema35.not(schema45);
        schema46.setTitle("");
        java.lang.String str49 = schema46.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        io.swagger.oas.models.media.Schema schema54 = strSchema50.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema54.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean57 = schema56.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = schema56.getExternalDocs();
        java.math.BigDecimal bigDecimal59 = schema56.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema68 = schema56.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema61);
        io.swagger.oas.models.media.Schema schema70 = schema68.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        io.swagger.oas.models.media.Schema schema72 = schema46.properties(strMap71);
        io.swagger.oas.models.media.Schema schema73 = schema26.properties(strMap71);
        java.lang.Boolean boolean74 = schema26.getExclusiveMinimum();
        schema26.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema8.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema8.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema8.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int9 = schema8.getMinLength();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.multipleOf(bigDecimal10);
        schema8.setMaxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal14 = schema8.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema8.getExternalDocs();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        java.lang.Boolean boolean17 = schema15.getWriteOnly();
        java.util.List<java.lang.String> strList18 = schema15.getEnum();
        io.swagger.oas.models.media.Schema schema20 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.writeOnly((java.lang.Boolean) true);
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.Boolean boolean47 = schema42.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal59 = null;
        schema58.setMultipleOf(bigDecimal59);
        schema58.setFormat("");
        schema58.setTitle("hi!");
        java.lang.Boolean boolean65 = schema58.getUniqueItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        schema58.setProperties(strMap66);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema58.maximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema58.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema58.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema75 = schema58.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema42.not(schema75);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.minProperties((java.lang.Integer) 10);
        schema10.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.additionalProperties(schema7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema19.format("default");
        io.swagger.oas.models.media.Schema schema25 = schema23.description("");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        io.swagger.oas.models.media.Schema schema39 = strSchema35.maxLength((java.lang.Integer) 1);
        schema39.setPattern("");
        io.swagger.oas.models.media.Schema schema43 = schema39.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray47 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        schema43.setEnum((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema51 = schema34.example((java.lang.Object) schema43);
        java.lang.Integer int52 = schema43.getMinProperties();
        io.swagger.oas.models.media.XML xML53 = null;
        schema43.setXml(xML53);
        schema23.setExample((java.lang.Object) xML53);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        java.lang.String str25 = schema21.get$ref();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = schema34.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema34.get$ref();
        java.lang.String str39 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema41 = schema34.minProperties((java.lang.Integer) 100);
        schema41.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema21.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema50 = schema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema12.name("hi!");
        java.util.List<java.lang.String> strList28 = schema27.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int38 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.format("no description");
        io.swagger.oas.models.media.Schema schema48 = schema37.not(schema47);
        io.swagger.oas.models.media.Schema schema50 = schema47.format("default");
        io.swagger.oas.models.media.Schema schema52 = schema47.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal53 = null;
        schema52.setMinimum(bigDecimal53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.xml(xML55);
        java.math.BigDecimal bigDecimal57 = null;
        schema52.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setName("no description");
        io.swagger.oas.models.media.Schema schema71 = strSchema65.type("");
        java.lang.Integer int72 = schema71.getMaxProperties();
        java.math.BigDecimal bigDecimal73 = null;
        schema71.setMinimum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema71.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema77 = schema71.getAdditionalProperties();
        boolean boolean78 = strSchema59.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema schema80 = schema71.minProperties((java.lang.Integer) (-1));
        boolean boolean81 = schema52.equals((java.lang.Object) schema80);
        io.swagger.oas.models.media.Schema schema83 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema85 = schema83.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass86 = schema85.getClass();
        io.swagger.oas.models.media.Schema schema87 = schema27.example((java.lang.Object) schema85);
        io.swagger.oas.models.media.Schema schema89 = schema87.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.lang.Boolean boolean9 = schema5.getReadOnly();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema5.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray22 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        schema20.setRequired((java.util.List<java.lang.String>) strList23);
        schema20.addEnumItemObject("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema31 = strSchema29.maxItems((java.lang.Integer) 100);
        schema31.setTitle("");
        java.lang.Integer int34 = schema31.getMaxLength();
        java.lang.String str35 = schema31.getPattern();
        java.lang.String str36 = schema31.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.util.List<java.lang.String> strList40 = strSchema37.getRequired();
        strSchema37.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int43 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema51 = strSchema37.not((io.swagger.oas.models.media.Schema) strSchema44);
        boolean boolean52 = schema31.equals((java.lang.Object) strSchema44);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = strSchema53.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = strSchema53.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray66 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema63.setRequired((java.util.List<java.lang.String>) strList67);
        schema31.setEnum((java.util.List<java.lang.String>) strList67);
        schema31.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema31);
        schema5.setAdditionalProperties(schema31);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        io.swagger.oas.models.media.Schema schema23 = strSchema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema11.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        schema5.setDescription("default");
        io.swagger.oas.models.media.Schema schema65 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        schema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        java.lang.Boolean boolean71 = strSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema73 = strSchema68.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        java.lang.Boolean boolean77 = strSchema74.getWriteOnly();
        io.swagger.oas.models.media.Schema schema79 = strSchema74.type("default");
        strSchema68.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema74);
        io.swagger.oas.models.media.Schema schema82 = strSchema68.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator83 = null;
        io.swagger.oas.models.media.Schema schema84 = strSchema68.discriminator(discriminator83);
        schema5.setNot(schema84);
        io.swagger.oas.models.media.Schema schema86 = schema84.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema86.setMinProperties((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(schema86);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema6.additionalProperties(schema27);
        schema28.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        strSchema0.setNullable((java.lang.Boolean) true);
        strSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int9 = strSchema0.getMinLength();
        io.swagger.oas.annotations.media.Content[] contentArray11 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces12 = null;
        javax.ws.rs.Produces produces13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional15 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces12, produces13, components14);
        javax.ws.rs.Produces produces16 = null;
        javax.ws.rs.Produces produces17 = null;
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional19 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces16, produces17, components18);
        javax.ws.rs.Produces produces20 = null;
        javax.ws.rs.Produces produces21 = null;
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional23 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces20, produces21, components22);
        javax.ws.rs.Produces produces24 = null;
        javax.ws.rs.Produces produces25 = null;
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces24, produces25, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray11, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional31 = io.swagger.jaxrs2.OperationParser.getContents(contentArray11, components30);
        javax.ws.rs.Produces produces32 = null;
        javax.ws.rs.Produces produces33 = null;
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional35 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces32, produces33, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional37 = io.swagger.jaxrs2.OperationParser.getContents(contentArray11, components36);
        javax.ws.rs.Produces produces38 = null;
        javax.ws.rs.Produces produces39 = null;
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional41 = io.swagger.jaxrs2.OperationParser.getContent(contentArray11, produces38, produces39, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContents(contentArray11, components42);
        strSchema0.addExtension("hi!", (java.lang.Object) components42);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contentArray11);
        org.junit.Assert.assertNotNull(contentOptional15);
        org.junit.Assert.assertNotNull(contentOptional19);
        org.junit.Assert.assertNotNull(contentOptional23);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(contentOptional31);
        org.junit.Assert.assertNotNull(contentOptional35);
        org.junit.Assert.assertNotNull(contentOptional37);
        org.junit.Assert.assertNotNull(contentOptional41);
        org.junit.Assert.assertNotNull(contentOptional43);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        java.lang.String str13 = schema10.toString();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int42 = strSchema36.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        strSchema36.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema46.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setNullable((java.lang.Boolean) true);
        schema20.setExample((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema59 = schema20.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema20.getNot();
        java.lang.String str61 = schema20.getType();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema20.externalDocs(externalDocumentation62);
        java.math.BigDecimal bigDecimal64 = null;
        schema20.setMinimum(bigDecimal64);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.discriminator(discriminator14);
        java.lang.Integer int16 = schema13.getMaxProperties();
        java.lang.String str17 = schema13.toString();
        java.lang.Class<?> wildcardClass18 = schema13.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj18 = strSchema10.getExample();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema10.discriminator(discriminator19);
        boolean boolean21 = schema9.equals((java.lang.Object) discriminator19);
        java.math.BigDecimal bigDecimal22 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strSchema23.setExtensions(strMap24);
        io.swagger.oas.models.media.Schema schema27 = strSchema23.type("");
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        schema27.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema37.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML42 = null;
        schema41.setXml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema41.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema27.not(schema45);
        schema9.setExample((java.lang.Object) schema45);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: #\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        schema11.setPattern("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema16 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = strSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj14 = strSchema0.getExample();
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.xml(xML16);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strSchema0.getExtensions();
        java.lang.Integer int7 = strSchema0.getMinItems();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.description("");
        java.util.List<java.lang.String> strList12 = strSchema0.getEnum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema25.getReadOnly();
        schema14.setDefault((java.lang.Object) schema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema25.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = strSchema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int26 = strSchema6.getMinItems();
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema7.properties(strMap12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema19.getMinLength();
        java.lang.Integer int25 = strSchema19.getMaxLength();
        java.math.BigDecimal bigDecimal26 = strSchema19.getMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setType("");
        io.swagger.oas.models.media.Schema schema30 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.String str31 = schema5.getPattern();
        schema5.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema5.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.String str10 = schema9.getFormat();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMultipleOf(bigDecimal11);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList15 = schema14.getEnum();
        io.swagger.oas.annotations.media.Content[] contentArray16 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray16, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components23);
        boolean boolean25 = schema14.equals((java.lang.Object) components23);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema14.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = strSchema28.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = strSchema28.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = schema14.example((java.lang.Object) schema36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = schema36.getExternalDocs();
        schema36.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(contentArray16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        schema11.setExtensions(strMap12);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema11.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = strSchema10.getDeprecated();
        java.math.BigDecimal bigDecimal17 = strSchema10.getMultipleOf();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.$ref("no description");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema28.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean31 = schema30.getExclusiveMaximum();
        schema30.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema39.setMaxLength((java.lang.Integer) 100);
        java.lang.String str46 = strSchema39.toString();
        io.swagger.oas.models.media.Schema schema48 = strSchema39.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema48.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = strSchema53.properties(strMap58);
        java.lang.Boolean boolean60 = strSchema53.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        io.swagger.oas.models.media.Schema schema65 = strSchema61.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = schema65.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean68 = schema67.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = schema67.getExternalDocs();
        java.math.BigDecimal bigDecimal70 = schema67.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema72 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema72.setType("hi!");
        strSchema72.setName("no description");
        io.swagger.oas.models.media.Schema schema78 = strSchema72.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema79 = schema67.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema72);
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = strSchema53.properties(strMap82);
        io.swagger.oas.models.media.Schema schema84 = schema48.properties(strMap82);
        schema34.setProperties(strMap82);
        schema6.setProperties(strMap82);
        java.lang.Boolean boolean87 = schema6.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        schema22.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        schema6.setType("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema6.setExternalDocs(externalDocumentation10);
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema6.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = null;
        schema6.setMinimum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        java.lang.Object obj22 = schema19.getExample();
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema27 = strSchema25.maxItems((java.lang.Integer) 100);
        strSchema25.setDescription("*/*");
        strSchema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema19.example((java.lang.Object) strSchema25);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema23.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.deprecated((java.lang.Boolean) false);
        schema31.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.name("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = schema35.getMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema35.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema35.multipleOf(bigDecimal39);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.lang.Integer int23 = strSchema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        java.lang.String str34 = schema33.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema36.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = strSchema36.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema33.addProperties("no description", schema44);
        schema44.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int48 = schema44.getMinProperties();
        io.swagger.oas.models.media.Schema schema49 = schema25.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal50 = null;
        schema25.setMinimum(bigDecimal50);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema9.getExternalDocs();
        java.lang.Integer int15 = schema9.getMaxItems();
        schema9.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        java.math.BigDecimal bigDecimal31 = null;
        strSchema0.setMultipleOf(bigDecimal31);
        java.lang.String str33 = strSchema0.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "no description" + "'", str33, "no description");
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = strSchema10.getMinLength();
        java.lang.Integer int16 = strSchema10.getMaxLength();
        java.math.BigDecimal bigDecimal17 = strSchema10.getMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema9.additionalProperties((io.swagger.oas.models.media.Schema) strSchema10);
        strSchema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = strSchema10.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        io.swagger.oas.models.media.Schema schema16 = strSchema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean19 = schema18.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema18.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        java.util.List<java.lang.String> strList25 = strSchema22.getRequired();
        strSchema22.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean28 = strSchema22.getDeprecated();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.$ref("no description");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        io.swagger.oas.models.media.Schema schema40 = strSchema36.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = schema40.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean43 = schema42.getExclusiveMaximum();
        schema42.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema35.example((java.lang.Object) schema42);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema51.setMaxLength((java.lang.Integer) 100);
        java.lang.String str58 = strSchema51.toString();
        io.swagger.oas.models.media.Schema schema60 = strSchema51.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.externalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        schema60.setDiscriminator(discriminator63);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = strSchema65.properties(strMap70);
        java.lang.Boolean boolean72 = strSchema65.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        io.swagger.oas.models.media.Schema schema77 = strSchema73.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = schema77.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean80 = schema79.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = schema79.getExternalDocs();
        java.math.BigDecimal bigDecimal82 = schema79.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema84 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema84.setType("hi!");
        strSchema84.setName("no description");
        io.swagger.oas.models.media.Schema schema90 = strSchema84.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema91 = schema79.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema84);
        io.swagger.oas.models.media.Schema schema93 = schema91.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema93.getProperties();
        io.swagger.oas.models.media.Schema schema95 = strSchema65.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema60.properties(strMap94);
        schema46.setProperties(strMap94);
        schema18.setProperties(strMap94);
        io.swagger.oas.models.media.Schema schema99 = schema4.properties(strMap94);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str58, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(externalDocumentation81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        java.lang.String str9 = strSchema0.get$ref();
        java.lang.String str10 = strSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean26 = schema23.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int23 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.format("default");
        java.lang.String str36 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        java.util.List<java.lang.String> strList45 = strSchema42.getRequired();
        strSchema42.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int48 = strSchema42.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setName("no description");
        io.swagger.oas.models.media.Schema schema55 = strSchema49.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema42.not((io.swagger.oas.models.media.Schema) strSchema49);
        strSchema37.setExample((java.lang.Object) schema56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema56.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema32.example((java.lang.Object) schema56);
        java.lang.String str61 = schema56.getFormat();
        schema56.setMaxLength((java.lang.Integer) 0);
        schema56.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema56.setType("");
        schema11.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Schema schema70 = schema56.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema56.setUniqueItems((java.lang.Boolean) false);
        schema56.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "default" + "'", str36, "default");
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        java.util.List<java.lang.String> strList17 = schema12.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema18.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        strSchema18.setExternalDocs(externalDocumentation25);
        java.lang.Integer int27 = strSchema18.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema28.properties(strMap33);
        java.lang.String str35 = strSchema28.getPattern();
        strSchema28.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = strSchema28.exclusiveMinimum((java.lang.Boolean) true);
        schema39.setReadOnly((java.lang.Boolean) true);
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        java.lang.Boolean boolean48 = strSchema45.getWriteOnly();
        strSchema45.setMaxItems((java.lang.Integer) 10);
        strSchema45.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = strSchema45.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema45.externalDocs(externalDocumentation54);
        schema39.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema45);
        io.swagger.oas.models.media.Schema schema58 = schema39.description("default");
        java.math.BigDecimal bigDecimal59 = schema39.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema39.getExtensions();
        strSchema18.setExtensions(strMap60);
        schema12.setExtensions(strMap60);
        java.lang.String str63 = schema12.getName();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int15 = schema14.getMaxItems();
        java.lang.Boolean boolean16 = schema14.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        java.lang.Integer int35 = schema34.getMaxProperties();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMinimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema34.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema34.setExternalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema43 = schema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema24.addProperties("default", schema43);
        schema43.set$ref("no description");
        io.swagger.oas.models.media.Schema schema47 = schema43.getAdditionalProperties();
        schema14.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema47);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList12 = strSchema0.getRequired();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str15 = strSchema0.getFormat();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.maximum(bigDecimal12);
        java.util.List<java.lang.String> strList14 = null;
        schema10.setRequired(strList14);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = schema10.required((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.util.List<java.lang.String> strList34 = strSchema31.getRequired();
        strSchema31.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int37 = strSchema31.getMinLength();
        java.math.BigDecimal bigDecimal38 = null;
        strSchema31.setMinimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema41.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean49 = schema10.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.media.Schema schema19 = schema17.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int20 = schema19.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        io.swagger.oas.models.media.Schema schema29 = schema27.format("no description");
        io.swagger.oas.models.media.Schema schema30 = schema19.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema29.format("default");
        io.swagger.oas.models.media.Schema schema34 = schema29.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMinimum(bigDecimal35);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.xml(xML37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = schema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema48 = schema45.maxProperties((java.lang.Integer) 1);
        java.lang.String str49 = schema45.get$ref();
        io.swagger.oas.models.media.Schema schema50 = schema34.not(schema45);
        java.math.BigDecimal bigDecimal51 = null;
        schema34.setMinimum(bigDecimal51);
        schema8.setDefault((java.lang.Object) bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema8.discriminator(discriminator54);
        java.math.BigDecimal bigDecimal56 = null;
        schema8.setMultipleOf(bigDecimal56);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.title("default");
        java.lang.String str9 = schema8.getType();
        io.swagger.oas.models.media.Schema schema11 = schema8.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean13 = strSchema12.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = strSchema12.description("");
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        java.lang.Boolean boolean18 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema16.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        java.lang.Boolean boolean25 = schema22.getNullable();
        io.swagger.oas.models.media.Schema schema26 = schema8.additionalProperties(schema22);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema17.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema6.format("");
        io.swagger.oas.models.media.Schema schema12 = schema10.minLength((java.lang.Integer) 0);
        schema10.addEnumItemObject("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = schema10.getPattern();
        java.lang.Boolean boolean16 = schema10.getNullable();
        java.lang.String str17 = schema10.getName();
        io.swagger.oas.models.media.Schema schema19 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean7 = schema6.getDeprecated();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema24 = strSchema10.not((io.swagger.oas.models.media.Schema) strSchema17);
        strSchema17.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = strSchema17.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean32 = strSchema31.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = strSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = strSchema31.description("");
        schema35.setPattern("hi!");
        java.lang.Integer int38 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = strSchema17.not(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Schema schema45 = schema6.not(schema42);
        io.swagger.oas.models.media.Schema schema47 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str48 = schema47.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema6.uniqueItems((java.lang.Boolean) false);
        schema13.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema17 = schema13.maxProperties((java.lang.Integer) 1);
        schema13.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema13.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        java.lang.Integer int11 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.deprecated((java.lang.Boolean) true);
        strSchema0.setMaxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema1 = null;
        strSchema0.setAdditionalProperties(schema1);
        io.swagger.oas.models.media.XML xML3 = null;
        io.swagger.oas.models.media.Schema schema4 = strSchema0.xml(xML3);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        io.swagger.oas.models.media.Schema schema9 = strSchema5.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean12 = schema11.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        schema14.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.xml(xML19);
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        boolean boolean23 = strSchema0.equals((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema schema25 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        java.lang.String str25 = schema21.get$ref();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = strSchema28.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = strSchema28.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema37 = schema27.example((java.lang.Object) strSchema28);
        io.swagger.oas.models.media.Schema schema39 = strSchema28.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema6.minimum(bigDecimal19);
        schema20.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.uniqueItems((java.lang.Boolean) false);
        schema20.setType("no description");
        java.lang.Boolean boolean27 = schema20.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema6.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = null;
        schema25.setMultipleOf(bigDecimal28);
        java.lang.Boolean boolean30 = schema25.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.title("default");
        io.swagger.oas.models.media.Schema schema11 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.discriminator(discriminator44);
        schema42.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.Integer int59 = strSchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        java.lang.Integer int67 = schema66.getMaxProperties();
        java.math.BigDecimal bigDecimal68 = null;
        schema66.setMinimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema66.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema66.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) true);
        boolean boolean78 = strSchema48.equals((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema79 = schema42.not((io.swagger.oas.models.media.Schema) strSchema48);
        java.lang.Boolean boolean80 = strSchema48.getWriteOnly();
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema48);
        io.swagger.oas.models.media.Schema schema83 = strSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean12 = strSchema11.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = strSchema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = strSchema11.description("");
        java.lang.Integer int16 = strSchema11.getMaxProperties();
        strSchema11.setType("default");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema11.minimum(bigDecimal19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema11.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        strSchema11.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema11.xml(xML25);
        io.swagger.oas.models.media.Schema schema27 = schema9.example((java.lang.Object) strSchema11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema11.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        strSchema0.setDeprecated((java.lang.Boolean) true);
        strSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.getNot();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        java.math.BigDecimal bigDecimal35 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema19.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema37.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int42 = schema37.getMaxLength();
        io.swagger.oas.models.media.Schema schema44 = schema37.type("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj11 = schema10.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = strSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = strSchema14.required((java.util.List<java.lang.String>) strList50);
        strSchema5.setEnum((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal56 = strSchema5.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema5.discriminator(discriminator57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema5.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema61 = strSchema0.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.format("");
        schema60.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal66 = null;
        schema60.setMultipleOf(bigDecimal66);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema20 = strSchema0.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema20.getProperties();
        java.lang.String str22 = schema20.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        strSchema16.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strSchema16.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        strSchema16.setProperties(strMap30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema16.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema0.properties(strMap35);
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        strSchema39.setNot((io.swagger.oas.models.media.Schema) strSchema44);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema39.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        java.util.List<java.lang.String> strList55 = strSchema52.getRequired();
        strSchema52.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = strSchema52.title("no description");
        java.lang.String str60 = schema59.getDescription();
        boolean boolean61 = schema51.equals((java.lang.Object) schema59);
        java.util.List<java.lang.String> strList62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.required(strList62);
        schema59.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema59.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = strSchema69.properties(strMap74);
        java.lang.Integer int76 = schema75.getMaxProperties();
        io.swagger.oas.models.media.Schema schema78 = schema75.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = schema75.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema81 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema81.setType("hi!");
        strSchema81.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int86 = strSchema81.getMinLength();
        java.lang.Integer int87 = strSchema81.getMaxLength();
        java.math.BigDecimal bigDecimal88 = strSchema81.getMaximum();
        io.swagger.oas.models.media.Schema schema89 = schema80.additionalProperties((io.swagger.oas.models.media.Schema) strSchema81);
        io.swagger.oas.models.media.Schema schema91 = schema89.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = schema59.addProperties("default", schema89);
        io.swagger.oas.models.media.Schema schema94 = schema89.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean95 = schema89.getExclusiveMinimum();
        strSchema0.setExample((java.lang.Object) schema89);
        java.math.BigDecimal bigDecimal97 = null;
        schema89.setMaximum(bigDecimal97);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(bigDecimal88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("default");
        schema10.setDescription("default");
        java.lang.Object obj15 = schema10.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        schema25.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema29.properties(strMap34);
        java.lang.Integer int36 = schema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 0);
        java.lang.String str39 = schema35.getType();
        schema35.setReadOnly((java.lang.Boolean) true);
        schema35.set$ref("");
        java.lang.String str44 = schema35.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = strSchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema45.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema55.setRequired((java.util.List<java.lang.String>) strList59);
        schema35.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema25.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema10.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema63.minItems((java.lang.Integer) 1);
        schema66.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema66.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator75 = schema74.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(discriminator75);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMinimum(bigDecimal12);
        schema11.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema11.description("*/*");
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema11.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema33.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str45 = strSchema44.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strSchema44.format("");
        strSchema44.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray60 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        schema58.setRequired((java.util.List<java.lang.String>) strList61);
        strSchema44.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList61);
        schema22.setEnum((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        java.util.List<java.lang.String> strList70 = strSchema67.getRequired();
        strSchema67.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int73 = strSchema67.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema67.not((io.swagger.oas.models.media.Schema) strSchema74);
        java.lang.Boolean boolean82 = strSchema67.getUniqueItems();
        java.lang.Boolean boolean83 = strSchema67.getNullable();
        io.swagger.oas.models.media.Schema schema85 = strSchema67.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strSchema67.maxItems((java.lang.Integer) (-1));
        strSchema67.setType("default");
        io.swagger.oas.models.media.Schema schema90 = schema22.not((io.swagger.oas.models.media.Schema) strSchema67);
        java.lang.Boolean boolean91 = schema90.getNullable();
        io.swagger.oas.models.media.Schema schema93 = schema90.type("");
        java.math.BigDecimal bigDecimal94 = schema93.getMultipleOf();
        io.swagger.oas.models.media.Schema schema96 = schema93.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema96.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(bigDecimal94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray30 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema27.setRequired((java.util.List<java.lang.String>) strList31);
        java.util.List<java.lang.String> strList34 = schema27.getEnum();
        java.lang.String str35 = schema27.toString();
        io.swagger.oas.models.media.Schema schema37 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema40.properties(strMap45);
        strSchema40.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = strSchema40.pattern("no description");
        java.util.List<java.lang.String> strList51 = schema50.getEnum();
        schema37.setDefault((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = strSchema7.not(schema50);
        io.swagger.oas.models.media.Schema schema55 = strSchema7.readOnly((java.lang.Boolean) false);
        strSchema7.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str35, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.minimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.multipleOf(bigDecimal30);
        java.lang.Integer int32 = schema31.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        schema30.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema30.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) true);
        java.lang.String str54 = schema53.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.discriminator(discriminator55);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        java.lang.Integer int70 = strSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema71.type("");
        java.lang.Integer int78 = schema77.getMaxProperties();
        java.math.BigDecimal bigDecimal79 = null;
        schema77.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema77.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        schema77.setExternalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema77.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) true);
        boolean boolean89 = strSchema59.equals((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema90 = schema53.not((io.swagger.oas.models.media.Schema) strSchema59);
        java.lang.Integer int91 = strSchema59.getMaxLength();
        io.swagger.oas.models.media.Schema schema92 = schema34.addProperties("", (io.swagger.oas.models.media.Schema) strSchema59);
        schema92.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        strSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema7.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str29 = strSchema7.getType();
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strSchema7.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strSchema36.getExternalDocs();
        java.lang.String str42 = strSchema36.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        strSchema36.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema36.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = strSchema36.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = strSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema50.minItems((java.lang.Integer) 0);
        schema54.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema35.not(schema54);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMaximum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema57.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        java.lang.Integer int12 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = schema6.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        schema43.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema43.addRequiredItem("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.minimum(bigDecimal48);
        schema33.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        java.lang.Integer int58 = schema57.getMaxProperties();
        java.math.BigDecimal bigDecimal59 = null;
        schema57.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema57.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal63 = schema57.getMinimum();
        io.swagger.oas.models.media.Schema schema65 = schema57.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.discriminator(discriminator66);
        java.lang.Boolean boolean68 = schema67.getWriteOnly();
        schema33.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        strSchema70.setName("no description");
        io.swagger.oas.models.media.Schema schema76 = strSchema70.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema78 = strSchema70.nullable((java.lang.Boolean) true);
        schema78.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema78.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema82.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList85 = schema82.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema33.required(strList85);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        java.lang.Integer int9 = strSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Discriminator discriminator12 = strSchema0.getDiscriminator();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator12);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.lang.Boolean boolean9 = schema5.getReadOnly();
        java.util.List<java.lang.String> strList10 = schema5.getRequired();
        java.lang.String str11 = schema5.get$ref();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        io.swagger.oas.models.media.Schema schema16 = strSchema8.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strSchema8.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 100);
        schema22.setNullable((java.lang.Boolean) false);
        schema22.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strSchema30.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = strSchema30.getProperties();
        java.lang.Boolean boolean37 = strSchema30.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema39 = strSchema30.minProperties((java.lang.Integer) 0);
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema30);
        java.lang.String str41 = strSchema30.getFormat();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        io.swagger.oas.models.media.Schema schema21 = strSchema17.maxLength((java.lang.Integer) 1);
        schema21.setDescription("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int30 = strSchema24.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema38 = strSchema24.not((io.swagger.oas.models.media.Schema) strSchema31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        strSchema39.setNot((io.swagger.oas.models.media.Schema) strSchema44);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema39.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setName("no description");
        io.swagger.oas.models.media.Schema schema58 = strSchema52.type("");
        io.swagger.oas.models.media.Schema schema60 = schema58.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = strSchema61.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strSchema61.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray74 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema71.setRequired((java.util.List<java.lang.String>) strList75);
        schema60.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = strSchema39.required((java.util.List<java.lang.String>) strList75);
        strSchema31.setEnum((java.util.List<java.lang.String>) strList75);
        schema21.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema82 = schema14.required((java.util.List<java.lang.String>) strList75);
        java.math.BigDecimal bigDecimal83 = schema82.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        strSchema0.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema17.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema25.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int41 = schema40.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema42.type("");
        io.swagger.oas.models.media.Schema schema50 = schema48.format("no description");
        io.swagger.oas.models.media.Schema schema51 = schema40.not(schema50);
        io.swagger.oas.models.media.Schema schema53 = schema50.format("default");
        java.lang.String str54 = schema50.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema50.externalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        strSchema57.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = strSchema57.properties(strMap62);
        java.lang.Integer int64 = schema63.getMaxProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = schema63.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int74 = strSchema69.getMinLength();
        java.lang.Integer int75 = strSchema69.getMaxLength();
        java.math.BigDecimal bigDecimal76 = strSchema69.getMaximum();
        io.swagger.oas.models.media.Schema schema77 = schema68.additionalProperties((io.swagger.oas.models.media.Schema) strSchema69);
        schema68.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema81 = schema68.type("hi!");
        io.swagger.oas.models.media.Schema schema82 = schema56.not(schema81);
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema81);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "default" + "'", str54, "default");
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = strSchema20.getDeprecated();
        java.lang.String str26 = strSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema28 = strSchema20.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema20.minimum(bigDecimal29);
        java.lang.Object obj31 = strSchema20.getExample();
        schema12.setDefault(obj31);
        java.lang.Integer int33 = schema12.getMinItems();
        java.math.BigDecimal bigDecimal34 = null;
        schema12.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema36.properties(strMap41);
        java.lang.Integer int43 = schema42.getMaxProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema42.name("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema42.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.name("no description");
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema12.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema12.getDiscriminator();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema24 = schema20.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        strSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = strSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) strSchema25);
        io.swagger.oas.models.media.XML xML33 = schema32.getXml();
        schema32.setMaxLength((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList36 = schema32.getEnum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML6 = schema5.getXml();
        io.swagger.oas.models.media.Schema schema7 = schema5.getNot();
        java.lang.Integer int8 = schema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema10 = schema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = strSchema11.getDeprecated();
        io.swagger.oas.models.media.Schema schema18 = strSchema11.type("*/*");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.minimum(bigDecimal19);
        java.lang.Boolean boolean21 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) (-1));
        schema24.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = schema24.getMultipleOf();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(xML6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        java.lang.Boolean boolean4 = strSchema0.getUniqueItems();
        strSchema0.setMinItems((java.lang.Integer) 100);
        java.lang.Integer int7 = strSchema0.getMaxLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema schema34 = strSchema17.not(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        java.lang.Integer int44 = schema43.getMaxProperties();
        java.math.BigDecimal bigDecimal45 = null;
        schema43.setMinimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema43.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) (-1));
        schema36.setExample((java.lang.Object) schema48);
        java.math.BigDecimal bigDecimal52 = schema36.getMultipleOf();
        io.swagger.oas.models.media.Schema schema54 = schema36.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = strSchema0.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema57 = schema36.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strSchema6.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = strSchema6.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema18.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str11 = schema10.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strSchema12.getDeprecated();
        java.lang.String str18 = strSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema20 = strSchema12.maxLength((java.lang.Integer) 0);
        java.lang.Integer int21 = schema20.getMinItems();
        schema10.setNot(schema20);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema10.xml(xML23);
        schema24.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        java.lang.Integer int4 = schema3.getMaxLength();
        schema3.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = schema3.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        java.lang.String str19 = strSchema7.get$ref();
        java.lang.Integer int20 = strSchema7.getMinItems();
        strSchema7.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema15 = strSchema7.exclusiveMaximum((java.lang.Boolean) false);
        schema15.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema20 = schema4.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        strSchema21.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = strSchema21.pattern("no description");
        schema15.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int35 = schema34.getMinItems();
        schema34.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema34.setDiscriminator(discriminator38);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.format("");
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.properties(strMap14);
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema11.getMinLength();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema6.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str21 = schema20.getName();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML24 = null;
        schema23.setXml(xML24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "no description" + "'", str21, "no description");
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.properties(strMap13);
        java.lang.Object obj15 = schema14.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList19 = schema11.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema11.discriminator(discriminator20);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema11.multipleOf(bigDecimal24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.discriminator(discriminator9);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = strSchema0.getMultipleOf();
        java.lang.String str14 = strSchema0.getType();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        java.lang.String str9 = schema6.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        io.swagger.oas.models.media.Schema schema14 = strSchema10.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema14.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.discriminator(discriminator18);
        schema19.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList22 = schema19.getEnum();
        schema6.setNot(schema19);
        io.swagger.oas.models.media.Schema schema25 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema6.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "no description" + "'", str9, "no description");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        java.lang.Integer int24 = strSchema11.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = strSchema11.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema26.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema26.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setName("no description");
        io.swagger.oas.models.media.Schema schema49 = strSchema43.type("");
        io.swagger.oas.models.media.Schema schema51 = schema49.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema42.not(schema49);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str54 = strSchema53.getTitle();
        io.swagger.oas.models.media.Schema schema56 = strSchema53.format("");
        strSchema53.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = schema65.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray69 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        schema67.setRequired((java.util.List<java.lang.String>) strList70);
        strSchema53.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema52.required((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.externalDocs(externalDocumentation75);
        schema76.setMinLength((java.lang.Integer) 1);
        schema76.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema76.description("*/*");
        schema76.setWriteOnly((java.lang.Boolean) false);
        schema76.setPattern("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema76.externalDocs(externalDocumentation87);
        schema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) externalDocumentation87);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema15.not(schema28);
        java.lang.String str30 = schema29.getTitle();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.lang.Integer int23 = strSchema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) false);
        strSchema12.setReadOnly((java.lang.Boolean) true);
        strSchema12.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj30 = strSchema12.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        java.lang.Object obj22 = schema19.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema19.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        io.swagger.oas.models.media.Schema schema29 = strSchema25.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = strSchema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        java.util.List<java.lang.String> strList35 = strSchema32.getRequired();
        strSchema32.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema32.title("no description");
        java.lang.String str40 = schema39.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str44 = strSchema43.getTitle();
        io.swagger.oas.models.media.Schema schema46 = strSchema43.format("");
        strSchema43.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        io.swagger.oas.models.media.Schema schema57 = schema53.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray61 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema57.setEnum((java.util.List<java.lang.String>) strList62);
        strSchema43.setEnum((java.util.List<java.lang.String>) strList62);
        schema42.setRequired((java.util.List<java.lang.String>) strList62);
        schema31.setRequired((java.util.List<java.lang.String>) strList62);
        schema19.setRequired((java.util.List<java.lang.String>) strList62);
        schema19.setDescription("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.lang.Boolean boolean27 = strSchema24.getDeprecated();
        java.lang.Integer int28 = strSchema24.getMaxItems();
        strSchema24.setMinLength((java.lang.Integer) 1);
        schema23.setExample((java.lang.Object) strSchema24);
        schema23.setMinProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList34 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema36 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.lang.String str23 = schema21.getName();
        java.util.List<java.lang.String> strList24 = schema21.getRequired();
        schema21.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str27 = schema21.getType();
        io.swagger.oas.models.media.Schema schema29 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strSchema0.getExtensions();
        java.lang.Integer int7 = strSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.pattern("");
        schema9.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) 1);
        schema15.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.lang.String str23 = schema21.getName();
        java.util.List<java.lang.String> strList24 = schema21.getRequired();
        java.lang.Integer int25 = schema21.getMinItems();
        java.math.BigDecimal bigDecimal26 = null;
        schema21.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema21.writeOnly((java.lang.Boolean) true);
        schema21.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema21.description("default");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal19 = null;
        schema16.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        io.swagger.oas.models.media.Schema schema25 = strSchema21.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean28 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.discriminator(discriminator29);
        schema30.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema30.getExternalDocs();
        java.math.BigDecimal bigDecimal36 = null;
        schema30.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.String str45 = strSchema38.getPattern();
        strSchema38.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = strSchema38.exclusiveMinimum((java.lang.Boolean) true);
        schema49.setReadOnly((java.lang.Boolean) true);
        schema49.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        java.lang.Boolean boolean58 = strSchema55.getWriteOnly();
        strSchema55.setMaxItems((java.lang.Integer) 10);
        strSchema55.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean63 = strSchema55.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = strSchema55.externalDocs(externalDocumentation64);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema55);
        io.swagger.oas.models.media.Schema schema68 = schema49.description("default");
        schema68.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema72 = schema68.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema74 = schema68.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        schema30.setExtensions(strMap75);
        schema16.setExtensions(strMap75);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema7.discriminator(discriminator35);
        strSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = strSchema7.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema40 = schema39.getNot();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        strSchema7.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema0.xml(xML17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 1);
        schema11.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema11.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        strSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int18 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema26 = strSchema12.not((io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.Boolean boolean27 = strSchema12.getUniqueItems();
        java.lang.Boolean boolean28 = strSchema12.getNullable();
        io.swagger.oas.models.media.Schema schema30 = strSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strSchema12.maxItems((java.lang.Integer) (-1));
        strSchema12.setType("default");
        io.swagger.oas.models.media.Discriminator discriminator35 = strSchema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean37 = strSchema36.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = strSchema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema40 = strSchema36.description("");
        java.lang.Boolean boolean41 = schema40.getUniqueItems();
        schema40.setTitle("");
        io.swagger.oas.models.media.Schema schema44 = strSchema12.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = strSchema0.not(schema40);
        io.swagger.oas.models.media.XML xML46 = schema45.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(xML46);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        java.util.List<java.lang.String> strList10 = schema8.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.util.List<java.lang.String> strList14 = strSchema11.getRequired();
        strSchema11.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = strSchema11.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema11.not((io.swagger.oas.models.media.Schema) strSchema18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        strSchema26.setNot((io.swagger.oas.models.media.Schema) strSchema31);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema26.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray61 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema58.setRequired((java.util.List<java.lang.String>) strList62);
        schema47.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = strSchema26.required((java.util.List<java.lang.String>) strList62);
        strSchema18.setEnum((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int68 = strSchema18.getMinLength();
        io.swagger.oas.models.media.Schema schema69 = schema8.additionalProperties((io.swagger.oas.models.media.Schema) strSchema18);
        io.swagger.oas.models.media.Schema schema71 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean72 = schema8.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        schema3.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema7 = schema3.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.List<java.lang.String> strList6 = schema5.getRequired();
        java.lang.Boolean boolean7 = schema5.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator8 = schema5.getDiscriminator();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(discriminator8);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = strSchema18.getDeprecated();
        java.lang.String str24 = strSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema26 = strSchema18.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema18.minimum(bigDecimal27);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema18);
        java.lang.String str30 = strSchema0.get$ref();
        strSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int33 = strSchema0.getMaxProperties();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "*/*" + "'", str30, "*/*");
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.externalDocs(externalDocumentation41);
        schema42.setMinLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        schema42.setProperties(strMap45);
        schema42.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema42.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema12.setDiscriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        java.math.BigDecimal bigDecimal28 = null;
        strSchema21.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strSchema21.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.multipleOf(bigDecimal36);
        schema31.setMinProperties((java.lang.Integer) 1);
        schema12.setNot(schema31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema31.externalDocs(externalDocumentation41);
        java.math.BigDecimal bigDecimal43 = null;
        schema31.setMultipleOf(bigDecimal43);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean9 = schema6.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema18.not(schema25);
        java.lang.Integer int29 = schema25.getMaxItems();
        schema25.setDescription("#/components/schemas/default");
        java.lang.String str32 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema6.additionalProperties(schema25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema40.getExternalDocs();
        io.swagger.oas.models.media.Schema schema43 = schema40.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema40.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.lang.Boolean boolean49 = strSchema46.getDeprecated();
        boolean boolean51 = strSchema46.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strSchema46.multipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strSchema46.deprecated((java.lang.Boolean) false);
        boolean boolean56 = schema40.equals((java.lang.Object) schema55);
        schema40.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema25.example((java.lang.Object) schema40);
        java.lang.String str62 = schema40.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema schema4 = strSchema0.type("");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) 10);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.name("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strSchema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strSchema30.type("default");
        io.swagger.oas.models.media.Schema schema36 = strSchema19.not(schema35);
        java.math.BigDecimal bigDecimal37 = null;
        schema35.setMultipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        io.swagger.oas.models.media.Schema schema43 = strSchema39.maxLength((java.lang.Integer) 1);
        schema43.setPattern("");
        io.swagger.oas.models.media.Schema schema47 = schema43.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray51 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        schema47.setEnum((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema35.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema14.required((java.util.List<java.lang.String>) strList52);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema22.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.getAdditionalProperties();
        boolean boolean29 = strSchema10.equals((java.lang.Object) schema22);
        boolean boolean30 = schema9.equals((java.lang.Object) boolean29);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.String str33 = schema9.getDescription();
        io.swagger.oas.models.media.Schema schema35 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean36 = schema35.getExclusiveMinimum();
        schema35.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.util.List<java.lang.String> strList20 = strSchema17.getRequired();
        strSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = strSchema17.getMinLength();
        java.lang.String str24 = strSchema17.get$ref();
        java.lang.String str25 = strSchema17.getPattern();
        java.math.BigDecimal bigDecimal26 = null;
        strSchema17.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = strSchema17.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema17);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema30.not((io.swagger.oas.models.media.Schema) strSchema37);
        strSchema37.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema48 = strSchema37.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema50 = strSchema37.minProperties((java.lang.Integer) 100);
        java.lang.String str51 = strSchema37.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        java.lang.Boolean boolean55 = strSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = strSchema52.type("default");
        io.swagger.oas.models.media.Schema schema58 = strSchema37.not((io.swagger.oas.models.media.Schema) strSchema52);
        io.swagger.oas.models.media.Schema schema59 = strSchema17.not((io.swagger.oas.models.media.Schema) strSchema37);
        java.lang.Boolean boolean60 = schema59.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + true + "'", boolean60, true);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema16.properties(strMap21);
        java.lang.Integer int23 = schema22.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.minProperties((java.lang.Integer) 0);
        java.lang.String str26 = schema22.getType();
        io.swagger.oas.models.media.Schema schema28 = schema22.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema12.not(schema28);
        schema29.setNullable((java.lang.Boolean) false);
        schema29.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema schema36 = schema29.writeOnly((java.lang.Boolean) false);
        schema36.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray10 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = schema8.getTitle();
        java.lang.Boolean boolean15 = schema8.getWriteOnly();
        java.lang.Boolean boolean16 = schema8.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        java.lang.String str7 = schema4.getPattern();
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        schema4.setMaxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema4.getWriteOnly();
        java.lang.Boolean boolean13 = schema4.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema4.setExternalDocs(externalDocumentation14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema4.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        java.lang.Integer int20 = schema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema19.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = strSchema25.getMinLength();
        java.lang.Integer int31 = strSchema25.getMaxLength();
        java.math.BigDecimal bigDecimal32 = strSchema25.getMaximum();
        io.swagger.oas.models.media.Schema schema33 = schema24.additionalProperties((io.swagger.oas.models.media.Schema) strSchema25);
        io.swagger.oas.models.media.Schema schema35 = schema24.type("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema24.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema10.additionalProperties(schema37);
        schema10.setFormat("*/*");
        schema10.setMaxProperties((java.lang.Integer) 10);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 1);
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema12.getNullable();
        schema12.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema12.discriminator(discriminator22);
        java.lang.String str24 = schema23.getDescription();
        io.swagger.oas.models.media.Schema schema26 = schema23.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal27 = schema23.getMultipleOf();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema0.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList27 = schema24.getEnum();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.String str12 = schema6.getName();
        io.swagger.oas.models.media.Schema schema14 = schema6.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal18 = schema14.getMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        schema6.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.addRequiredItem("");
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema10);
        strSchema10.setMinLength((java.lang.Integer) 0);
        strSchema10.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema10.discriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.maximum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        schema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema14.setDiscriminator(discriminator17);
        schema14.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.minLength((java.lang.Integer) 10);
        java.lang.Integer int9 = strSchema0.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema12.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema12.setDiscriminator(discriminator43);
        java.lang.Boolean boolean45 = schema12.getNullable();
        io.swagger.oas.models.media.Schema schema47 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal48 = null;
        schema12.setMultipleOf(bigDecimal48);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        strSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema7.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str29 = strSchema7.getType();
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strSchema7.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strSchema36.getExternalDocs();
        java.lang.String str42 = strSchema36.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        strSchema36.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema36.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = strSchema36.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = strSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema50.minItems((java.lang.Integer) 0);
        schema54.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema35.not(schema54);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMaximum(bigDecimal58);
        schema57.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        java.lang.String str11 = schema6.getPattern();
        schema6.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema6.maxItems((java.lang.Integer) 100);
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.description("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass24 = schema23.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        strSchema0.setProperties(strMap6);
        java.lang.String str8 = strSchema0.getFormat();
        java.lang.Integer int9 = strSchema0.getMaxItems();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        strSchema0.setDescription("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.util.List<java.lang.String> strList18 = strSchema15.getRequired();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema15.title("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema15.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema34 = strSchema26.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = strSchema26.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray39 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        schema36.setRequired((java.util.List<java.lang.String>) strList40);
        strSchema15.addExtension("", (java.lang.Object) schema36);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema36.xml(xML44);
        io.swagger.oas.models.media.Schema schema46 = null;
        schema45.setNot(schema46);
        java.lang.Boolean boolean48 = schema45.getExclusiveMaximum();
        strSchema0.setNot(schema45);
        schema45.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str52 = schema45.getTitle();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        java.util.List<java.lang.String> strList23 = strSchema16.getRequired();
        io.swagger.oas.models.media.Schema schema25 = strSchema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int26 = strSchema16.getMaxItems();
        strSchema16.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal14 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema16 = schema6.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema7.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        schema18.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        java.lang.Integer int30 = schema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema29.description("no description");
        schema34.setPattern("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema18.additionalProperties(schema39);
        java.math.BigDecimal bigDecimal41 = null;
        schema40.setMinimum(bigDecimal41);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setReadOnly((java.lang.Boolean) false);
        strSchema0.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        java.lang.String str10 = schema9.getType();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.maximum(bigDecimal11);
        java.lang.String str13 = schema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("default");
        schema24.setDescription("default");
        java.lang.Object obj29 = schema24.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        java.lang.Integer int37 = schema36.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        schema39.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema43.properties(strMap48);
        java.lang.Integer int50 = schema49.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) 0);
        java.lang.String str53 = schema49.getType();
        schema49.setReadOnly((java.lang.Boolean) true);
        schema49.set$ref("");
        java.lang.String str58 = schema49.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray72 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        schema69.setRequired((java.util.List<java.lang.String>) strList73);
        schema49.setRequired((java.util.List<java.lang.String>) strList73);
        io.swagger.oas.models.media.Schema schema77 = schema39.required((java.util.List<java.lang.String>) strList73);
        io.swagger.oas.models.media.Schema schema78 = schema24.additionalProperties(schema77);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema79 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema79.setType("hi!");
        io.swagger.oas.models.media.Schema schema83 = strSchema79.maxLength((java.lang.Integer) 1);
        schema83.setPattern("");
        io.swagger.oas.models.media.Schema schema87 = schema83.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema91 = schema89.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema92 = schema24.not(schema89);
        io.swagger.oas.models.media.Schema schema94 = schema92.nullable((java.lang.Boolean) true);
        boolean boolean95 = schema12.equals((java.lang.Object) schema92);
        io.swagger.oas.models.media.Schema schema97 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        strSchema0.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema17.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema25.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.not(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        schema28.setMinProperties((java.lang.Integer) 1);
        java.lang.Integer int33 = schema28.getMaxLength();
        schema28.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str21 = schema20.getName();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.util.List<java.lang.String> strList32 = strSchema29.getRequired();
        strSchema29.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int35 = strSchema29.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema43 = strSchema29.not((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema24.setExample((java.lang.Object) schema43);
        strSchema24.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema48 = strSchema24.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) (-1));
        boolean boolean51 = schema20.equals((java.lang.Object) schema50);
        schema50.setMaxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean54 = schema50.getUniqueItems();
        java.lang.String str55 = schema50.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "no description" + "'", str21, "no description");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("no description");
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        schema13.setUniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema13.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("");
        java.lang.Object obj10 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = strSchema13.getDeprecated();
        java.lang.String str19 = strSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema21 = strSchema13.maxLength((java.lang.Integer) 0);
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int33 = schema32.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.format("no description");
        io.swagger.oas.models.media.Schema schema43 = schema32.not(schema42);
        java.lang.Integer int44 = schema32.getMaxItems();
        java.lang.Integer int45 = schema32.getMaxLength();
        io.swagger.oas.models.media.Schema schema47 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean49 = strSchema48.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = strSchema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema52 = strSchema48.description("");
        schema52.setPattern("hi!");
        java.lang.Integer int55 = schema52.getMinItems();
        io.swagger.oas.models.media.Schema schema57 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList58 = schema57.getRequired();
        schema47.setRequired(strList58);
        schema21.setEnum(strList58);
        io.swagger.oas.models.media.Schema schema61 = schema12.required(strList58);
        io.swagger.oas.models.media.Schema schema62 = schema12.getNot();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(schema62);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setDescription("no description");
        io.swagger.oas.models.media.XML xML7 = schema4.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(xML7);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.Integer int8 = schema7.getMinItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.Boolean boolean11 = strSchema5.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = strSchema10.getMinLength();
        java.lang.Integer int16 = strSchema10.getMaxLength();
        java.math.BigDecimal bigDecimal17 = strSchema10.getMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema9.additionalProperties((io.swagger.oas.models.media.Schema) strSchema10);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema9.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = schema9.getDeprecated();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.lang.Object obj28 = schema25.getExample();
        io.swagger.oas.models.media.Schema schema30 = schema25.minItems((java.lang.Integer) 1);
        schema30.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str15 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = strSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema30.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = strSchema36.getMinLength();
        java.lang.Integer int42 = strSchema36.getMaxLength();
        java.math.BigDecimal bigDecimal43 = strSchema36.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema35.additionalProperties((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema36.setType("");
        io.swagger.oas.models.media.Schema schema47 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema36);
        java.lang.String str48 = schema22.getPattern();
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.lang.String str54 = strSchema0.getDefault();
        java.util.List<java.lang.String> strList55 = strSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strSchema56.setExtensions(strMap57);
        io.swagger.oas.models.media.Schema schema60 = strSchema56.type("");
        java.lang.Boolean boolean61 = schema60.getReadOnly();
        boolean boolean62 = strSchema0.equals((java.lang.Object) schema60);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        java.lang.Integer int4 = strSchema0.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        strSchema0.setExtensions(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema7.title("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.example((java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema20.getMinLength();
        java.math.BigDecimal bigDecimal22 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = strSchema0.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.minimum(bigDecimal26);
        java.lang.Boolean boolean28 = schema27.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.xml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str21 = schema20.getFormat();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema20.minimum(bigDecimal22);
        java.lang.Integer int24 = schema23.getMinLength();
        java.lang.Integer int25 = schema23.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.name("no description");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMultipleOf(bigDecimal16);
        java.lang.String str18 = schema15.getPattern();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.maximum(bigDecimal19);
        schema20.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "", "", "no description", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNotNull(tagSetOptional14);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        java.lang.Integer int8 = schema4.getMaxItems();
        java.math.BigDecimal bigDecimal9 = schema4.getMinimum();
        schema4.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema24.getAdditionalProperties();
        boolean boolean31 = strSchema12.equals((java.lang.Object) schema24);
        strSchema12.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strSchema12.deprecated((java.lang.Boolean) false);
        schema35.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal38 = schema35.getMinimum();
        boolean boolean39 = schema4.equals((java.lang.Object) bigDecimal38);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema13);
        io.swagger.oas.models.media.Schema schema26 = schema9.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        java.lang.Integer int34 = schema33.getMaxProperties();
        java.math.BigDecimal bigDecimal35 = null;
        schema33.setMinimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema33.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = schema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.uniqueItems((java.lang.Boolean) true);
        java.lang.String str45 = schema44.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.discriminator(discriminator46);
        schema44.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema44.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema53 = schema26.not(schema44);
        java.util.List<java.lang.String> strList54 = schema26.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema7.getExternalDocs();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        java.lang.Integer int20 = schema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema19.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema19.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.writeOnly((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getTitle();
        java.lang.Boolean boolean30 = schema28.getExclusiveMinimum();
        schema10.setAdditionalProperties(schema28);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = schema27.getMaximum();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.addRequiredItem("");
        schema10.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        schema23.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strSchema30.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema42.getAdditionalProperties();
        boolean boolean49 = strSchema30.equals((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema51 = schema42.minProperties((java.lang.Integer) (-1));
        boolean boolean52 = schema23.equals((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema51.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema51.minimum(bigDecimal55);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        schema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema9.getNullable();
        io.swagger.oas.models.media.Schema schema16 = schema9.name("");
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML5 = null;
        strSchema0.setXml(xML5);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema9.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strSchema28.title("no description");
        java.lang.String str36 = schema35.getDescription();
        boolean boolean37 = schema27.equals((java.lang.Object) schema35);
        java.util.List<java.lang.String> strList38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.required(strList38);
        schema35.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema35.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = null;
        schema35.setMaximum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        io.swagger.oas.models.media.Schema schema51 = strSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = schema51.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean54 = schema53.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema57 = schema53.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        io.swagger.oas.models.media.Schema schema62 = strSchema58.maxLength((java.lang.Integer) 1);
        schema62.setPattern("");
        io.swagger.oas.models.media.Schema schema66 = schema62.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray70 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        schema66.setEnum((java.util.List<java.lang.String>) strList71);
        schema57.setEnum((java.util.List<java.lang.String>) strList71);
        schema35.setEnum((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema76 = schema9.required((java.util.List<java.lang.String>) strList71);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema18.addProperties("no description", schema29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        strSchema32.setNot((io.swagger.oas.models.media.Schema) strSchema37);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema32.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        java.util.List<java.lang.String> strList48 = strSchema45.getRequired();
        strSchema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strSchema45.title("no description");
        java.lang.String str53 = schema52.getDescription();
        boolean boolean54 = schema44.equals((java.lang.Object) schema52);
        java.util.List<java.lang.String> strList55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.required(strList55);
        schema52.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema52.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema30.addProperties("hi!", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema61.description("*/*");
        io.swagger.oas.models.media.Schema schema64 = strSchema0.addProperties("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema schema66 = schema64.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = schema64.getDeprecated();
        java.lang.Integer int68 = schema64.getMinProperties();
        io.swagger.oas.models.media.XML xML69 = schema64.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(xML69);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema6.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.exclusiveMinimum((java.lang.Boolean) false);
        strSchema11.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strSchema21.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMaximum((java.lang.Boolean) true);
        schema29.setMaxItems((java.lang.Integer) 0);
        java.lang.String str32 = schema29.toString();
        java.util.List<java.lang.String> strList33 = schema29.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema20.required(strList33);
        io.swagger.oas.models.media.Schema schema35 = schema10.required(strList33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean37 = strSchema36.getNullable();
        java.lang.Object obj38 = strSchema36.getExample();
        java.math.BigDecimal bigDecimal39 = null;
        strSchema36.setMaximum(bigDecimal39);
        strSchema36.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.exclusiveMinimum((java.lang.Boolean) false);
        schema35.setNot((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema36.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str32, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        schema40.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        java.lang.String str47 = schema46.getType();
        java.lang.Class<?> wildcardClass48 = schema46.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int27 = schema26.getMinProperties();
        java.lang.Integer int28 = schema26.getMinItems();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        io.swagger.oas.models.media.Schema schema14 = schema11.pattern("default");
        io.swagger.oas.models.media.Schema schema16 = schema11.type("default");
        java.math.BigDecimal bigDecimal17 = schema11.getMinimum();
        schema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.Boolean boolean11 = schema6.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema6.getExtensions();
        java.lang.String str13 = schema6.getName();
        java.util.List<java.lang.String> strList14 = schema6.getRequired();
        java.lang.Integer int15 = schema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = schema6.maxItems((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema6.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "no description" + "'", str13, "no description");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema12.getWriteOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces31, produces32, components33);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str23 = strSchema22.getTitle();
        io.swagger.oas.models.media.Schema schema25 = strSchema22.format("");
        strSchema22.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = strSchema22.getMaximum();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMinimum();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.deprecated((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) (-1));
        schema21.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema36.setDiscriminator(discriminator37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema36.getProperties();
        java.lang.String str40 = schema36.getFormat();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal10 = null;
        strSchema0.setMaximum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = strSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strSchema0.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema schema54 = null;
        strSchema0.setNot(schema54);
        io.swagger.oas.models.media.Schema schema57 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema57.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = strSchema6.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean29 = strSchema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.$ref("default");
        strSchema6.setExample((java.lang.Object) schema34);
        java.lang.String str40 = strSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        java.util.List<java.lang.String> strList44 = strSchema41.getRequired();
        strSchema41.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strSchema41.title("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema41.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setName("no description");
        io.swagger.oas.models.media.Schema schema58 = strSchema52.type("");
        io.swagger.oas.models.media.Schema schema60 = strSchema52.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = strSchema52.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray65 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema62.setRequired((java.util.List<java.lang.String>) strList66);
        strSchema41.addExtension("", (java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        strSchema70.setName("no description");
        io.swagger.oas.models.media.Schema schema76 = strSchema70.type("");
        io.swagger.oas.models.media.Schema schema78 = strSchema70.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = strSchema70.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray83 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        schema80.setRequired((java.util.List<java.lang.String>) strList84);
        schema62.setEnum((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema88 = strSchema6.required((java.util.List<java.lang.String>) strList84);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        strSchema0.setName("default");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema18.properties(strMap23);
        java.lang.Integer int25 = schema24.getMaxProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema24.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = strSchema30.getMinLength();
        java.lang.Integer int36 = strSchema30.getMaxLength();
        java.math.BigDecimal bigDecimal37 = strSchema30.getMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema29.additionalProperties((io.swagger.oas.models.media.Schema) strSchema30);
        strSchema30.setType("");
        io.swagger.oas.models.media.Schema schema41 = schema16.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema30);
        io.swagger.oas.models.media.Schema schema42 = strSchema30.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        io.swagger.oas.models.media.Schema schema47 = strSchema43.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema47.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean50 = schema49.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema49.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        io.swagger.oas.models.media.Schema schema58 = strSchema54.maxLength((java.lang.Integer) 1);
        schema58.setPattern("");
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray66 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema62.setEnum((java.util.List<java.lang.String>) strList67);
        schema53.setEnum((java.util.List<java.lang.String>) strList67);
        strSchema30.setEnum((java.util.List<java.lang.String>) strList67);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList67);
        java.lang.Object obj73 = strSchema0.getExample();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema0.multipleOf(bigDecimal17);
        java.lang.String str19 = strSchema0.getType();
        strSchema0.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minimum(bigDecimal9);
        java.lang.Object obj11 = strSchema0.getExample();
        java.lang.Object obj12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.example(obj12);
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        strSchema7.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema schema18 = strSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strSchema20.getExternalDocs();
        java.lang.String str26 = strSchema20.getTitle();
        strSchema20.setMaxItems((java.lang.Integer) (-1));
        strSchema7.addExtension("hi!", (java.lang.Object) strSchema20);
        io.swagger.oas.models.media.Schema schema31 = strSchema20.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMultipleOf(bigDecimal32);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema6.readOnly((java.lang.Boolean) true);
        java.lang.Integer int21 = schema20.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema8.setExternalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = strSchema14.getDeprecated();
        java.lang.String str20 = strSchema14.getDescription();
        io.swagger.oas.models.media.Schema schema22 = strSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = schema26.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema55 = schema8.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema57 = schema8.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        strSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = strSchema0.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setDeprecated((java.lang.Boolean) true);
        java.lang.String str17 = schema14.getPattern();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) true);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema10.addProperties("*/*", schema22);
        schema10.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str30 = schema29.getType();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str13 = schema10.toString();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = strSchema15.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = strSchema15.type("*/*");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema10.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema15);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema10.getDiscriminator();
        java.math.BigDecimal bigDecimal27 = null;
        schema10.setMinimum(bigDecimal27);
        java.lang.String str29 = schema10.getName();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema10.discriminator(discriminator30);
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMaximum(bigDecimal32);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema12.maximum(bigDecimal22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strSchema12.setDiscriminator(discriminator24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional32);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = schema23.getExclusiveMinimum();
        java.lang.Object obj27 = schema23.getExample();
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema23.minItems((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML33 = schema23.getXml();
        io.swagger.oas.models.media.Schema schema35 = schema23.nullable((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass36 = schema23.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        java.lang.String str17 = schema12.toString();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema12.setDiscriminator(discriminator20);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("no description");
        java.lang.String str27 = schema24.getFormat();
        java.util.List<java.lang.String> strList28 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = null;
        schema24.setNot(schema31);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema11.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        java.lang.Integer int20 = schema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        java.lang.String str23 = schema19.getType();
        io.swagger.oas.models.media.Schema schema25 = schema19.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean26 = schema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema29 = schema4.additionalProperties(schema25);
        java.lang.Integer int30 = schema4.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        strSchema6.setMinimum(bigDecimal22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = strSchema6.properties(strMap24);
        java.lang.String str26 = strSchema6.getDefault();
        java.lang.Class<?> wildcardClass27 = strSchema6.getClass();
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        schema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean13 = schema8.getExclusiveMaximum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema30.not((io.swagger.oas.models.media.Schema) strSchema37);
        strSchema37.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema48 = strSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        schema48.setNot(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema29.not(schema53);
        java.lang.Boolean boolean58 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema60 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema60.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema60.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean13 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema12.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean19 = strSchema18.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = strSchema18.getExternalDocs();
        strSchema18.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema31.not(schema38);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str43 = strSchema42.getTitle();
        io.swagger.oas.models.media.Schema schema45 = strSchema42.format("");
        strSchema42.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = schema54.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema56.setRequired((java.util.List<java.lang.String>) strList59);
        strSchema42.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema41.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.externalDocs(externalDocumentation64);
        strSchema18.setDefault((java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema68 = schema63.maxLength((java.lang.Integer) 100);
        java.lang.String str69 = schema68.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema68.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema71 = schema17.additionalProperties(schema68);
        schema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        java.lang.Integer int21 = schema20.getMaxProperties();
        java.math.BigDecimal bigDecimal22 = null;
        schema20.setMinimum(bigDecimal22);
        schema20.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        java.util.List<java.lang.String> strList29 = strSchema26.getRequired();
        strSchema26.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema26.title("no description");
        schema33.set$ref("");
        io.swagger.oas.models.media.Schema schema37 = schema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        io.swagger.oas.models.media.Schema schema42 = strSchema38.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = strSchema38.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        java.util.List<java.lang.String> strList48 = strSchema45.getRequired();
        strSchema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strSchema45.title("no description");
        java.lang.String str53 = schema52.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.externalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str57 = strSchema56.getTitle();
        io.swagger.oas.models.media.Schema schema59 = strSchema56.format("");
        strSchema56.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        io.swagger.oas.models.media.Schema schema66 = strSchema62.maxLength((java.lang.Integer) 1);
        schema66.setPattern("");
        io.swagger.oas.models.media.Schema schema70 = schema66.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray74 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema70.setEnum((java.util.List<java.lang.String>) strList75);
        strSchema56.setEnum((java.util.List<java.lang.String>) strList75);
        schema55.setRequired((java.util.List<java.lang.String>) strList75);
        schema44.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema81 = schema37.required((java.util.List<java.lang.String>) strList75);
        java.util.List<java.lang.String> strList82 = schema37.getRequired();
        schema20.setRequired(strList82);
        strSchema0.setEnum(strList82);
        io.swagger.oas.models.media.Schema schema86 = strSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema7.externalDocs(externalDocumentation9);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema7.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = schema7.getMultipleOf();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema10.minimum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        schema11.setPattern("");
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.additionalProperties(schema15);
        io.swagger.oas.models.media.Schema schema18 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean10 = schema4.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean13 = strSchema12.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        schema20.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.example((java.lang.Object) '#');
        strSchema12.setExample((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema27 = strSchema12.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean37 = schema36.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema45 = schema36.not(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema45.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema52 = schema27.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        schema51.setReadOnly((java.lang.Boolean) false);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema51);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray23 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.List<java.lang.String> strList27 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.addProperties("hi!", schema20);
        java.math.BigDecimal bigDecimal29 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        java.math.BigDecimal bigDecimal37 = null;
        strSchema30.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strSchema30.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = schema40.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.multipleOf(bigDecimal45);
        schema40.setMinProperties((java.lang.Integer) 1);
        schema40.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema20.not(schema40);
        java.lang.Boolean boolean52 = schema51.getReadOnly();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema51.multipleOf(bigDecimal53);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML18 = null;
        schema17.setXml(xML18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        java.lang.Integer int28 = schema27.getMaxProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema27.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema27.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema27.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema17.addProperties("default", schema36);
        schema36.set$ref("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema0.example((java.lang.Object) schema36);
        java.lang.Boolean boolean41 = schema36.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema36.discriminator(discriminator42);
        java.lang.Boolean boolean44 = schema36.getUniqueItems();
        java.lang.String str45 = schema36.getTitle();
        schema36.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str21 = strSchema20.getTitle();
        io.swagger.oas.models.media.Schema schema23 = strSchema20.format("");
        strSchema20.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema20.setRequired((java.util.List<java.lang.String>) strList37);
        boolean boolean41 = schema17.equals((java.lang.Object) strSchema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        io.swagger.oas.models.media.Schema schema46 = strSchema42.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean49 = schema48.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema schema53 = schema48.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = schema57.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema60 = schema57.maxLength((java.lang.Integer) 100);
        schema17.setDefault((java.lang.Object) schema57);
        io.swagger.oas.models.media.Schema schema63 = schema17.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str16 = strSchema15.getTitle();
        io.swagger.oas.models.media.Schema schema18 = strSchema15.format("");
        strSchema15.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strSchema15.getExtensions();
        java.lang.Integer int22 = strSchema15.getMinItems();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema15);
        strSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema15.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema31 = strSchema15.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.description("");
        io.swagger.oas.models.media.Schema schema14 = schema8.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        boolean boolean20 = strSchema15.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema15.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strSchema15.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        boolean boolean27 = schema14.equals((java.lang.Object) schema26);
        schema14.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = schema14.getReadOnly();
        schema14.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema14.externalDocs(externalDocumentation33);
        java.lang.Integer int35 = schema34.getMinLength();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strSchema0.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.lang.Boolean boolean9 = schema5.getReadOnly();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema5.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.lang.String str11 = schema10.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema14 = strSchema12.maxItems((java.lang.Integer) 100);
        schema14.setTitle("");
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema11.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema20.properties(strMap25);
        java.lang.Integer int27 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema26.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = strSchema32.getMinLength();
        java.lang.Integer int38 = strSchema32.getMaxLength();
        java.math.BigDecimal bigDecimal39 = strSchema32.getMaximum();
        io.swagger.oas.models.media.Schema schema40 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strSchema32);
        io.swagger.oas.models.media.Schema schema42 = schema31.type("hi!");
        io.swagger.oas.models.media.Schema schema44 = schema31.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.addRequiredItem("no description");
        java.lang.String str47 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema49 = schema46.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema11.not(schema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema49.setExternalDocs(externalDocumentation51);
        schema49.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.xml(xML14);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        strSchema0.setMaximum(bigDecimal8);
        strSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strSchema0.minItems((java.lang.Integer) 0);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML5 = null;
        strSchema0.setXml(xML5);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) 100);
        schema12.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        java.lang.Integer int12 = schema9.getMaxLength();
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setName("#/components/schemas/default");
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema9.getDiscriminator();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.lang.Boolean boolean11 = strSchema8.getDeprecated();
        boolean boolean13 = strSchema8.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strSchema8.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strSchema8.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        io.swagger.oas.models.media.Schema schema25 = strSchema21.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean28 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = strSchema31.getDeprecated();
        java.lang.String str37 = strSchema31.getDescription();
        io.swagger.oas.models.media.Schema schema39 = strSchema31.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = schema39.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = strSchema53.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = strSchema53.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray66 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema63.setRequired((java.util.List<java.lang.String>) strList67);
        schema52.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema71 = schema43.required((java.util.List<java.lang.String>) strList67);
        schema30.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema73 = schema17.required((java.util.List<java.lang.String>) strList67);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        strSchema0.setProperties(strMap75);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = strSchema0.minimum(bigDecimal77);
        java.lang.String str79 = schema78.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema8.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema21.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = strSchema27.getMinLength();
        java.lang.Integer int33 = strSchema27.getMaxLength();
        java.math.BigDecimal bigDecimal34 = strSchema27.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema26.additionalProperties((io.swagger.oas.models.media.Schema) strSchema27);
        io.swagger.oas.models.media.Schema schema37 = schema26.type("hi!");
        io.swagger.oas.models.media.Schema schema39 = schema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean44 = strSchema43.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = strSchema43.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = strSchema43.description("");
        java.lang.Integer int48 = strSchema43.getMaxProperties();
        strSchema43.setType("default");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strSchema43.minimum(bigDecimal51);
        strSchema43.setDeprecated((java.lang.Boolean) true);
        schema41.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        io.swagger.oas.models.media.Schema schema60 = strSchema56.maxLength((java.lang.Integer) 1);
        schema60.setPattern("");
        io.swagger.oas.models.media.Schema schema64 = schema60.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = schema66.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema70 = schema68.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema41.not(schema70);
        schema14.setNot(schema70);
        java.lang.Boolean boolean73 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator74 = null;
        schema14.setDiscriminator(discriminator74);
        java.lang.Integer int76 = schema14.getMaxItems();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        strSchema0.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema28.not(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema28.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema28.name("hi!");
        java.lang.Boolean boolean43 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema28.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.multipleOf(bigDecimal48);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema49);
        schema49.setTitle("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int11 = strSchema6.getMinLength();
        strSchema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setNot((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema15 = schema5.getNot();
        java.lang.String str16 = schema15.getName();
        schema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema20.getExtensions();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema12.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema12.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema12.setDiscriminator(discriminator43);
        java.lang.Boolean boolean45 = schema12.getNullable();
        io.swagger.oas.models.media.Schema schema47 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema12.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema7.not(schema17);
        schema17.setNullable((java.lang.Boolean) false);
        java.lang.Integer int21 = schema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.lang.Boolean boolean27 = strSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = strSchema24.type("default");
        java.lang.String str30 = schema29.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema29.setExtensions(strMap31);
        java.lang.Boolean boolean33 = schema29.getReadOnly();
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.xml(xML34);
        schema35.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema35.$ref("no description");
        io.swagger.oas.models.media.Schema schema40 = schema17.not(schema39);
        io.swagger.oas.models.media.Schema schema42 = schema17.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        io.swagger.oas.models.media.XML xML20 = null;
        schema18.setXml(xML20);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema7.title("no description");
        java.lang.String str15 = schema14.getDescription();
        java.lang.String str16 = schema14.getType();
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema30.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str42 = strSchema41.getTitle();
        io.swagger.oas.models.media.Schema schema44 = strSchema41.format("");
        strSchema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = schema53.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray57 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        schema55.setRequired((java.util.List<java.lang.String>) strList58);
        strSchema41.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = schema40.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.externalDocs(externalDocumentation63);
        schema64.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal67 = schema64.getMaximum();
        schema14.addExtension("", (java.lang.Object) schema64);
        schema64.setMaxLength((java.lang.Integer) 100);
        schema4.setAdditionalProperties(schema64);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        strSchema73.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int78 = strSchema73.getMinLength();
        java.lang.Integer int79 = strSchema73.getMaxLength();
        java.lang.Integer int80 = strSchema73.getMinProperties();
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = strSchema73.xml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema73);
        java.util.List<java.lang.String> strList84 = schema4.getRequired();
        schema4.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strList84);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.description("hi!");
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.pattern("no description");
        strSchema0.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        strSchema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema28.properties(strMap33);
        java.lang.Integer int35 = schema34.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.minProperties((java.lang.Integer) 0);
        java.lang.String str38 = schema34.getType();
        strSchema19.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema41 = strSchema19.maxProperties((java.lang.Integer) 1);
        schema41.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = strSchema0.not(schema41);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema schema47 = schema44.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.uniqueItems((java.lang.Boolean) true);
        schema13.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setFormat("no description");
        schema18.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        java.lang.Integer int9 = schema8.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("");
        io.swagger.oas.models.media.Schema schema15 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        java.lang.String str10 = schema9.getType();
        io.swagger.oas.models.media.Schema schema12 = schema9.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = strSchema16.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema16.not((io.swagger.oas.models.media.Schema) strSchema23);
        strSchema11.setExample((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema33.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema37.getProperties();
        boolean boolean39 = strSchema0.equals((java.lang.Object) schema37);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        io.swagger.oas.models.media.Schema schema10 = strSchema6.maxLength((java.lang.Integer) 1);
        schema10.setPattern("");
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray18 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema14.setEnum((java.util.List<java.lang.String>) strList19);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList19);
        strSchema0.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str25 = strSchema0.getDefault();
        strSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema2 = strSchema0.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = strSchema0.properties(strMap3);
        java.lang.String str5 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(schema6);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        io.swagger.oas.models.media.Schema schema23 = strSchema11.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        schema25.setName("");
        java.lang.Object obj28 = schema25.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        schema18.setPattern("default");
        schema18.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema34.exclusiveMaximum((java.lang.Boolean) false);
        schema42.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema47 = schema31.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = strSchema48.properties(strMap53);
        strSchema48.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.pattern("no description");
        schema42.setDefault((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean62 = strSchema61.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = strSchema61.getExternalDocs();
        io.swagger.oas.models.media.Schema schema65 = strSchema61.description("");
        java.lang.Boolean boolean66 = schema65.getUniqueItems();
        java.lang.Boolean boolean67 = schema65.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema69 = schema65.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.maximum(bigDecimal70);
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema71);
        schema73.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean76 = schema18.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 0);
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        java.lang.String str17 = schema15.getName();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.multipleOf(bigDecimal18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.maximum(bigDecimal20);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema18.getMinLength();
        schema18.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema18.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        io.swagger.oas.models.media.Schema schema50 = strSchema46.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema52 = strSchema46.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.util.List<java.lang.String> strList56 = strSchema53.getRequired();
        strSchema53.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = strSchema53.title("no description");
        java.lang.String str61 = schema60.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema60.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str65 = strSchema64.getTitle();
        io.swagger.oas.models.media.Schema schema67 = strSchema64.format("");
        strSchema64.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        io.swagger.oas.models.media.Schema schema74 = strSchema70.maxLength((java.lang.Integer) 1);
        schema74.setPattern("");
        io.swagger.oas.models.media.Schema schema78 = schema74.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray82 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema78.setEnum((java.util.List<java.lang.String>) strList83);
        strSchema64.setEnum((java.util.List<java.lang.String>) strList83);
        schema63.setRequired((java.util.List<java.lang.String>) strList83);
        schema52.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema89 = schema45.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxLength((java.lang.Integer) 1);
        java.lang.String str92 = schema89.getFormat();
        java.lang.Integer int93 = schema89.getMinLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(int93);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema20.minItems((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass27 = schema26.getClass();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema9 = schema6.$ref("*/*");
        java.lang.Integer int10 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema6.setXml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema6.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        schema3.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema7 = schema3.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema8.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema12.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean15 = schema14.getExclusiveMaximum();
        schema14.setType("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema14.externalDocs(externalDocumentation18);
        schema7.setDefault((java.lang.Object) schema19);
        java.lang.Integer int21 = schema7.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        schema10.setMaxItems((java.lang.Integer) 1);
        java.lang.String str21 = schema10.toString();
        io.swagger.oas.models.media.Schema schema23 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema10.getExternalDocs();
        java.lang.String str25 = schema10.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.minimum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getDeprecated();
        java.lang.Integer int14 = strSchema10.getMaxItems();
        strSchema10.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator17 = strSchema10.getDiscriminator();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.minItems((java.lang.Integer) 1);
        schema9.setDefault((java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema21 = schema9.getNot();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        schema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema27.getExtensions();
        java.lang.String str29 = schema27.getPattern();
        io.swagger.oas.models.media.Schema schema31 = schema27.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema11.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema11.getExtensions();
        schema11.setMinProperties((java.lang.Integer) 0);
        schema11.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema11.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.XML xML21 = schema20.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(xML21);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        schema13.setExtensions(strMap14);
        java.lang.Boolean boolean16 = schema13.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.externalDocs(externalDocumentation17);
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean23 = schema18.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema6.getDiscriminator();
        schema6.setDescription("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema18 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        schema5.setDescription("default");
        io.swagger.oas.models.media.Schema schema65 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema5.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal68 = null;
        schema67.setMaximum(bigDecimal68);
        java.util.List<java.lang.String> strList70 = null;
        schema67.setRequired(strList70);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        strSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean20 = strSchema19.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strSchema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strSchema19.description("");
        java.lang.Integer int24 = strSchema19.getMaxProperties();
        strSchema19.setType("default");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema19.minimum(bigDecimal27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema19.discriminator(discriminator29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        strSchema19.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema19.xml(xML33);
        io.swagger.oas.models.media.Schema schema35 = strSchema0.example((java.lang.Object) strSchema19);
        java.lang.Object obj36 = strSchema0.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = schema18.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        java.lang.Integer int11 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema schema13 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = strSchema9.getDeprecated();
        java.lang.String str15 = strSchema9.getDescription();
        io.swagger.oas.models.media.Schema schema17 = strSchema9.maxLength((java.lang.Integer) 0);
        java.lang.Integer int18 = strSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema20 = strSchema9.format("");
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema9.not(schema21);
        strSchema0.setDefault((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema25 = strSchema0.maxItems((java.lang.Integer) 1);
        java.lang.Object obj26 = schema25.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        java.lang.Boolean boolean30 = strSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = strSchema27.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema schema39 = strSchema33.type("");
        java.lang.Integer int40 = schema39.getMaxProperties();
        java.math.BigDecimal bigDecimal41 = null;
        schema39.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema39.getAdditionalProperties();
        boolean boolean46 = strSchema27.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema48 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.String str49 = schema39.getDescription();
        io.swagger.oas.models.media.Schema schema51 = schema39.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.discriminator(discriminator52);
        java.lang.String str54 = schema51.getDescription();
        schema25.setDefault((java.lang.Object) str54);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        strSchema0.setDescription("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.util.List<java.lang.String> strList18 = strSchema15.getRequired();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema15.title("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema15.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema34 = strSchema26.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = strSchema26.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray39 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        schema36.setRequired((java.util.List<java.lang.String>) strList40);
        strSchema15.addExtension("", (java.lang.Object) schema36);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema36.xml(xML44);
        io.swagger.oas.models.media.Schema schema46 = null;
        schema45.setNot(schema46);
        java.lang.Boolean boolean48 = schema45.getExclusiveMaximum();
        strSchema0.setNot(schema45);
        java.lang.String str50 = strSchema0.getDefault();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.math.BigDecimal bigDecimal8 = strSchema0.getMaximum();
        java.lang.String str9 = strSchema0.getPattern();
        java.lang.Boolean boolean10 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("default");
        io.swagger.oas.models.media.Schema schema30 = strSchema14.addProperties("*/*", schema29);
        java.lang.Boolean boolean31 = schema30.getUniqueItems();
        schema30.setMaxItems((java.lang.Integer) 10);
        schema30.setMinItems((java.lang.Integer) 100);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema30);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        schema3.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema7 = schema3.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.name("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.$ref("hi!");
        java.lang.String str8 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema10 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean11 = schema7.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "#/components/schemas/hi!" + "'", str8, "#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        java.lang.Integer int25 = schema6.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strSchema20.maxLength((java.lang.Integer) 1);
        schema24.setPattern("");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray32 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        schema28.setEnum((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema16.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema36.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str11 = strSchema0.getPattern();
        strSchema0.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.getNot();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj6 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema15 = strSchema7.writeOnly((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema schema18 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList12 = schema9.getEnum();
        schema9.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        schema11.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = schema11.getMinimum();
        java.lang.String str26 = schema11.getPattern();
        java.lang.Object obj27 = null;
        boolean boolean28 = schema11.equals(obj27);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        schema12.setPattern("");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        strSchema0.setReadOnly((java.lang.Boolean) false);
        strSchema0.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean13 = strSchema12.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = strSchema12.description("");
        schema16.setPattern("hi!");
        java.lang.Integer int19 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema21 = schema16.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str23 = strSchema22.getTitle();
        io.swagger.oas.models.media.Schema schema25 = strSchema22.format("");
        strSchema22.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = strSchema22.getMaximum();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMinimum();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = strSchema32.getExternalDocs();
        java.lang.String str38 = strSchema32.getTitle();
        strSchema32.setName("default");
        strSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setName("no description");
        io.swagger.oas.models.media.Schema schema49 = strSchema43.type("");
        io.swagger.oas.models.media.Schema schema51 = schema49.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray53 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        schema51.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strSchema32.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema31.required((java.util.List<java.lang.String>) strList54);
        schema21.setEnum((java.util.List<java.lang.String>) strList54);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList54);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.pattern("no description");
        schema10.setTitle("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        java.lang.String str15 = schema10.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema8.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        io.swagger.oas.models.media.Schema schema30 = strSchema26.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema30.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema schema39 = strSchema33.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema41 = strSchema33.nullable((java.lang.Boolean) true);
        schema30.setExample((java.lang.Object) strSchema33);
        io.swagger.oas.models.media.Schema schema44 = strSchema33.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setMinItems((java.lang.Integer) (-1));
        schema8.setNot(schema44);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = strSchema48.getMinLength();
        java.lang.String str54 = strSchema48.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        java.util.List<java.lang.String> strList59 = strSchema56.getRequired();
        strSchema56.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = strSchema56.title("no description");
        schema63.set$ref("");
        io.swagger.oas.models.media.Schema schema67 = schema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strSchema48.addProperties("*/*", schema67);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = strSchema69.properties(strMap74);
        java.lang.Integer int76 = schema75.getMaxProperties();
        io.swagger.oas.models.media.Schema schema78 = schema75.minProperties((java.lang.Integer) 0);
        java.lang.String str79 = schema75.getType();
        io.swagger.oas.models.media.Schema schema81 = schema75.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema83 = schema81.maxLength((java.lang.Integer) 0);
        schema67.setAdditionalProperties(schema81);
        schema44.setAdditionalProperties(schema81);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.name("");
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema6.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = null;
        schema25.setMultipleOf(bigDecimal28);
        schema25.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema2 = strSchema0.maxItems((java.lang.Integer) 100);
        schema2.setTitle("");
        java.lang.Integer int5 = schema2.getMaxLength();
        java.lang.String str6 = schema2.getPattern();
        java.lang.String str7 = schema2.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.util.List<java.lang.String> strList11 = strSchema8.getRequired();
        strSchema8.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int14 = strSchema8.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema22 = strSchema8.not((io.swagger.oas.models.media.Schema) strSchema15);
        boolean boolean23 = schema2.equals((java.lang.Object) strSchema15);
        java.lang.Boolean boolean24 = schema2.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        schema10.setFormat("");
        schema10.setTitle("hi!");
        java.lang.Boolean boolean17 = schema10.getUniqueItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema10.setProperties(strMap18);
        java.lang.Integer int20 = schema10.getMinProperties();
        java.lang.Boolean boolean21 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema23 = schema10.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        io.swagger.oas.models.media.Schema schema38 = schema33.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema33.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        schema36.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = strSchema15.required((java.util.List<java.lang.String>) strList51);
        strSchema7.setEnum((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        io.swagger.oas.models.media.Schema schema61 = strSchema57.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = strSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator64 = strSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema65 = strSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strSchema57);
        java.lang.Integer int66 = strSchema57.getMaxProperties();
        java.math.BigDecimal bigDecimal67 = strSchema57.getMinimum();
        strSchema57.setMinItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal70 = strSchema57.getMinimum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNull(bigDecimal70);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema8.getDeprecated();
        java.math.BigDecimal bigDecimal10 = null;
        schema8.setMinimum(bigDecimal10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.util.List<java.lang.String> strList11 = strSchema8.getRequired();
        strSchema8.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema8.title("no description");
        schema15.set$ref("");
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema22 = strSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = strSchema0.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema41 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema18.getNot();
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean45 = strSchema44.getNullable();
        java.lang.Object obj46 = strSchema44.getExample();
        io.swagger.oas.models.media.Schema schema48 = strSchema44.minProperties((java.lang.Integer) 10);
        java.lang.String str49 = strSchema44.getDefault();
        io.swagger.oas.models.media.Schema schema51 = strSchema44.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        schema42.setExample((java.lang.Object) strMap52);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        io.swagger.oas.models.media.Schema schema15 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema15.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        java.util.List<java.lang.String> strList24 = null;
        schema23.setRequired(strList24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        java.lang.String str27 = schema23.getPattern();
        java.lang.Object obj28 = schema23.getExample();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        java.lang.Integer int23 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema6.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList19 = schema11.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema11.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.format("default");
        java.lang.String str24 = schema23.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.discriminator(discriminator25);
        java.lang.Integer int27 = schema23.getMinLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        strSchema0.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str33 = strSchema32.getTitle();
        io.swagger.oas.models.media.Schema schema35 = strSchema32.format("");
        strSchema32.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        io.swagger.oas.models.media.Schema schema44 = strSchema38.type("");
        io.swagger.oas.models.media.Schema schema46 = schema44.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray48 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        schema46.setRequired((java.util.List<java.lang.String>) strList49);
        strSchema32.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema53 = schema31.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema54 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema55 = schema31.getNot();
        io.swagger.oas.models.media.Schema schema56 = strSchema0.additionalProperties(schema31);
        java.lang.String str57 = schema56.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strSchema0.getExtensions();
        io.swagger.oas.models.media.XML xML16 = null;
        strSchema0.setXml(xML16);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema12.setDiscriminator(discriminator17);
        java.util.List<java.lang.String> strList19 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema21 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema17.properties(strMap22);
        strSchema17.setMaxLength((java.lang.Integer) 0);
        strSchema17.setName("hi!");
        io.swagger.oas.models.media.Schema schema29 = strSchema17.description("*/*");
        strSchema17.setTitle("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema schema39 = strSchema33.type("");
        java.lang.Integer int40 = schema39.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema45 = schema42.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strSchema46.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema54 = schema52.exclusiveMaximum((java.lang.Boolean) true);
        schema54.setMaxItems((java.lang.Integer) 0);
        java.lang.String str57 = schema54.toString();
        java.util.List<java.lang.String> strList58 = schema54.getRequired();
        schema42.setRequired(strList58);
        strSchema17.setEnum(strList58);
        io.swagger.oas.models.media.Schema schema61 = schema16.required(strList58);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.minimum(bigDecimal62);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str57, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML5 = null;
        schema4.setXml(xML5);
        io.swagger.oas.models.media.XML xML7 = schema4.getXml();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray10);
        schema4.setExample((java.lang.Object) tagSetOptional11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema4.setXml(xML13);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema18.addProperties("no description", schema29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        strSchema32.setNot((io.swagger.oas.models.media.Schema) strSchema37);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema32.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        java.util.List<java.lang.String> strList48 = strSchema45.getRequired();
        strSchema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strSchema45.title("no description");
        java.lang.String str53 = schema52.getDescription();
        boolean boolean54 = schema44.equals((java.lang.Object) schema52);
        java.util.List<java.lang.String> strList55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.required(strList55);
        schema52.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema52.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema30.addProperties("hi!", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema61.description("*/*");
        io.swagger.oas.models.media.Schema schema64 = strSchema0.addProperties("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema schema66 = schema64.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = schema64.getDeprecated();
        java.lang.Integer int68 = schema64.getMinProperties();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema64.maximum(bigDecimal69);
        java.lang.Integer int71 = schema64.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.required(strList12);
        java.lang.Integer int14 = schema13.getMinItems();
        schema13.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema13.getName();
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema13.maximum(bigDecimal20);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: #\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.xml(xML7);
        java.lang.Integer int9 = strSchema0.getMinItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema7.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        strSchema18.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema18.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.util.List<java.lang.String> strList34 = strSchema31.getRequired();
        strSchema31.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strSchema31.title("no description");
        java.lang.String str39 = schema38.getDescription();
        boolean boolean40 = schema30.equals((java.lang.Object) schema38);
        java.util.List<java.lang.String> strList41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.required(strList41);
        schema38.setMaxItems((java.lang.Integer) 10);
        schema38.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean47 = schema38.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        io.swagger.oas.models.media.Schema schema65 = strSchema48.not(schema64);
        java.math.BigDecimal bigDecimal66 = null;
        schema64.setMultipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        io.swagger.oas.models.media.Schema schema72 = strSchema68.maxLength((java.lang.Integer) 1);
        schema72.setPattern("");
        io.swagger.oas.models.media.Schema schema76 = schema72.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray80 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema76.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema64.required((java.util.List<java.lang.String>) strList81);
        schema38.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema13.required((java.util.List<java.lang.String>) strList81);
        schema13.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = strSchema16.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema16.not((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.models.media.XML xML31 = null;
        strSchema23.setXml(xML31);
        strSchema23.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = schema41.minProperties((java.lang.Integer) (-1));
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema41.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema49.properties(strMap54);
        java.lang.Integer int56 = schema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        java.util.List<java.lang.String> strList63 = strSchema60.getRequired();
        strSchema60.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int66 = strSchema60.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema74 = strSchema60.not((io.swagger.oas.models.media.Schema) strSchema67);
        io.swagger.oas.models.media.XML xML75 = null;
        strSchema67.setXml(xML75);
        io.swagger.oas.models.media.Schema schema77 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema67);
        schema48.setDefault((java.lang.Object) strSchema67);
        strSchema23.setDefault((java.lang.Object) strSchema67);
        schema15.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMaxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal85 = null;
        schema15.setMinimum(bigDecimal85);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Schema schema36 = strSchema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        strSchema0.setMultipleOf(bigDecimal10);
        java.lang.String str12 = strSchema0.toString();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        java.lang.String str9 = strSchema0.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = strSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = schema14.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj6 = strSchema0.getExample();
        java.lang.String str7 = strSchema0.getFormat();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema14.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = strSchema20.getMinLength();
        java.lang.Integer int26 = strSchema20.getMaxLength();
        java.math.BigDecimal bigDecimal27 = strSchema20.getMaximum();
        io.swagger.oas.models.media.Schema schema28 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) strSchema20);
        java.lang.Integer int29 = strSchema20.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = strSchema30.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        strSchema39.setNot((io.swagger.oas.models.media.Schema) strSchema44);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema39.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setName("no description");
        io.swagger.oas.models.media.Schema schema58 = strSchema52.type("");
        io.swagger.oas.models.media.Schema schema60 = schema58.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = strSchema61.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = strSchema61.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray74 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema71.setRequired((java.util.List<java.lang.String>) strList75);
        schema60.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = strSchema39.required((java.util.List<java.lang.String>) strList75);
        strSchema30.setEnum((java.util.List<java.lang.String>) strList75);
        strSchema20.setEnum((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema82 = strSchema0.required((java.util.List<java.lang.String>) strList75);
        java.lang.Integer int83 = schema82.getMaxLength();
        java.util.List<java.lang.String> strList84 = schema82.getEnum();
        schema82.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNull(strList84);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        java.lang.Boolean boolean29 = strSchema26.getDeprecated();
        boolean boolean31 = strSchema26.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema26.multipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strSchema26.deprecated((java.lang.Boolean) false);
        schema23.setDefault((java.lang.Object) strSchema26);
        strSchema26.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList39 = strSchema26.getRequired();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        strSchema10.setNot((io.swagger.oas.models.media.Schema) strSchema15);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema10.minimum(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.multipleOf(bigDecimal23);
        strSchema0.setAdditionalProperties(schema22);
        java.lang.Integer int26 = schema22.getMaxItems();
        java.lang.Boolean boolean27 = schema22.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = schema34.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = schema34.type("*/*");
        io.swagger.oas.models.media.Schema schema41 = schema34.exclusiveMaximum((java.lang.Boolean) true);
        schema22.setNot(schema34);
        io.swagger.oas.models.media.Schema schema44 = schema22.minProperties((java.lang.Integer) 1);
        schema44.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        java.lang.Integer int31 = schema30.getMaxProperties();
        java.math.BigDecimal bigDecimal32 = null;
        schema30.setMinimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema30.maxProperties((java.lang.Integer) 1);
        schema35.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema35.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema35.externalDocs(externalDocumentation39);
        schema21.setNot(schema35);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = strSchema42.properties(strMap47);
        java.lang.Integer int49 = schema48.getMaxProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.minProperties((java.lang.Integer) 0);
        java.lang.String str52 = schema48.getType();
        io.swagger.oas.models.media.Schema schema54 = schema48.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        schema35.setNot(schema54);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMinimum(bigDecimal57);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.List<java.lang.String> strList6 = schema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = schema5.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema5.maximum(bigDecimal9);
        java.util.List<java.lang.String> strList11 = schema5.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str13 = strSchema12.getTitle();
        strSchema12.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = strSchema12.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strSchema12.title("default");
        java.lang.String str21 = schema20.getType();
        io.swagger.oas.models.media.Schema schema23 = schema20.minLength((java.lang.Integer) 1);
        java.lang.String str24 = schema23.getType();
        java.math.BigDecimal bigDecimal25 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema5.example((java.lang.Object) schema23);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema schema27 = schema24.$ref("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int28 = schema24.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.maximum(bigDecimal12);
        java.util.List<java.lang.String> strList14 = null;
        schema10.setRequired(strList14);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = schema10.required((java.util.List<java.lang.String>) strList27);
        java.math.BigDecimal bigDecimal31 = schema30.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getNullable();
        strSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        java.math.BigDecimal bigDecimal8 = schema7.getMinimum();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("default");
        schema10.setDescription("default");
        java.lang.Object obj15 = schema10.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        schema25.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema29.properties(strMap34);
        java.lang.Integer int36 = schema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 0);
        java.lang.String str39 = schema35.getType();
        schema35.setReadOnly((java.lang.Boolean) true);
        schema35.set$ref("");
        java.lang.String str44 = schema35.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = strSchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema45.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema55.setRequired((java.util.List<java.lang.String>) strList59);
        schema35.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema25.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema10.additionalProperties(schema63);
        schema64.setMinProperties((java.lang.Integer) (-1));
        schema64.set$ref("default");
        io.swagger.oas.models.media.Schema schema70 = schema64.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal25 = null;
        schema23.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str28 = strSchema27.getTitle();
        io.swagger.oas.models.media.Schema schema30 = strSchema27.format("");
        schema30.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema33 = schema30.getNot();
        java.lang.Integer int34 = schema30.getMaxLength();
        schema30.setMaxProperties((java.lang.Integer) 10);
        boolean boolean37 = schema23.equals((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema39 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.addEnumItemObject("no description");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strSchema0.getExtensions();
        java.lang.Integer int7 = strSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.pattern("");
        java.util.List<java.lang.String> strList10 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema12 = schema9.type("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = strSchema19.getDeprecated();
        java.lang.String str25 = strSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema27 = strSchema19.maxLength((java.lang.Integer) 0);
        java.lang.Integer int28 = strSchema19.getMaxItems();
        io.swagger.oas.models.media.Schema schema30 = strSchema19.format("");
        io.swagger.oas.models.media.Schema schema32 = strSchema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String[] strArray34 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional35 = io.swagger.jaxrs2.OperationParser.getTags(strArray34);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray34);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray34);
        strSchema19.setDefault((java.lang.Object) tagSetOptional37);
        io.swagger.oas.models.media.Schema schema39 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strSchema19.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(tagSetOptional35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strSchema0.discriminator(discriminator52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema0.maximum(bigDecimal54);
        strSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema59 = strSchema0.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema10.getExclusiveMinimum();
        schema10.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setFormat("no description");
        schema18.setMinProperties((java.lang.Integer) 100);
        schema18.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema18.discriminator(discriminator34);
        java.lang.Boolean boolean36 = schema35.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        java.lang.Object obj22 = schema19.getExample();
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema27 = strSchema25.maxItems((java.lang.Integer) 100);
        strSchema25.setDescription("*/*");
        strSchema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema19.example((java.lang.Object) strSchema25);
        java.lang.Object obj35 = null;
        schema19.setDefault(obj35);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema2 = strSchema0.maxItems((java.lang.Integer) 100);
        schema2.setTitle("");
        java.lang.Integer int5 = schema2.getMaxLength();
        java.lang.String str6 = schema2.getPattern();
        java.lang.String str7 = schema2.getType();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema2.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) (-1));
        schema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = strSchema25.getDeprecated();
        java.math.BigDecimal bigDecimal32 = strSchema25.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = strSchema25.$ref("no description");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema20.not(schema34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        java.lang.Integer int55 = schema54.getMaxProperties();
        io.swagger.oas.models.media.Schema schema57 = schema54.name("default");
        io.swagger.oas.models.media.Schema schema58 = strSchema42.addProperties("*/*", schema57);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        java.lang.Boolean boolean73 = strSchema70.getWriteOnly();
        io.swagger.oas.models.media.Schema schema75 = strSchema70.type("default");
        io.swagger.oas.models.media.Schema schema76 = strSchema59.not(schema75);
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema79 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema79.setType("hi!");
        strSchema79.setName("no description");
        io.swagger.oas.models.media.Schema schema85 = strSchema79.type("");
        java.lang.Integer int86 = schema85.getMaxProperties();
        java.math.BigDecimal bigDecimal87 = null;
        schema85.setMinimum(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = schema85.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema92 = schema90.maxProperties((java.lang.Integer) (-1));
        schema78.setExample((java.lang.Object) schema90);
        java.math.BigDecimal bigDecimal94 = schema78.getMultipleOf();
        io.swagger.oas.models.media.Schema schema96 = schema78.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema97 = strSchema42.additionalProperties(schema78);
        schema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema42);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema8.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation11);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        schema21.setProperties(strMap22);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = strSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema9.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray22 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        schema19.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int38 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.format("no description");
        io.swagger.oas.models.media.Schema schema48 = schema37.not(schema47);
        schema8.setNot(schema37);
        java.lang.String str50 = schema8.getTitle();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema8.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = schema52.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema32 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema29.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray23 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.List<java.lang.String> strList27 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.addProperties("hi!", schema20);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean22 = strSchema21.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = strSchema21.description("");
        schema25.setPattern("hi!");
        java.lang.Integer int28 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema schema30 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = strSchema7.not(schema25);
        java.lang.Integer int33 = schema25.getMaxItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        schema14.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema14.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML15 = null;
        strSchema7.setXml(xML15);
        strSchema7.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema7.set$ref("");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema7.minimum(bigDecimal21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema22.setDiscriminator(discriminator23);
        java.lang.String str25 = schema22.getName();
        io.swagger.oas.models.media.Schema schema27 = schema22.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "no description" + "'", str25, "no description");
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.example((java.lang.Object) '#');
        java.lang.Boolean boolean11 = schema6.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema6.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.writeOnly((java.lang.Boolean) false);
        schema17.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema6.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("default");
        schema10.setDescription("default");
        java.lang.Object obj15 = schema10.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        schema25.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema29.properties(strMap34);
        java.lang.Integer int36 = schema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 0);
        java.lang.String str39 = schema35.getType();
        schema35.setReadOnly((java.lang.Boolean) true);
        schema35.set$ref("");
        java.lang.String str44 = schema35.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = strSchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema45.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema55.setRequired((java.util.List<java.lang.String>) strList59);
        schema35.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema25.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema10.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema65 = schema63.getNot();
        schema63.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.xml(xML14);
        io.swagger.oas.models.media.XML xML16 = schema15.getXml();
        java.lang.Boolean boolean17 = schema15.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal18 = schema15.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.exclusiveMinimum((java.lang.Boolean) true);
        schema21.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("default");
        java.lang.String str27 = schema24.getFormat();
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        io.swagger.oas.models.media.Schema schema23 = strSchema11.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strSchema27.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        java.lang.Boolean boolean41 = strSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = strSchema38.type("default");
        io.swagger.oas.models.media.Schema schema44 = strSchema27.not(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        java.lang.Integer int54 = schema53.getMaxProperties();
        java.math.BigDecimal bigDecimal55 = null;
        schema53.setMinimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema53.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = schema58.maxProperties((java.lang.Integer) (-1));
        schema46.setExample((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema63 = schema58.minProperties((java.lang.Integer) (-1));
        schema23.addExtension("", (java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema66 = schema23.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema75 = strSchema67.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strSchema67.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray80 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema77.setRequired((java.util.List<java.lang.String>) strList81);
        schema66.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal87 = null;
        schema86.setMultipleOf(bigDecimal87);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int30 = strSchema24.getMinLength();
        java.math.BigDecimal bigDecimal31 = null;
        strSchema24.setMinimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strSchema24.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema34.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal41 = null;
        schema34.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setName("no description");
        io.swagger.oas.models.media.Schema schema49 = strSchema43.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = schema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema52 = schema49.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str54 = strSchema53.getTitle();
        io.swagger.oas.models.media.Schema schema56 = strSchema53.format("");
        strSchema53.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = schema65.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray69 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        schema67.setRequired((java.util.List<java.lang.String>) strList70);
        strSchema53.setRequired((java.util.List<java.lang.String>) strList70);
        schema52.setNot((io.swagger.oas.models.media.Schema) strSchema53);
        io.swagger.oas.models.media.Schema schema76 = schema52.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        schema76.setDiscriminator(discriminator77);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema79 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema79.setType("hi!");
        strSchema79.setName("no description");
        io.swagger.oas.models.media.Schema schema85 = strSchema79.name("*/*");
        io.swagger.oas.models.media.Schema schema86 = schema76.example((java.lang.Object) "*/*");
        java.util.List<java.lang.String> strList87 = schema86.getRequired();
        schema34.setRequired(strList87);
        io.swagger.oas.models.media.Schema schema89 = schema23.required(strList87);
        io.swagger.oas.models.media.Schema schema91 = schema23.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema9.writeOnly((java.lang.Boolean) true);
        java.lang.String str14 = schema13.get$ref();
        java.util.List<java.lang.String> strList15 = schema13.getRequired();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema15.getDescription();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.exclusiveMinimum((java.lang.Boolean) false);
        strSchema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = strSchema7.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int42 = strSchema36.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        strSchema36.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema46.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setNullable((java.lang.Boolean) true);
        schema20.setExample((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema59 = schema20.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal60 = null;
        schema20.setMinimum(bigDecimal60);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema29.getExtensions();
        java.lang.Boolean boolean32 = schema29.getNullable();
        java.lang.String str33 = schema29.getDescription();
        io.swagger.oas.models.media.Schema schema35 = schema29.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getNot();
        schema35.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int39 = schema35.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML15 = null;
        strSchema7.setXml(xML15);
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = schema25.minProperties((java.lang.Integer) (-1));
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = strSchema33.properties(strMap38);
        java.lang.Integer int40 = schema39.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        java.util.List<java.lang.String> strList47 = strSchema44.getRequired();
        strSchema44.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int50 = strSchema44.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema58 = strSchema44.not((io.swagger.oas.models.media.Schema) strSchema51);
        io.swagger.oas.models.media.XML xML59 = null;
        strSchema51.setXml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema42.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema51);
        schema32.setDefault((java.lang.Object) strSchema51);
        strSchema7.setDefault((java.lang.Object) strSchema51);
        java.lang.Integer int64 = strSchema7.getMaxItems();
        java.lang.String str65 = strSchema7.getType();
        java.math.BigDecimal bigDecimal66 = null;
        strSchema7.setMaximum(bigDecimal66);
        java.lang.String str68 = strSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema70 = strSchema7.maxLength((java.lang.Integer) 1);
        java.lang.String str71 = schema70.getDescription();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = strSchema35.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strSchema35.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.lang.Boolean boolean49 = strSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema51 = strSchema46.type("default");
        io.swagger.oas.models.media.Schema schema52 = strSchema35.not(schema51);
        java.math.BigDecimal bigDecimal53 = null;
        schema51.setMultipleOf(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        io.swagger.oas.models.media.Schema schema59 = strSchema55.maxLength((java.lang.Integer) 1);
        schema59.setPattern("");
        io.swagger.oas.models.media.Schema schema63 = schema59.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray67 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema63.setEnum((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema71 = schema51.required((java.util.List<java.lang.String>) strList68);
        schema19.setEnum((java.util.List<java.lang.String>) strList68);
        java.lang.String str73 = schema19.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema82 = schema80.format("no description");
        io.swagger.oas.models.media.Schema schema84 = schema82.format("");
        io.swagger.oas.models.media.Schema schema86 = schema84.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema19.additionalProperties(schema86);
        schema87.setMaxItems((java.lang.Integer) 1);
        java.lang.Integer int90 = schema87.getMaxProperties();
        schema87.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int90);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        schema5.setMinimum(bigDecimal9);
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        strSchema0.setDeprecated((java.lang.Boolean) true);
        strSchema0.setNullable((java.lang.Boolean) true);
        java.lang.Integer int14 = strSchema0.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int42 = strSchema36.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        strSchema36.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema46.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setNullable((java.lang.Boolean) true);
        schema20.setExample((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema59 = schema20.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        java.lang.Integer int24 = schema19.getMinProperties();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        strSchema0.setName("default");
        java.util.List<java.lang.String> strList9 = strSchema0.getEnum();
        java.math.BigDecimal bigDecimal10 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema11.properties(strMap16);
        java.lang.Integer int18 = schema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema17.description("no description");
        schema22.setPattern("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = schema22.getProperties();
        io.swagger.oas.models.media.Schema schema26 = strSchema0.not(schema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        strSchema16.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strSchema16.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        strSchema16.setProperties(strMap30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema16.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        java.lang.Boolean boolean38 = strSchema35.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = strSchema35.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = strSchema35.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        strSchema35.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = strSchema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList46 = strSchema35.getRequired();
        io.swagger.oas.models.media.Schema schema47 = schema34.required(strList46);
        io.swagger.oas.models.media.Schema schema49 = schema34.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema34.type("hi!");
        schema51.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema6.minimum(bigDecimal19);
        schema20.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.uniqueItems((java.lang.Boolean) false);
        java.lang.String str25 = schema24.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        schema24.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.String str36 = schema33.getFormat();
        schema33.setFormat("");
        io.swagger.oas.models.media.Schema schema40 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        strSchema0.setProperties(strMap8);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.getAdditionalProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = strSchema10.getDeprecated();
        java.math.BigDecimal bigDecimal17 = strSchema10.getMultipleOf();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.$ref("no description");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema28.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean31 = schema30.getExclusiveMaximum();
        schema30.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema39.setMaxLength((java.lang.Integer) 100);
        java.lang.String str46 = strSchema39.toString();
        io.swagger.oas.models.media.Schema schema48 = strSchema39.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema48.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = strSchema53.properties(strMap58);
        java.lang.Boolean boolean60 = strSchema53.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        io.swagger.oas.models.media.Schema schema65 = strSchema61.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = schema65.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean68 = schema67.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = schema67.getExternalDocs();
        java.math.BigDecimal bigDecimal70 = schema67.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema72 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema72.setType("hi!");
        strSchema72.setName("no description");
        io.swagger.oas.models.media.Schema schema78 = strSchema72.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema79 = schema67.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema72);
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema83 = strSchema53.properties(strMap82);
        io.swagger.oas.models.media.Schema schema84 = schema48.properties(strMap82);
        schema34.setProperties(strMap82);
        schema6.setProperties(strMap82);
        java.lang.Boolean boolean87 = schema6.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema26.setDiscriminator(discriminator31);
        java.util.List<java.lang.String> strList33 = schema26.getRequired();
        schema13.setNot(schema26);
        java.lang.String str35 = schema26.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = schema26.getExternalDocs();
        java.lang.Boolean boolean37 = schema26.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        java.lang.String str7 = schema4.getPattern();
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema4.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML8 = strSchema0.getXml();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(xML8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str21 = schema20.getName();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str26 = schema23.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "no description" + "'", str21, "no description");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str26, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        io.swagger.oas.models.media.Schema schema24 = schema6.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema26.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema schema22 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean25 = schema22.getReadOnly();
        java.lang.Boolean boolean26 = schema22.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + true + "'", boolean26, true);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("");
        strSchema0.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int14 = schema13.getMaxLength();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.lang.String str6 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = schema8.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        schema9.setDeprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema9.getRequired();
        schema9.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema4 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema4.setType("hi!");
        strSchema4.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int9 = strSchema4.getMinLength();
        java.lang.String str10 = strSchema4.getDescription();
        strSchema0.setExample((java.lang.Object) str10);
        io.swagger.oas.annotations.media.Content[] contentArray12 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray12, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray12, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray12, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray12, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray12, components25);
        strSchema0.setExample((java.lang.Object) contentArray12);
        io.swagger.oas.models.media.Schema schema29 = strSchema0.maxProperties((java.lang.Integer) 100);
        schema29.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(contentArray12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema16 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        strSchema13.setNot((io.swagger.oas.models.media.Schema) strSchema18);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strSchema13.minimum(bigDecimal24);
        schema25.setDeprecated((java.lang.Boolean) true);
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        strSchema32.setNot((io.swagger.oas.models.media.Schema) strSchema37);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema32.minimum(bigDecimal43);
        schema44.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema44.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema49.properties(strMap54);
        java.lang.String str56 = strSchema49.getPattern();
        strSchema49.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = strSchema49.exclusiveMinimum((java.lang.Boolean) true);
        schema60.setReadOnly((java.lang.Boolean) true);
        schema60.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema66 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema66.setType("hi!");
        java.lang.Boolean boolean69 = strSchema66.getWriteOnly();
        strSchema66.setMaxItems((java.lang.Integer) 10);
        strSchema66.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean74 = strSchema66.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = strSchema66.externalDocs(externalDocumentation75);
        schema60.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema66);
        io.swagger.oas.models.media.Schema schema79 = schema60.description("default");
        schema79.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema83 = schema79.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema79.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema85.getExtensions();
        schema44.setExtensions(strMap86);
        schema25.setExtensions(strMap86);
        schema12.setExtensions(strMap86);
        io.swagger.oas.models.media.Schema schema91 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema12.xml(xML92);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.externalDocs(externalDocumentation27);
        schema28.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        java.lang.Integer int24 = strSchema11.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = strSchema11.format("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema11.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema11.discriminator(discriminator29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strSchema20.maxLength((java.lang.Integer) 1);
        schema24.setPattern("");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray32 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        schema28.setEnum((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema16.required((java.util.List<java.lang.String>) strList33);
        schema36.set$ref("");
        schema36.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int41 = schema36.getMinItems();
        schema36.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 0);
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema9.getExtensions();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.discriminator(discriminator11);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.example((java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMinLength();
        java.lang.String str15 = schema13.getTitle();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "no description" + "'", str15, "no description");
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        java.lang.Integer int17 = schema16.getMaxProperties();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema16.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.addProperties("default", schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMaximum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = strSchema29.getMinLength();
        java.lang.Integer int35 = strSchema29.getMaxLength();
        java.math.BigDecimal bigDecimal36 = strSchema29.getMaximum();
        java.math.BigDecimal bigDecimal37 = strSchema29.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str39 = strSchema38.getTitle();
        java.lang.String str40 = strSchema38.getPattern();
        strSchema29.setNot((io.swagger.oas.models.media.Schema) strSchema38);
        java.util.List<java.lang.String> strList42 = strSchema38.getEnum();
        boolean boolean43 = schema25.equals((java.lang.Object) strSchema38);
        strSchema38.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = strSchema38.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.lang.Boolean boolean9 = schema5.getReadOnly();
        java.util.List<java.lang.String> strList10 = schema5.getRequired();
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        strSchema11.setNot((io.swagger.oas.models.media.Schema) strSchema16);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.minimum(bigDecimal22);
        schema23.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxItems((java.lang.Integer) 10);
        schema8.setDefault((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str31 = schema8.getType();
        io.swagger.oas.models.media.Schema schema33 = schema8.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        io.swagger.oas.models.media.Schema schema38 = strSchema34.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = schema38.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean41 = schema40.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.discriminator(discriminator42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema40.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strSchema46.properties(strMap51);
        java.lang.Integer int53 = schema52.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = schema52.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema57 = schema52.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int63 = strSchema58.getMinLength();
        java.lang.Integer int64 = strSchema58.getMaxLength();
        java.math.BigDecimal bigDecimal65 = strSchema58.getMaximum();
        io.swagger.oas.models.media.Schema schema66 = schema57.additionalProperties((io.swagger.oas.models.media.Schema) strSchema58);
        io.swagger.oas.models.media.Schema schema68 = schema57.type("hi!");
        io.swagger.oas.models.media.Schema schema70 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = schema70.pattern("hi!");
        schema70.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int75 = schema70.getMaxLength();
        io.swagger.oas.models.media.Schema schema77 = schema70.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = schema40.not(schema77);
        io.swagger.oas.models.media.Schema schema81 = schema8.example((java.lang.Object) schema80);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.externalDocs(externalDocumentation82);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema2 = strSchema0.maxItems((java.lang.Integer) 100);
        strSchema0.setDescription("*/*");
        java.lang.Class<?> wildcardClass5 = strSchema0.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.example((java.lang.Object) '#');
        java.lang.Boolean boolean11 = schema6.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema6.maxItems((java.lang.Integer) 100);
        schema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema6.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str15 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = strSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema30.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = strSchema36.getMinLength();
        java.lang.Integer int42 = strSchema36.getMaxLength();
        java.math.BigDecimal bigDecimal43 = strSchema36.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema35.additionalProperties((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema36.setType("");
        io.swagger.oas.models.media.Schema schema47 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema36);
        java.lang.String str48 = schema22.getPattern();
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.math.BigDecimal bigDecimal54 = null;
        schema53.setMinimum(bigDecimal54);
        schema53.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema12.name("hi!");
        schema17.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("default");
        java.lang.String str22 = schema21.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema21.setExternalDocs(externalDocumentation23);
        java.lang.String str25 = schema21.getPattern();
        io.swagger.oas.models.media.XML xML26 = null;
        schema21.setXml(xML26);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        schema18.setPattern("default");
        schema18.setPattern("#/components/schemas/default");
        io.swagger.oas.models.media.XML xML27 = null;
        schema18.setXml(xML27);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema23.maxItems((java.lang.Integer) 1);
        schema23.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema23.getAdditionalProperties();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.maximum(bigDecimal33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        io.swagger.oas.models.media.Schema schema32 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str36 = schema32.getName();
        io.swagger.oas.models.media.Schema schema38 = schema32.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = strSchema0.getMinLength();
        java.lang.Boolean boolean20 = strSchema0.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strSchema0.setExtensions(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        strSchema0.setProperties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema31.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.name("no description");
        java.lang.Integer int41 = schema40.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator42 = schema40.getDiscriminator();
        strSchema0.setExample((java.lang.Object) discriminator42);
        io.swagger.oas.models.media.Schema schema45 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str48 = schema45.getPattern();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema22 = schema12.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        schema12.setProperties(strMap23);
        io.swagger.oas.models.media.Schema schema25 = schema12.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema25);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("hi!");
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean26 = schema25.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str28 = strSchema27.getTitle();
        strSchema27.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = strSchema27.getNullable();
        io.swagger.oas.models.media.Schema schema33 = strSchema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strSchema27.title("default");
        java.lang.String str36 = schema35.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.util.List<java.lang.String> strList40 = strSchema37.getRequired();
        strSchema37.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = strSchema37.title("no description");
        io.swagger.oas.models.media.Schema schema46 = strSchema37.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray61 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema58.setRequired((java.util.List<java.lang.String>) strList62);
        strSchema37.addExtension("", (java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema66 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema66.setType("hi!");
        strSchema66.setName("no description");
        io.swagger.oas.models.media.Schema schema72 = strSchema66.type("");
        io.swagger.oas.models.media.Schema schema74 = strSchema66.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = strSchema66.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray79 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        schema76.setRequired((java.util.List<java.lang.String>) strList80);
        schema58.setEnum((java.util.List<java.lang.String>) strList80);
        schema35.setRequired((java.util.List<java.lang.String>) strList80);
        schema25.setRequired((java.util.List<java.lang.String>) strList80);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        java.lang.Integer int9 = strSchema0.getMinProperties();
        java.lang.Integer int10 = strSchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        java.util.List<java.lang.String> strList23 = strSchema20.getRequired();
        strSchema20.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int26 = strSchema20.getMinLength();
        strSchema20.setUniqueItems((java.lang.Boolean) false);
        strSchema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema20);
        io.swagger.oas.models.media.Schema schema31 = strSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = strSchema0.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema31.readOnly((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        java.util.List<java.lang.String> strList19 = schema10.getRequired();
        java.lang.String str20 = schema10.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "no description" + "'", str20, "no description");
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = strSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = strSchema14.required((java.util.List<java.lang.String>) strList50);
        strSchema5.setEnum((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal56 = strSchema5.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema5.discriminator(discriminator57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema5.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema61 = strSchema0.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.format("");
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema60.xml(xML64);
        java.math.BigDecimal bigDecimal66 = schema60.getMaximum();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema23 = schema19.format("default");
        io.swagger.oas.models.media.Schema schema25 = schema23.description("");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str10 = strSchema9.getTitle();
        strSchema9.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = strSchema9.getNullable();
        io.swagger.oas.models.media.Schema schema15 = strSchema9.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        java.math.BigDecimal bigDecimal28 = null;
        strSchema21.setMinimum(bigDecimal28);
        strSchema21.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = strSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str34 = schema33.getFormat();
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("");
        schema37.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        schema19.setMaxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean24 = schema19.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = schema6.getMinItems();
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        java.lang.Boolean boolean16 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMaximum(bigDecimal19);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = strSchema35.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strSchema35.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.lang.Boolean boolean49 = strSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema51 = strSchema46.type("default");
        io.swagger.oas.models.media.Schema schema52 = strSchema35.not(schema51);
        java.math.BigDecimal bigDecimal53 = null;
        schema51.setMultipleOf(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        io.swagger.oas.models.media.Schema schema59 = strSchema55.maxLength((java.lang.Integer) 1);
        schema59.setPattern("");
        io.swagger.oas.models.media.Schema schema63 = schema59.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray67 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        schema63.setEnum((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema71 = schema51.required((java.util.List<java.lang.String>) strList68);
        schema19.setEnum((java.util.List<java.lang.String>) strList68);
        java.lang.String str73 = schema19.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema82 = schema80.format("no description");
        io.swagger.oas.models.media.Schema schema84 = schema82.format("");
        io.swagger.oas.models.media.Schema schema86 = schema84.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema19.additionalProperties(schema86);
        schema87.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema91 = schema87.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema87.getProperties();
        io.swagger.oas.models.media.Schema schema94 = schema87.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        strSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema7.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str29 = strSchema7.getType();
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strSchema7.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strSchema36.getExternalDocs();
        java.lang.String str42 = strSchema36.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        strSchema36.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema36.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = strSchema36.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = strSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema50.minItems((java.lang.Integer) 0);
        schema54.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema35.not(schema54);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMaximum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj62 = schema61.getExample();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str15 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = strSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema30.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = strSchema36.getMinLength();
        java.lang.Integer int42 = strSchema36.getMaxLength();
        java.math.BigDecimal bigDecimal43 = strSchema36.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema35.additionalProperties((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema36.setType("");
        io.swagger.oas.models.media.Schema schema47 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema36);
        java.lang.String str48 = schema22.getPattern();
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.discriminator(discriminator56);
        schema55.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.nullable((java.lang.Boolean) false);
        java.lang.String str14 = schema6.getDescription();
        java.lang.Integer int15 = schema6.getMaxItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        java.lang.Integer int28 = strSchema17.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        java.lang.Integer int36 = schema35.getMaxProperties();
        java.math.BigDecimal bigDecimal37 = null;
        schema35.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema35.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema35.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema35.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) true);
        boolean boolean47 = strSchema17.equals((java.lang.Object) schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = schema46.getExtensions();
        java.lang.Boolean boolean49 = schema46.getNullable();
        schema6.setAdditionalProperties(schema46);
        java.lang.String str51 = schema46.getName();
        io.swagger.oas.models.media.Schema schema53 = schema46.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "no description" + "'", str51, "no description");
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        strSchema7.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema schema18 = strSchema7.minItems((java.lang.Integer) 1);
        schema18.setMaxItems((java.lang.Integer) 0);
        java.lang.Integer int21 = schema18.getMinProperties();
        java.lang.Boolean boolean22 = schema18.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.description("default");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = schema23.getExclusiveMinimum();
        java.util.List<java.lang.String> strList25 = schema23.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.name("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.$ref("hi!");
        io.swagger.oas.models.media.Schema schema9 = schema7.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema18.addProperties("no description", schema29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        strSchema32.setNot((io.swagger.oas.models.media.Schema) strSchema37);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema32.minimum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        java.util.List<java.lang.String> strList48 = strSchema45.getRequired();
        strSchema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = strSchema45.title("no description");
        java.lang.String str53 = schema52.getDescription();
        boolean boolean54 = schema44.equals((java.lang.Object) schema52);
        java.util.List<java.lang.String> strList55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.required(strList55);
        schema52.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema52.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema30.addProperties("hi!", schema60);
        java.math.BigDecimal bigDecimal62 = schema30.getMinimum();
        schema12.setNot(schema30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean7 = schema6.getDeprecated();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema24 = strSchema10.not((io.swagger.oas.models.media.Schema) strSchema17);
        strSchema17.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = strSchema17.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean32 = strSchema31.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = strSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = strSchema31.description("");
        schema35.setPattern("hi!");
        java.lang.Integer int38 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = strSchema17.not(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Schema schema45 = schema6.not(schema42);
        io.swagger.oas.models.media.Schema schema47 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str48 = schema6.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        java.lang.String str3 = strSchema0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strSchema0.getExtensions();
        java.lang.Integer int7 = strSchema0.getMinItems();
        java.lang.String str8 = strSchema0.getFormat();
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema0.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = strSchema0.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList46 = schema45.getRequired();
        io.swagger.oas.models.media.XML xML47 = schema45.getXml();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNull(xML47);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getNullable();
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.lang.Boolean boolean32 = strSchema29.getDeprecated();
        io.swagger.oas.models.media.Schema schema34 = strSchema29.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = schema20.not(schema36);
        io.swagger.oas.models.media.Schema schema40 = schema36.maxProperties((java.lang.Integer) (-1));
        schema40.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema7.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.deprecated((java.lang.Boolean) true);
        schema7.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema7.getMaxProperties();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema7.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str12 = strSchema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = strSchema11.format("");
        strSchema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        io.swagger.oas.models.media.Schema schema21 = strSchema17.maxLength((java.lang.Integer) 1);
        schema21.setPattern("");
        io.swagger.oas.models.media.Schema schema25 = schema21.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray29 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        schema25.setEnum((java.util.List<java.lang.String>) strList30);
        strSchema11.setEnum((java.util.List<java.lang.String>) strList30);
        schema10.setRequired((java.util.List<java.lang.String>) strList30);
        java.math.BigDecimal bigDecimal35 = schema10.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema10.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema10.getNot();
        io.swagger.oas.models.media.Schema schema42 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean44 = strSchema43.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        schema51.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema51.example((java.lang.Object) '#');
        strSchema43.setExample((java.lang.Object) schema51);
        schema51.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int59 = schema51.getMaxProperties();
        schema42.setAdditionalProperties(schema51);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = strSchema6.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean29 = strSchema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.$ref("default");
        strSchema6.setExample((java.lang.Object) schema34);
        schema34.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema34.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema43.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("");
        java.lang.Object obj10 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema14.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema22.description("default");
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.lang.Boolean boolean32 = strSchema29.getDeprecated();
        boolean boolean34 = strSchema29.equals((java.lang.Object) "default");
        java.lang.String str35 = strSchema29.getDefault();
        java.lang.Integer int36 = strSchema29.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = schema24.example((java.lang.Object) strSchema29);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema6.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.discriminator(discriminator9);
        java.lang.Object obj11 = schema10.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema10.setMultipleOf(bigDecimal12);
        java.lang.Boolean boolean14 = schema10.getNullable();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray23 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.List<java.lang.String> strList27 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        strSchema30.setMaxItems((java.lang.Integer) 10);
        strSchema30.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = strSchema30.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema40 = strSchema30.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean41 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = strSchema30.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema43);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        strSchema0.setName("default");
        java.util.List<java.lang.String> strList9 = strSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema18.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema18.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.lang.Boolean boolean27 = strSchema24.getDeprecated();
        boolean boolean29 = strSchema24.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema24.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strSchema24.deprecated((java.lang.Boolean) false);
        boolean boolean34 = schema18.equals((java.lang.Object) schema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema18.maximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema36.nullable((java.lang.Boolean) true);
        java.lang.Integer int39 = schema36.getMinLength();
        io.swagger.oas.models.media.Schema schema41 = schema36.type("");
        schema11.setExample((java.lang.Object) schema41);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = strSchema6.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean29 = strSchema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.$ref("default");
        strSchema6.setExample((java.lang.Object) schema34);
        schema34.setUniqueItems((java.lang.Boolean) true);
        schema34.setNullable((java.lang.Boolean) true);
        schema34.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema34.getNot();
        java.lang.Boolean boolean47 = schema34.getReadOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema6.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema26.setDiscriminator(discriminator31);
        java.util.List<java.lang.String> strList33 = schema26.getRequired();
        schema13.setNot(schema26);
        io.swagger.oas.models.media.Schema schema35 = schema13.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = schema9.getExternalDocs();
        java.lang.Integer int11 = schema9.getMinLength();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        java.lang.String str37 = schema33.getTitle();
        io.swagger.oas.models.media.Schema schema39 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = schema33.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema33.getProperties();
        java.lang.Class<?> wildcardClass42 = schema33.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean10 = strSchema5.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = strSchema5.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema4.example((java.lang.Object) strSchema5);
        java.lang.Integer int14 = strSchema5.getMinItems();
        io.swagger.oas.models.media.Schema schema16 = strSchema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMinimum();
        java.lang.String str20 = schema16.getDescription();
        schema16.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        schema13.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) 0);
        java.lang.String str10 = schema5.toString();
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema5.getExclusiveMaximum();
        java.util.List<java.lang.String> strList14 = schema5.getRequired();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema6.setMinimum(bigDecimal10);
        schema6.setMaxItems((java.lang.Integer) 1);
        schema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema18.properties(strMap23);
        java.lang.String str25 = strSchema18.getPattern();
        strSchema18.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = strSchema18.exclusiveMinimum((java.lang.Boolean) true);
        schema29.setReadOnly((java.lang.Boolean) true);
        schema29.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        java.lang.Boolean boolean38 = strSchema35.getWriteOnly();
        strSchema35.setMaxItems((java.lang.Integer) 10);
        strSchema35.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = strSchema35.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = strSchema35.externalDocs(externalDocumentation44);
        schema29.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema35);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema29.xml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema48.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int55 = schema54.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        java.util.List<java.lang.String> strList59 = strSchema56.getRequired();
        strSchema56.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = strSchema56.title("no description");
        schema63.set$ref("");
        io.swagger.oas.models.media.Schema schema67 = schema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        schema63.setDiscriminator(discriminator68);
        io.swagger.oas.models.media.Schema schema71 = schema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema72 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema72.setType("hi!");
        strSchema72.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema77 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema77.setType("hi!");
        strSchema77.setName("no description");
        strSchema72.setNot((io.swagger.oas.models.media.Schema) strSchema77);
        strSchema72.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = strSchema72.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList87 = strSchema72.getRequired();
        io.swagger.oas.models.media.Schema schema88 = schema71.required(strList87);
        io.swagger.oas.models.media.Schema schema89 = schema54.required(strList87);
        schema17.setEnum(strList87);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = schema8.getExclusiveMaximum();
        schema8.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        java.util.List<java.lang.String> strList8 = strSchema0.getEnum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema22 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        schema12.setXml(xML23);
        schema12.setPattern("default");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema12.minimum(bigDecimal27);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        java.lang.String str11 = schema6.getPattern();
        schema6.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str21 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        java.lang.String str5 = strSchema0.getType();
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.lang.Integer int7 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxProperties((java.lang.Integer) 10);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("default");
        java.math.BigDecimal bigDecimal13 = null;
        schema10.setMaximum(bigDecimal13);
        java.lang.String str15 = schema10.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#/components/schemas/default" + "'", str15, "#/components/schemas/default");
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema9 = schema7.maxLength((java.lang.Integer) 100);
        java.lang.Integer int10 = schema7.getMinItems();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }
}

