import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest20 {

    public static boolean debug = false;

    @Test
    public void test10001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10001");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        java.lang.Boolean boolean21 = schema19.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.not(schema32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.format("no description");
        io.swagger.oas.models.media.Schema schema45 = schema43.format("");
        io.swagger.oas.models.media.Schema schema47 = schema43.maxItems((java.lang.Integer) 0);
        schema43.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        io.swagger.oas.models.media.Schema schema52 = schema43.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = schema52.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test10002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10002");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema7.properties(strMap12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema19.getMinLength();
        java.lang.Integer int25 = strSchema19.getMaxLength();
        java.math.BigDecimal bigDecimal26 = strSchema19.getMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setType("");
        io.swagger.oas.models.media.Schema schema30 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema19);
        io.swagger.oas.models.media.Schema schema31 = strSchema19.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        io.swagger.oas.models.media.Schema schema36 = strSchema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean39 = schema38.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema38.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema38.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        io.swagger.oas.models.media.Schema schema47 = strSchema43.maxLength((java.lang.Integer) 1);
        schema47.setPattern("");
        io.swagger.oas.models.media.Schema schema51 = schema47.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray55 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        schema51.setEnum((java.util.List<java.lang.String>) strList56);
        schema42.setEnum((java.util.List<java.lang.String>) strList56);
        strSchema19.setEnum((java.util.List<java.lang.String>) strList56);
        strSchema19.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = strSchema19.getProperties();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(strMap63);
    }

    @Test
    public void test10003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10003");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        schema10.setMaximum(bigDecimal21);
        java.lang.Boolean boolean23 = schema10.getExclusiveMaximum();
        java.util.List<java.lang.String> strList24 = schema10.getRequired();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strList24);
    }

    @Test
    public void test10004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10004");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        schema22.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10005");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        strSchema11.setNot((io.swagger.oas.models.media.Schema) strSchema16);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.minimum(bigDecimal22);
        schema23.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxItems((java.lang.Integer) 10);
        schema8.setDefault((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.multipleOf(bigDecimal31);
        java.lang.String str33 = schema30.getPattern();
        java.lang.String str34 = schema30.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test10006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10006");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        java.lang.Integer int30 = schema29.getMaxProperties();
        java.math.BigDecimal bigDecimal31 = null;
        schema29.setMinimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema29.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal35 = schema29.getMinimum();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema29.maximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = schema18.example((java.lang.Object) bigDecimal36);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList41 = schema40.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test10007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10007");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        schema3.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema7 = schema3.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.multipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = schema9.getMaximum();
        schema9.setNullable((java.lang.Boolean) false);
        java.lang.Integer int13 = schema9.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test10008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10008");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10009");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema12.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean23 = schema22.getDeprecated();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
    }

    @Test
    public void test10010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10010");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        java.lang.Boolean boolean10 = schema9.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.discriminator(discriminator11);
        java.lang.Boolean boolean13 = schema12.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test10011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10011");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.xml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = strSchema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema11.setDefault((java.lang.Object) boolean21);
        io.swagger.oas.models.media.Schema schema24 = schema11.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal25 = schema11.getMultipleOf();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test10012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10012");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.minimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        strSchema34.setMaxItems((java.lang.Integer) 10);
        strSchema34.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = strSchema34.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema44 = strSchema34.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        java.lang.Boolean boolean47 = schema46.getExclusiveMinimum();
        java.lang.Boolean boolean48 = schema46.getReadOnly();
        io.swagger.oas.models.media.Schema schema49 = schema33.example((java.lang.Object) schema46);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test10013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10013");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        schema24.setMultipleOf(bigDecimal27);
        java.lang.Boolean boolean29 = schema24.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        java.lang.Integer int37 = schema36.getMaxProperties();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMinimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema36.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema36.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema36.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        schema24.setExample((java.lang.Object) schema49);
        java.lang.String str51 = schema24.getDescription();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test10014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10014");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("no description");
        io.swagger.oas.models.media.Schema schema28 = schema17.not(schema27);
        io.swagger.oas.models.media.Schema schema29 = schema6.not(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        io.swagger.oas.models.media.Schema schema36 = strSchema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean39 = schema38.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema38.discriminator(discriminator40);
        schema41.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema41.exclusiveMinimum((java.lang.Boolean) false);
        schema45.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        java.lang.String str51 = schema45.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator52 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = schema45.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal55 = null;
        schema45.setMaximum(bigDecimal55);
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test10015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10015");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.$ref("default");
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema12.getExtensions();
        schema12.set$ref("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test10016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10016");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        schema22.setTitle("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test10017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10017");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema11.properties(strMap23);
        schema11.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal27 = null;
        schema11.setMaximum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        schema11.setMinimum(bigDecimal29);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10018");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema24.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10019");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setMaxItems((java.lang.Integer) 10);
        java.lang.String str20 = schema16.getName();
        schema16.setMaxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema16.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        io.swagger.oas.models.media.Schema schema29 = strSchema25.maxLength((java.lang.Integer) 1);
        schema29.setPattern("");
        io.swagger.oas.models.media.Schema schema33 = schema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList38 = null;
        schema35.setRequired(strList38);
        io.swagger.oas.models.media.Schema schema41 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        io.swagger.oas.models.media.Schema schema46 = strSchema42.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema50 = schema46.title("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema46.maxLength((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass53 = schema46.getClass();
        schema41.setDefault((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema41.multipleOf(bigDecimal55);
        schema16.setNot(schema56);
        java.lang.Boolean boolean58 = schema56.getUniqueItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test10020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10020");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema28 = strSchema20.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strSchema20.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray33 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        schema30.setRequired((java.util.List<java.lang.String>) strList34);
        java.util.List<java.lang.String> strList37 = schema30.getEnum();
        java.lang.String str38 = schema30.toString();
        io.swagger.oas.models.media.Schema schema40 = schema30.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = strSchema41.properties(strMap46);
        java.lang.Integer int48 = schema47.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema47.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = strSchema53.getMinLength();
        java.lang.Integer int59 = strSchema53.getMaxLength();
        java.math.BigDecimal bigDecimal60 = strSchema53.getMaximum();
        io.swagger.oas.models.media.Schema schema61 = schema52.additionalProperties((io.swagger.oas.models.media.Schema) strSchema53);
        io.swagger.oas.models.media.Schema schema63 = schema52.type("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema52.addRequiredItem("*/*");
        boolean boolean66 = schema40.equals((java.lang.Object) "*/*");
        io.swagger.oas.models.media.Schema schema67 = schema16.not(schema40);
        io.swagger.oas.models.media.Schema schema69 = schema40.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.minimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema69.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str38, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test10021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10021");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.lang.Boolean boolean27 = strSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = strSchema24.type("default");
        io.swagger.oas.models.media.Schema schema30 = strSchema13.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema12.not(schema32);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test10022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10022");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        strSchema11.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = strSchema11.pattern("#/components/schemas/default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean28 = strSchema23.getDeprecated();
        java.lang.String str29 = strSchema23.getDescription();
        io.swagger.oas.models.media.Schema schema31 = strSchema23.maxLength((java.lang.Integer) 0);
        java.lang.Integer int32 = strSchema23.getMaxItems();
        io.swagger.oas.models.media.Schema schema34 = strSchema23.format("");
        io.swagger.oas.models.media.Schema schema36 = strSchema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setDeprecated((java.lang.Boolean) true);
        schema36.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = strSchema41.properties(strMap46);
        java.lang.Boolean boolean48 = strSchema41.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema55 = schema53.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean56 = schema55.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = schema55.getExternalDocs();
        java.math.BigDecimal bigDecimal58 = schema55.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema67 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema60);
        io.swagger.oas.models.media.Schema schema69 = schema67.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema71 = strSchema41.properties(strMap70);
        io.swagger.oas.models.media.Schema schema72 = schema36.properties(strMap70);
        schema22.setProperties(strMap70);
        java.lang.String str74 = schema22.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test10023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10023");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        schema36.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = strSchema15.required((java.util.List<java.lang.String>) strList51);
        strSchema7.setEnum((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = schema64.getExternalDocs();
        schema64.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        strSchema68.setName("no description");
        io.swagger.oas.models.media.Schema schema74 = strSchema68.type("");
        io.swagger.oas.models.media.Schema schema76 = strSchema68.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = strSchema68.addRequiredItem("");
        schema64.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema68);
        strSchema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema68);
        strSchema7.addEnumItemObject("");
        java.lang.String str83 = strSchema7.getTitle();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation65);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test10024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10024");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test10025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10025");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
    }

    @Test
    public void test10026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10026");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = strSchema6.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10027");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 1);
        schema11.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema11.getProperties();
        java.lang.String str15 = schema11.getName();
        io.swagger.oas.models.media.Schema schema17 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 0);
        java.lang.String str20 = schema19.getName();
        io.swagger.oas.models.media.Schema schema22 = schema19.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "no description" + "'", str15, "no description");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "no description" + "'", str20, "no description");
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test10028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10028");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.multipleOf(bigDecimal27);
        java.lang.Boolean boolean29 = schema26.getDeprecated();
        io.swagger.oas.models.media.Schema schema31 = schema26.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = schema38.getExternalDocs();
        io.swagger.oas.models.media.Schema schema41 = schema38.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str43 = strSchema42.getTitle();
        io.swagger.oas.models.media.Schema schema45 = strSchema42.format("");
        strSchema42.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = schema54.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema56.setRequired((java.util.List<java.lang.String>) strList59);
        strSchema42.setRequired((java.util.List<java.lang.String>) strList59);
        schema41.setNot((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema65 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal66 = null;
        schema65.setMinimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = schema65.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema26.example((java.lang.Object) schema65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema26.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test10029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10029");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        schema12.setMaxItems((java.lang.Integer) 0);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema12.getExternalDocs();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation23);
    }

    @Test
    public void test10030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10030");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setFormat("no description");
        schema18.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema18.xml(xML28);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.discriminator(discriminator30);
        java.lang.Integer int32 = schema31.getMaxItems();
        java.lang.Class<?> wildcardClass33 = schema31.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test10031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10031");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strSchema18.getMinLength();
        java.lang.Integer int24 = strSchema18.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = strSchema18.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int27 = schema26.getMinLength();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.multipleOf(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        schema17.setNot(schema29);
        schema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        schema17.setDiscriminator(discriminator35);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test10032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10032");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.String str21 = strSchema12.getPattern();
        java.lang.String str22 = strSchema12.toString();
        java.util.List<java.lang.String> strList23 = strSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema25 = strSchema12.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema25.setExternalDocs(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10033");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.String str47 = schema42.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema42.minLength((java.lang.Integer) 10);
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test10034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10034");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = strSchema0.getMinLength();
        java.lang.Boolean boolean20 = strSchema0.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strSchema0.setExtensions(strMap21);
        java.lang.Boolean boolean23 = strSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema25 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test10035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10035");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.String str12 = schema6.getName();
        io.swagger.oas.models.media.Schema schema14 = schema6.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema26.not(schema33);
        io.swagger.oas.models.media.Schema schema38 = schema26.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema26.name("hi!");
        java.lang.Boolean boolean41 = schema26.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema26.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema43.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.multipleOf(bigDecimal46);
        schema47.setMaxProperties((java.lang.Integer) (-1));
        schema47.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema47.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setDefault((java.lang.Object) schema53);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test10036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10036");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        java.lang.String str7 = schema4.getPattern();
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        schema4.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test10037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10037");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema13 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setDeprecated((java.lang.Boolean) false);
        strSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.Integer int18 = strSchema0.getMinProperties();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test10038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10038");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) 0);
        schema9.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test10039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10039");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strSchema0.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10040");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getFormat();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test10041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10041");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strSchema0.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean55 = strSchema54.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = strSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = strSchema54.description("");
        java.lang.Integer int59 = strSchema54.getMaxProperties();
        strSchema54.setType("default");
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strSchema54.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strSchema54.writeOnly((java.lang.Boolean) false);
        boolean boolean66 = strSchema0.equals((java.lang.Object) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema69 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema71 = strSchema0.type("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(externalDocumentation67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test10042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10042");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getWriteOnly();
        java.util.List<java.lang.String> strList10 = schema6.getEnum();
        io.swagger.oas.models.media.Schema schema12 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int13 = schema6.getMaxItems();
        java.lang.String str14 = schema6.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test10043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10043");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema30.not((io.swagger.oas.models.media.Schema) strSchema37);
        strSchema37.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema48 = strSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        schema48.setNot(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema29.not(schema53);
        java.lang.Boolean boolean58 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema60 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList61 = schema60.getRequired();
        io.swagger.oas.models.media.Schema schema63 = schema60.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test10044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10044");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        java.math.BigDecimal bigDecimal35 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema19.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMaximum(bigDecimal38);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        schema37.setDiscriminator(discriminator40);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test10045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10045");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str19 = strSchema0.getDescription();
        java.lang.String str20 = strSchema0.getFormat();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test10046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10046");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema16.type("");
        java.lang.Integer int21 = schema16.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test10047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10047");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.lang.Boolean boolean54 = strSchema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = strSchema51.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = strSchema51.getProperties();
        io.swagger.oas.models.media.Schema schema59 = strSchema51.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema51.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = strSchema51.getNot();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = strSchema51.minimum(bigDecimal63);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.externalDocs(externalDocumentation65);
        java.lang.Boolean boolean67 = schema66.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema68 = schema50.not(schema66);
        io.swagger.oas.models.media.Schema schema70 = schema50.addRequiredItem("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test10048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10048");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = strSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.pattern("#/components/schemas/default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = strSchema15.getMinLength();
        java.lang.Integer int21 = strSchema15.getMaxLength();
        java.lang.Integer int22 = strSchema15.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema15.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str27 = strSchema26.getTitle();
        io.swagger.oas.models.media.Schema schema29 = strSchema26.format("");
        io.swagger.oas.models.media.Schema schema31 = strSchema26.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema24.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        io.swagger.oas.models.media.Schema schema44 = strSchema38.type("");
        io.swagger.oas.models.media.Schema schema46 = schema44.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int47 = schema46.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = schema54.format("no description");
        io.swagger.oas.models.media.Schema schema57 = schema46.not(schema56);
        io.swagger.oas.models.media.Schema schema59 = schema56.format("default");
        java.lang.String str60 = schema56.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.externalDocs(externalDocumentation61);
        schema13.setDefault((java.lang.Object) schema62);
        java.lang.Integer int64 = schema62.getMaxItems();
        schema62.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        java.lang.Integer int74 = schema73.getMaxProperties();
        java.math.BigDecimal bigDecimal75 = null;
        schema73.setMinimum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = schema73.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        schema73.setExternalDocs(externalDocumentation79);
        io.swagger.oas.models.media.Schema schema82 = schema73.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj83 = schema82.getExample();
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema82.xml(xML84);
        io.swagger.oas.models.media.Schema schema87 = schema85.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str88 = schema87.getFormat();
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema87.minimum(bigDecimal89);
        java.lang.Integer int91 = schema90.getMinLength();
        schema62.setNot(schema90);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "default" + "'", str60, "default");
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
    }

    @Test
    public void test10049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10049");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        schema4.setTitle("");
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strSchema9.properties(strMap14);
        strSchema9.setMaxLength((java.lang.Integer) 0);
        strSchema9.setName("hi!");
        io.swagger.oas.models.media.Schema schema21 = strSchema9.description("*/*");
        java.util.List<java.lang.String> strList22 = strSchema9.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema50 = strSchema9.additionalProperties(schema49);
        boolean boolean51 = schema4.equals((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema53 = schema50.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema50.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test10050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10050");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 0);
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.String str16 = schema9.getDescription();
        java.lang.Boolean boolean17 = schema9.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
    }

    @Test
    public void test10051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10051");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema15.writeOnly((java.lang.Boolean) true);
        schema21.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test10052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10052");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.description("");
        io.swagger.oas.models.media.Schema schema14 = schema8.maxProperties((java.lang.Integer) 100);
        java.lang.String str15 = schema14.getType();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMultipleOf(bigDecimal18);
        java.lang.Boolean boolean20 = schema17.getNullable();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test10053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10053");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        strSchema0.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10054");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        java.lang.String str7 = schema4.getPattern();
        java.lang.Integer int8 = schema4.getMinProperties();
        java.lang.Integer int9 = schema4.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test10055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10055");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.String str21 = strSchema12.getPattern();
        java.lang.String str22 = strSchema12.toString();
        java.util.List<java.lang.String> strList23 = strSchema12.getEnum();
        io.swagger.oas.models.media.Schema schema25 = strSchema12.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = null;
        schema25.setAdditionalProperties(schema28);
        java.lang.String str30 = schema25.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test10056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10056");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema10.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test10057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10057");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getExclusiveMinimum();
        schema6.addEnumItemObject("default");
        schema6.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        java.lang.Integer int19 = strSchema15.getMaxItems();
        strSchema15.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = strSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.addExtension("", (java.lang.Object) schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema6.multipleOf(bigDecimal25);
        java.lang.Integer int27 = schema6.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test10058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10058");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.util.List<java.lang.String> strList17 = strSchema14.getRequired();
        strSchema14.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int20 = strSchema14.getMinLength();
        strSchema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = strSchema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strSchema24.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        schema34.setRequired((java.util.List<java.lang.String>) strList38);
        java.util.List<java.lang.String> strList41 = schema34.getEnum();
        io.swagger.oas.models.media.Schema schema42 = strSchema14.addProperties("hi!", schema34);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema14.discriminator(discriminator43);
        schema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal46 = null;
        schema9.setMinimum(bigDecimal46);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML50 = schema9.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML50);
    }

    @Test
    public void test10059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10059");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10060");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.util.List<java.lang.String> strList20 = strSchema17.getRequired();
        strSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = strSchema17.getMinLength();
        java.math.BigDecimal bigDecimal24 = null;
        strSchema17.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema32 = schema11.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema34 = schema11.deprecated((java.lang.Boolean) true);
        java.lang.String str35 = schema34.getTitle();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMultipleOf(bigDecimal36);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test10061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10061");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str23 = strSchema22.getTitle();
        io.swagger.oas.models.media.Schema schema25 = strSchema22.format("");
        strSchema22.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = strSchema22.getMaximum();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMinimum();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.deprecated((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) (-1));
        schema21.setExample((java.lang.Object) schema31);
        schema31.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = schema54.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema47.not(schema54);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str59 = strSchema58.getTitle();
        io.swagger.oas.models.media.Schema schema61 = strSchema58.format("");
        strSchema58.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        strSchema64.setName("no description");
        io.swagger.oas.models.media.Schema schema70 = strSchema64.type("");
        io.swagger.oas.models.media.Schema schema72 = schema70.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray74 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        schema72.setRequired((java.util.List<java.lang.String>) strList75);
        strSchema58.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = schema57.required((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.externalDocs(externalDocumentation80);
        schema81.setMinLength((java.lang.Integer) 1);
        schema81.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = schema31.example((java.lang.Object) schema81);
        io.swagger.oas.models.media.Schema schema88 = schema86.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test10062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10062");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10063");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        schema10.setMaxItems((java.lang.Integer) 1);
        java.lang.String str21 = schema10.toString();
        io.swagger.oas.models.media.Schema schema23 = schema10.minItems((java.lang.Integer) 1);
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema23.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test10064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10064");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.example((java.lang.Object) '#');
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.externalDocs(externalDocumentation11);
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema15 = schema10.nullable((java.lang.Boolean) false);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test10065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10065");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.xml(xML8);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema5.setProperties(strMap10);
        java.lang.Boolean boolean12 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getDeprecated();
        boolean boolean18 = strSchema13.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema13.multipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = strSchema13.deprecated((java.lang.Boolean) false);
        schema22.setMaxItems((java.lang.Integer) 0);
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema5.additionalProperties(schema22);
        java.lang.Object obj28 = schema27.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema29.properties(strMap34);
        java.lang.Integer int36 = schema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema35.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = strSchema41.getMinLength();
        java.lang.Integer int47 = strSchema41.getMaxLength();
        java.math.BigDecimal bigDecimal48 = strSchema41.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema40.additionalProperties((io.swagger.oas.models.media.Schema) strSchema41);
        java.lang.String str50 = strSchema41.getPattern();
        java.lang.String str51 = strSchema41.toString();
        java.util.List<java.lang.String> strList52 = strSchema41.getEnum();
        io.swagger.oas.models.media.Schema schema54 = strSchema41.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = strSchema41.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean57 = schema27.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str51, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test10066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10066");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList15 = schema10.getRequired();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = schema17.getMaximum();
        java.math.BigDecimal bigDecimal19 = schema17.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test10067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10067");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = strSchema6.maxProperties((java.lang.Integer) 1);
        schema28.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal33 = null;
        schema28.setMaximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema28.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean37 = schema28.getWriteOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test10068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10068");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("hi!");
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) 0);
        java.lang.String str26 = schema20.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test10069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10069");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        java.lang.String str12 = schema6.getName();
        io.swagger.oas.models.media.Schema schema14 = schema6.maxLength((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test10070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10070");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = schema26.getProperties();
        schema26.setPattern("");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.xml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test10071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10071");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxItems((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema12.getNot();
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int31 = schema30.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.format("no description");
        io.swagger.oas.models.media.Schema schema41 = schema30.not(schema40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.multipleOf(bigDecimal42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema40.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        schema21.setNot(schema45);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test10072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10072");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strSchema27.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMultipleOf(bigDecimal38);
        schema37.setFormat("");
        schema37.setTitle("hi!");
        schema37.setDeprecated((java.lang.Boolean) true);
        schema37.setName("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema37.minLength((java.lang.Integer) (-1));
        schema49.setDefault((java.lang.Object) 1.0f);
        io.swagger.oas.models.media.Schema schema52 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        schema6.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test10073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10073");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema4.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        io.swagger.oas.models.media.XML xML16 = schema12.getXml();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema17.properties(strMap22);
        java.lang.Integer int24 = schema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema23.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema30.name("no description");
        java.util.List<java.lang.String> strList33 = schema30.getEnum();
        io.swagger.oas.models.media.Schema schema34 = schema12.example((java.lang.Object) strList33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        java.util.List<java.lang.String> strList38 = strSchema35.getRequired();
        strSchema35.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int41 = strSchema35.getMinLength();
        java.math.BigDecimal bigDecimal42 = null;
        strSchema35.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strSchema35.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML46 = null;
        strSchema35.setXml(xML46);
        io.swagger.oas.models.media.Schema schema48 = schema12.not((io.swagger.oas.models.media.Schema) strSchema35);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        schema12.setDiscriminator(discriminator49);
        io.swagger.oas.models.media.XML xML51 = schema12.getXml();
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: #\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(xML51);
    }

    @Test
    public void test10074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10074");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        java.lang.Integer int4 = strSchema0.getMaxItems();
        strSchema0.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator7 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minItems((java.lang.Integer) 1);
        java.lang.String str10 = schema9.getType();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test10075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10075");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getExclusiveMinimum();
        schema6.addEnumItemObject("default");
        java.math.BigDecimal bigDecimal12 = null;
        schema6.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.XML xML14 = schema6.getXml();
        io.swagger.oas.models.media.Discriminator discriminator15 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strSchema18.getExternalDocs();
        java.lang.String str24 = strSchema18.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        strSchema18.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema18.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = strSchema18.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = strSchema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema32.minItems((java.lang.Integer) 0);
        java.lang.String str37 = schema32.getPattern();
        boolean boolean38 = schema6.equals((java.lang.Object) schema32);
        schema32.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test10076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10076");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str8 = strSchema7.getTitle();
        io.swagger.oas.models.media.Schema schema10 = strSchema7.format("");
        strSchema7.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strSchema7.getExtensions();
        java.lang.Integer int14 = strSchema7.getMinItems();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        boolean boolean17 = strSchema0.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.$ref("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema21 = schema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test10077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10077");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int30 = strSchema24.getMinLength();
        java.lang.String str31 = strSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema33 = strSchema24.name("");
        java.lang.Object obj34 = strSchema24.getExample();
        io.swagger.oas.models.media.Schema schema36 = strSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema38.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("default");
        java.math.BigDecimal bigDecimal49 = schema48.getMultipleOf();
        io.swagger.oas.models.media.Schema schema50 = strSchema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema48);
        io.swagger.oas.models.media.Schema schema51 = strSchema6.additionalProperties(schema48);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        java.util.List<java.lang.String> strList60 = strSchema57.getRequired();
        strSchema57.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int63 = strSchema57.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        strSchema64.setName("no description");
        io.swagger.oas.models.media.Schema schema70 = strSchema64.type("");
        io.swagger.oas.models.media.Schema schema71 = strSchema57.not((io.swagger.oas.models.media.Schema) strSchema64);
        strSchema52.setExample((java.lang.Object) schema71);
        java.lang.Boolean boolean73 = schema71.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = schema71.format("hi!");
        java.math.BigDecimal bigDecimal76 = null;
        schema75.setMaximum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema79 = schema75.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean80 = schema75.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema51.example((java.lang.Object) schema75);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test10078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10078");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        strSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.deprecated((java.lang.Boolean) false);
        schema23.setUniqueItems((java.lang.Boolean) true);
        schema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setMinItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema23.multipleOf(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema23.maximum(bigDecimal32);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test10079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10079");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strSchema11.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.type("*/*");
        schema21.setAdditionalProperties(schema33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema21.getExtensions();
        schema10.setAdditionalProperties(schema21);
        java.lang.String str37 = schema21.get$ref();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test10080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10080");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        java.lang.Integer int25 = schema18.getMaxLength();
        io.swagger.oas.models.media.XML xML26 = schema18.getXml();
        schema18.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(xML26);
    }

    @Test
    public void test10081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10081");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema11.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema11.getExtensions();
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema11.setDiscriminator(discriminator17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema11.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test10082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10082");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        java.lang.Integer int13 = schema12.getMaxProperties();
        schema12.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = schema23.format("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("");
        io.swagger.oas.models.media.Schema schema29 = schema27.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema12.addProperties("", schema27);
        java.lang.Boolean boolean33 = schema27.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema27.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test10083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10083");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        schema43.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema43.addRequiredItem("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.minimum(bigDecimal48);
        schema33.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema33.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema schema54 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema33.xml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test10084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10084");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema27.getExtensions();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test10085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10085");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.util.List<java.lang.String> strList20 = strSchema17.getRequired();
        strSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = strSchema17.getMinLength();
        java.math.BigDecimal bigDecimal24 = null;
        strSchema17.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema32 = schema11.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema34 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema11.maximum(bigDecimal35);
        schema36.setName("");
        java.lang.Object obj39 = null;
        schema36.setDefault(obj39);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test10086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10086");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        strSchema10.setNot((io.swagger.oas.models.media.Schema) strSchema15);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema10.minimum(bigDecimal21);
        schema22.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema22.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = strSchema26.properties(strMap31);
        java.lang.Integer int33 = schema32.getMaxProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.minProperties((java.lang.Integer) 0);
        java.lang.String str36 = schema32.getType();
        io.swagger.oas.models.media.Schema schema38 = schema32.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema22.not(schema38);
        io.swagger.oas.models.media.Schema schema40 = strSchema0.example((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML41 = schema38.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema38.setExternalDocs(externalDocumentation42);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
    }

    @Test
    public void test10087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10087");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        schema24.setExtensions(strMap25);
        java.lang.Integer int27 = schema24.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema29.get$ref();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test10088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10088");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        java.lang.String str17 = schema16.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema16.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test10089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10089");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setDescription("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema7.not((io.swagger.oas.models.media.Schema) strSchema14);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        strSchema22.setNot((io.swagger.oas.models.media.Schema) strSchema27);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema22.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema52 = strSchema44.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = strSchema44.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray57 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        schema54.setRequired((java.util.List<java.lang.String>) strList58);
        schema43.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = strSchema22.required((java.util.List<java.lang.String>) strList58);
        strSchema14.setEnum((java.util.List<java.lang.String>) strList58);
        schema4.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.String str65 = schema4.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test10090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10090");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        java.lang.String str9 = strSchema0.getPattern();
        java.util.List<java.lang.String> strList10 = strSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test10091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10091");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.util.List<java.lang.String> strList11 = strSchema8.getRequired();
        strSchema8.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema8.title("no description");
        schema15.set$ref("");
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.addProperties("*/*", schema19);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        java.lang.Integer int27 = schema24.getMinLength();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test10092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10092");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = strSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema9.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray22 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        schema19.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int40 = strSchema34.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema48 = strSchema34.not((io.swagger.oas.models.media.Schema) strSchema41);
        strSchema29.setExample((java.lang.Object) schema48);
        java.lang.Boolean boolean50 = schema48.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema48.format("hi!");
        io.swagger.oas.models.media.Schema schema54 = schema52.name("no description");
        schema8.setAdditionalProperties(schema54);
        java.lang.String str56 = schema54.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test10093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10093");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        schema14.setNullable((java.lang.Boolean) false);
        schema14.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema14.deprecated((java.lang.Boolean) true);
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema14.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test10094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10094");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10095");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        java.lang.String str9 = schema7.getType();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxLength((java.lang.Integer) 10);
        java.lang.String str14 = schema13.toString();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10096");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        strSchema11.setNot((io.swagger.oas.models.media.Schema) strSchema16);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.minimum(bigDecimal22);
        schema23.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxItems((java.lang.Integer) 10);
        schema8.setDefault((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema30 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str31 = schema8.getType();
        io.swagger.oas.models.media.Schema schema33 = schema8.format("");
        schema33.setName("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.lang.Boolean boolean39 = strSchema36.getDeprecated();
        io.swagger.oas.models.media.Schema schema41 = strSchema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema43.getExternalDocs();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema43.setExternalDocs(externalDocumentation47);
        java.lang.Object obj49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema43.example(obj49);
        java.lang.String str51 = schema50.getName();
        java.lang.String str52 = schema50.getName();
        java.math.BigDecimal bigDecimal53 = null;
        schema50.setMultipleOf(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema33.additionalProperties(schema50);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str51, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str52, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test10097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10097");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test10098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10098");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema28.properties(strMap33);
        java.lang.String str35 = strSchema28.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.properties(strMap44);
        schema42.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema42.title("default");
        schema49.setReadOnly((java.lang.Boolean) false);
        strSchema28.setNot(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema23.additionalProperties(schema49);
        java.lang.Boolean boolean54 = schema23.getNullable();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
    }

    @Test
    public void test10099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10099");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.pattern("hi!");
        schema24.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int29 = schema24.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int32 = schema24.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema24.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema24.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test10100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10100");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList19 = schema11.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema11.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        schema33.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema33.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj38 = schema37.getExample();
        schema11.setExample((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema41 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema11.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation44);
    }

    @Test
    public void test10101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10101");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.lang.String str22 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema24 = schema21.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10102");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema10.properties(strMap15);
        java.lang.String str17 = strSchema10.getType();
        schema6.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        java.lang.String str19 = schema6.getType();
        io.swagger.oas.models.media.Schema schema21 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema25.addRequiredItem("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj28 = schema27.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test10103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10103");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strSchema11.maxProperties((java.lang.Integer) 1);
        schema25.setMaxItems((java.lang.Integer) 1);
        java.lang.Object obj28 = null;
        schema25.setDefault(obj28);
        java.math.BigDecimal bigDecimal30 = schema25.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.util.List<java.lang.String> strList34 = strSchema31.getRequired();
        strSchema31.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int37 = strSchema31.getMinLength();
        java.math.BigDecimal bigDecimal38 = null;
        strSchema31.setMinimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema41.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema25.example((java.lang.Object) schema47);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.XML xML52 = schema48.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(xML52);
    }

    @Test
    public void test10104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10104");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strSchema0.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema18 = schema12.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10105");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema9.getExternalDocs();
        java.math.BigDecimal bigDecimal15 = null;
        schema9.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema20.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test10106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10106");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strSchema0.getExtensions();
        strSchema0.setType("no description");
        java.lang.Object obj18 = strSchema0.getExample();
        java.lang.String str19 = strSchema0.getType();
        io.swagger.oas.models.media.Schema schema21 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        java.lang.Boolean boolean25 = strSchema22.getDeprecated();
        boolean boolean27 = strSchema22.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema22.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        strSchema32.setNot((io.swagger.oas.models.media.Schema) strSchema37);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema32.minimum(bigDecimal43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.multipleOf(bigDecimal45);
        strSchema22.setAdditionalProperties(schema44);
        schema44.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str51 = strSchema50.getTitle();
        io.swagger.oas.models.media.Schema schema53 = strSchema50.format("");
        strSchema50.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int56 = strSchema50.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        java.lang.Boolean boolean60 = strSchema57.getDeprecated();
        io.swagger.oas.models.media.Schema schema62 = strSchema57.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = strSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        io.swagger.oas.models.media.Schema schema75 = strSchema71.maxLength((java.lang.Integer) 1);
        schema75.setPattern("");
        io.swagger.oas.models.media.Schema schema79 = schema75.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray83 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        schema79.setEnum((java.util.List<java.lang.String>) strList84);
        strSchema65.setRequired((java.util.List<java.lang.String>) strList84);
        schema62.setRequired((java.util.List<java.lang.String>) strList84);
        strSchema50.setRequired((java.util.List<java.lang.String>) strList84);
        schema44.setEnum((java.util.List<java.lang.String>) strList84);
        schema21.setEnum((java.util.List<java.lang.String>) strList84);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "no description" + "'", str19, "no description");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test10107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10107");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minimum(bigDecimal9);
        java.lang.Object obj11 = strSchema0.getExample();
        java.lang.Object obj12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.example(obj12);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strSchema16.setExtensions(strMap17);
        strSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema16);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test10108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10108");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        io.swagger.oas.models.media.Schema schema16 = strSchema8.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strSchema8.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        io.swagger.oas.models.media.Schema schema25 = strSchema8.not(schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        java.lang.Integer int35 = schema34.getMaxProperties();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMinimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema34.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxProperties((java.lang.Integer) (-1));
        schema27.setExample((java.lang.Object) schema39);
        strSchema0.setNot(schema27);
        io.swagger.oas.models.media.Schema schema45 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = schema45.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation46);
    }

    @Test
    public void test10109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10109");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getNullable();
        java.lang.Object obj2 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str5 = strSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test10110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10110");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        java.lang.Integer int23 = schema6.getMaxProperties();
        java.lang.Integer int24 = schema6.getMaxItems();
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        schema30.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10111");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        strSchema23.setName("hi!");
        io.swagger.oas.models.media.Schema schema35 = strSchema23.description("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strSchema36.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema44 = schema42.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema42.minLength((java.lang.Integer) 0);
        schema35.setNot(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema46.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int59 = schema58.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        io.swagger.oas.models.media.Schema schema68 = schema66.format("no description");
        io.swagger.oas.models.media.Schema schema69 = schema58.not(schema68);
        schema69.setTitle("");
        java.lang.String str72 = schema69.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        io.swagger.oas.models.media.Schema schema77 = strSchema73.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = schema77.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean80 = schema79.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = schema79.getExternalDocs();
        java.math.BigDecimal bigDecimal82 = schema79.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema84 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema84.setType("hi!");
        strSchema84.setName("no description");
        io.swagger.oas.models.media.Schema schema90 = strSchema84.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema91 = schema79.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema84);
        io.swagger.oas.models.media.Schema schema93 = schema91.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema93.getProperties();
        io.swagger.oas.models.media.Schema schema95 = schema69.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema49.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema20.properties(strMap94);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(externalDocumentation81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test10112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10112");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        io.swagger.oas.models.media.XML xML19 = null;
        schema10.setXml(xML19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema10.getProperties();
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        schema10.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test10113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10113");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.List<java.lang.String> strList6 = schema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = schema5.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema5.maxProperties((java.lang.Integer) 0);
        schema10.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10114");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        schema48.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema48.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test10115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10115");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        schema16.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int20 = schema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj31 = strSchema25.getExample();
        io.swagger.oas.models.media.Schema schema33 = strSchema25.description("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema35 = strSchema25.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean36 = schema24.equals((java.lang.Object) strSchema25);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema24.getDiscriminator();
        java.math.BigDecimal bigDecimal38 = schema24.getMultipleOf();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test10116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10116");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        java.lang.String str9 = schema7.getType();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema23.not(schema30);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str35 = strSchema34.getTitle();
        io.swagger.oas.models.media.Schema schema37 = strSchema34.format("");
        strSchema34.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setName("no description");
        io.swagger.oas.models.media.Schema schema46 = strSchema40.type("");
        io.swagger.oas.models.media.Schema schema48 = schema46.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema48.setRequired((java.util.List<java.lang.String>) strList51);
        strSchema34.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = schema33.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.externalDocs(externalDocumentation56);
        schema57.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal60 = schema57.getMaximum();
        schema7.addExtension("", (java.lang.Object) schema57);
        schema7.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal60);
    }

    @Test
    public void test10117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10117");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        schema12.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema12.writeOnly((java.lang.Boolean) false);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.discriminator(discriminator20);
        schema21.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test10118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10118");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema4.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = schema10.getMultipleOf();
        schema10.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test10119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10119");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        java.lang.Integer int31 = schema30.getMaxProperties();
        java.math.BigDecimal bigDecimal32 = null;
        schema30.setMinimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema30.maxProperties((java.lang.Integer) 1);
        schema35.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema35.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema35.externalDocs(externalDocumentation39);
        schema21.setNot(schema35);
        io.swagger.oas.models.media.Schema schema43 = schema21.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal44 = null;
        schema21.setMinimum(bigDecimal44);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test10120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10120");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML5 = null;
        schema4.setXml(xML5);
        io.swagger.oas.models.media.XML xML7 = schema4.getXml();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray10);
        schema4.setExample((java.lang.Object) tagSetOptional11);
        java.lang.Integer int13 = schema4.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test10121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10121");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema7.properties(strMap12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema19.getMinLength();
        java.lang.Integer int25 = strSchema19.getMaxLength();
        java.math.BigDecimal bigDecimal26 = strSchema19.getMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setType("");
        io.swagger.oas.models.media.Schema schema30 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.Boolean boolean31 = strSchema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = strSchema19.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.name("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.discriminator(discriminator36);
        schema37.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test10122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10122");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        schema10.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema10.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.type("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean27 = schema22.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test10123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10123");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.discriminator(discriminator15);
        java.lang.Integer int17 = schema10.getMinProperties();
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema10.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema21.not((io.swagger.oas.models.media.Schema) strSchema28);
        java.lang.Boolean boolean36 = strSchema21.getUniqueItems();
        java.lang.Boolean boolean37 = strSchema21.getNullable();
        io.swagger.oas.models.media.Schema schema39 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strSchema21.maxItems((java.lang.Integer) (-1));
        strSchema21.setType("default");
        io.swagger.oas.models.media.Discriminator discriminator44 = strSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean46 = strSchema45.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = strSchema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = strSchema45.description("");
        java.lang.Boolean boolean50 = schema49.getUniqueItems();
        schema49.setTitle("");
        io.swagger.oas.models.media.Schema schema53 = strSchema21.additionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema55 = strSchema21.maxProperties((java.lang.Integer) 100);
        java.lang.String str56 = strSchema21.getDescription();
        java.lang.String str57 = strSchema21.getTitle();
        schema10.setDefault((java.lang.Object) str57);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test10124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10124");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setType("no description");
        schema8.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10125");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = schema20.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema20.format("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema20.setExternalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        strSchema40.setNot((io.swagger.oas.models.media.Schema) strSchema45);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strSchema40.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = schema59.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setName("no description");
        io.swagger.oas.models.media.Schema schema68 = strSchema62.type("");
        io.swagger.oas.models.media.Schema schema70 = strSchema62.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = strSchema62.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray75 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema72.setRequired((java.util.List<java.lang.String>) strList76);
        schema61.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = strSchema40.required((java.util.List<java.lang.String>) strList76);
        strSchema31.setEnum((java.util.List<java.lang.String>) strList76);
        java.math.BigDecimal bigDecimal82 = strSchema31.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator83 = null;
        io.swagger.oas.models.media.Schema schema84 = strSchema31.discriminator(discriminator83);
        schema20.setAdditionalProperties(schema84);
        java.math.BigDecimal bigDecimal86 = schema20.getMaximum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(bigDecimal86);
    }

    @Test
    public void test10126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10126");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.util.List<java.lang.String> strList14 = strSchema11.getRequired();
        strSchema11.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = strSchema11.getMinLength();
        java.lang.String str18 = strSchema11.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strSchema0.getExtensions();
        java.lang.String str21 = strSchema0.getName();
        io.swagger.oas.models.media.Schema schema23 = strSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        strSchema0.setExternalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        strSchema0.setMinimum(bigDecimal26);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test10127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10127");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        java.util.List<java.lang.String> strList13 = strSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema15 = strSchema0.pattern("");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMultipleOf(bigDecimal16);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test10128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10128");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        strSchema0.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema17.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema25.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.not(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.getNot();
        java.math.BigDecimal bigDecimal30 = null;
        schema25.setMaximum(bigDecimal30);
        schema25.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test10129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10129");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10130");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema18 = strSchema14.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema13.example((java.lang.Object) schema20);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema24.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test10131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10131");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.lang.Boolean boolean32 = strSchema29.getDeprecated();
        io.swagger.oas.models.media.Schema schema34 = strSchema29.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = schema20.not(schema36);
        schema20.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        schema47.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = schema47.addRequiredItem("");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema47.minimum(bigDecimal52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.externalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        java.lang.Integer int63 = schema62.getMaxProperties();
        java.math.BigDecimal bigDecimal64 = null;
        schema62.setMinimum(bigDecimal64);
        schema62.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema62.title("hi!");
        io.swagger.oas.models.media.Schema schema71 = schema62.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema72 = schema55.not(schema62);
        io.swagger.oas.models.media.Schema schema74 = schema72.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int76 = schema20.getMinProperties();
        java.lang.String str77 = schema20.getName();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test10132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10132");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        schema5.setNullable((java.lang.Boolean) true);
        java.lang.String str10 = schema5.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema11.exclusiveMaximum((java.lang.Boolean) false);
        schema19.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.lang.Boolean boolean24 = schema23.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        strSchema29.setNot((io.swagger.oas.models.media.Schema) strSchema34);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strSchema29.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        java.util.List<java.lang.String> strList45 = strSchema42.getRequired();
        strSchema42.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strSchema42.title("no description");
        java.lang.String str50 = schema49.getDescription();
        boolean boolean51 = schema41.equals((java.lang.Object) schema49);
        java.util.List<java.lang.String> strList52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.required(strList52);
        schema49.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema49.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = strSchema59.properties(strMap64);
        java.lang.Integer int66 = schema65.getMaxProperties();
        io.swagger.oas.models.media.Schema schema68 = schema65.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema65.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = strSchema71.getMinLength();
        java.lang.Integer int77 = strSchema71.getMaxLength();
        java.math.BigDecimal bigDecimal78 = strSchema71.getMaximum();
        io.swagger.oas.models.media.Schema schema79 = schema70.additionalProperties((io.swagger.oas.models.media.Schema) strSchema71);
        io.swagger.oas.models.media.Schema schema81 = schema79.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema49.addProperties("default", schema79);
        io.swagger.oas.models.media.Schema schema84 = schema82.readOnly((java.lang.Boolean) true);
        schema23.setExample((java.lang.Object) schema84);
        schema5.setNot(schema23);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test10133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10133");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema7.title("no description");
        java.lang.String str15 = schema14.getDescription();
        java.lang.String str16 = schema14.getType();
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema30.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str42 = strSchema41.getTitle();
        io.swagger.oas.models.media.Schema schema44 = strSchema41.format("");
        strSchema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = schema53.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray57 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        schema55.setRequired((java.util.List<java.lang.String>) strList58);
        strSchema41.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = schema40.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.externalDocs(externalDocumentation63);
        schema64.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal67 = schema64.getMaximum();
        schema14.addExtension("", (java.lang.Object) schema64);
        schema64.setMaxLength((java.lang.Integer) 100);
        schema4.setAdditionalProperties(schema64);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        strSchema73.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int78 = strSchema73.getMinLength();
        java.lang.Integer int79 = strSchema73.getMaxLength();
        java.lang.Integer int80 = strSchema73.getMinProperties();
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = strSchema73.xml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema73);
        io.swagger.oas.models.media.Schema schema85 = strSchema73.writeOnly((java.lang.Boolean) true);
        java.lang.String str86 = strSchema73.get$ref();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test10134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10134");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema20.not(schema27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str32 = strSchema31.getTitle();
        io.swagger.oas.models.media.Schema schema34 = strSchema31.format("");
        strSchema31.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray47 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        schema45.setRequired((java.util.List<java.lang.String>) strList48);
        strSchema31.setRequired((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema52 = schema30.required((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema53 = strSchema0.required((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema54.properties(strMap59);
        java.lang.Integer int61 = schema60.getMaxProperties();
        io.swagger.oas.models.media.Schema schema63 = schema60.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema65 = schema60.description("no description");
        schema53.setAdditionalProperties(schema65);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean68 = strSchema67.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = strSchema67.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = strSchema67.description("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema72 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema72.setType("hi!");
        strSchema72.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean77 = strSchema72.getDeprecated();
        io.swagger.oas.models.media.Schema schema79 = strSchema72.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema71.example((java.lang.Object) strSchema72);
        io.swagger.oas.models.media.Schema schema81 = schema53.additionalProperties(schema80);
        schema53.setWriteOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList84 = schema53.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strList84);
    }

    @Test
    public void test10135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10135");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        strSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema30 = schema27.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema27.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        java.lang.Boolean boolean36 = strSchema33.getDeprecated();
        boolean boolean38 = strSchema33.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strSchema33.multipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = strSchema33.deprecated((java.lang.Boolean) false);
        boolean boolean43 = schema27.equals((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema27.maximum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema45.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strSchema0.not(schema45);
        schema45.setDeprecated((java.lang.Boolean) false);
        java.lang.Integer int51 = schema45.getMinLength();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test10136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10136");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema18.minProperties((java.lang.Integer) 0);
        java.lang.Object obj22 = schema21.getExample();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test10137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10137");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema10.properties(strMap15);
        java.lang.String str17 = strSchema10.getType();
        schema6.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int30 = strSchema24.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema38 = strSchema24.not((io.swagger.oas.models.media.Schema) strSchema31);
        strSchema19.setExample((java.lang.Object) schema38);
        java.math.BigDecimal bigDecimal40 = null;
        schema38.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema38.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema43);
        java.lang.Boolean boolean45 = schema43.getNullable();
        io.swagger.oas.models.media.Schema schema47 = schema43.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema43.nullable((java.lang.Boolean) false);
        schema49.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test10138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10138");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema6.setExternalDocs(externalDocumentation11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema6.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test10139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10139");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strSchema11.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray24 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        schema21.setRequired((java.util.List<java.lang.String>) strList25);
        strSchema0.addExtension("", (java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        schema39.setRequired((java.util.List<java.lang.String>) strList43);
        schema21.setEnum((java.util.List<java.lang.String>) strList43);
        java.lang.Object obj47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema21.example(obj47);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strSchema49.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMaximum((java.lang.Boolean) true);
        schema57.setMaxItems((java.lang.Integer) 0);
        java.lang.String str60 = schema57.toString();
        java.util.List<java.lang.String> strList61 = schema57.getRequired();
        schema21.setRequired(strList61);
        schema21.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str60, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test10140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10140");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema6.setMinimum(bigDecimal10);
        schema6.setMaxItems((java.lang.Integer) 1);
        schema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        io.swagger.oas.models.media.Schema schema22 = strSchema18.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = schema22.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema26 = schema22.title("hi!");
        io.swagger.oas.models.media.Schema schema28 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int40 = strSchema34.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema48 = strSchema34.not((io.swagger.oas.models.media.Schema) strSchema41);
        strSchema29.setExample((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal52 = schema51.getMaximum();
        java.lang.Integer int53 = schema51.getMaxItems();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.minimum(bigDecimal54);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema51.discriminator(discriminator56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        io.swagger.oas.models.media.Schema schema62 = strSchema58.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema62.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean65 = schema64.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema64.getExternalDocs();
        java.math.BigDecimal bigDecimal67 = schema64.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setName("no description");
        io.swagger.oas.models.media.Schema schema75 = strSchema69.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema76 = schema64.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema69);
        io.swagger.oas.models.media.Schema schema78 = schema76.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema78.getProperties();
        schema51.setProperties(strMap79);
        schema28.setProperties(strMap79);
        io.swagger.oas.models.media.Schema schema82 = schema17.properties(strMap79);
        schema82.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test10141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10141");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema12 = schema6.name("");
        java.math.BigDecimal bigDecimal13 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean16 = schema15.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test10142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10142");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = strSchema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Boolean boolean31 = strSchema24.getDeprecated();
        boolean boolean32 = strSchema12.equals((java.lang.Object) strSchema24);
        java.math.BigDecimal bigDecimal33 = null;
        strSchema24.setMinimum(bigDecimal33);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test10143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10143");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema41 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema18.getNot();
        io.swagger.oas.models.media.Schema schema43 = schema18.getNot();
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema43.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj48 = schema47.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test10144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10144");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strSchema0.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test10145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10145");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setDescription("no description");
        java.math.BigDecimal bigDecimal7 = null;
        schema4.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema4.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10146");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        schema9.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList24 = schema9.getRequired();
        java.lang.Integer int25 = schema9.getMinProperties();
        io.swagger.oas.models.media.Schema schema27 = schema9.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10147");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = strSchema6.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        strSchema6.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = strSchema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [default]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10148");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema27.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema27.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema27.name("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema27.writeOnly((java.lang.Boolean) false);
        strSchema0.setExample((java.lang.Object) schema27);
        schema27.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema48 = null;
        strSchema47.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema47.xml(xML50);
        io.swagger.oas.models.media.Schema schema52 = schema27.example((java.lang.Object) strSchema47);
        java.lang.Boolean boolean53 = schema27.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema27.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test10149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10149");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        schema19.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test10150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10150");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = schema34.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema23.not(schema34);
        java.util.List<java.lang.String> strList40 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema42 = schema23.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int43 = schema23.getMinProperties();
        io.swagger.oas.models.media.XML xML44 = schema23.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(xML44);
    }

    @Test
    public void test10151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10151");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        java.lang.Boolean boolean11 = schema8.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema12.properties(strMap17);
        java.lang.Integer int19 = schema18.getMaxProperties();
        schema18.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.externalDocs(externalDocumentation22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema8.example((java.lang.Object) bigDecimal24);
        schema8.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema8.minimum(bigDecimal29);
        schema8.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10152");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        java.lang.Integer int17 = schema16.getMaxProperties();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema16.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.addProperties("default", schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema6.setMaximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema6.deprecated((java.lang.Boolean) false);
        schema6.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str33 = schema6.getDescription();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema6.minimum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test10153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10153");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        schema3.addEnumItemObject("");
        java.lang.String str6 = schema3.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema3.externalDocs(externalDocumentation7);
        io.swagger.oas.models.media.XML xML9 = null;
        schema8.setXml(xML9);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10154");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int20 = schema5.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        io.swagger.oas.models.media.Schema schema29 = strSchema21.maxItems((java.lang.Integer) 100);
        schema5.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema32 = schema29.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = schema32.getMinimum();
        io.swagger.oas.models.media.Schema schema35 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        java.util.List<java.lang.String> strList44 = strSchema41.getRequired();
        strSchema41.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int47 = strSchema41.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema55 = strSchema41.not((io.swagger.oas.models.media.Schema) strSchema48);
        strSchema36.setExample((java.lang.Object) schema55);
        strSchema36.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema60 = strSchema36.maxLength((java.lang.Integer) 0);
        java.lang.Integer int61 = schema60.getMaxProperties();
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema60.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema60.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema60.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema68 = schema32.example((java.lang.Object) (-1));
        schema68.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test10155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10155");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        strSchema26.setNot((io.swagger.oas.models.media.Schema) strSchema31);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema26.minimum(bigDecimal37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.multipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema20.addProperties("no description", schema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema20.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema20.minLength((java.lang.Integer) 1);
        schema45.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties(schema45);
        java.lang.Boolean boolean49 = schema45.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema45.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test10156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10156");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10157");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema8.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema12.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean15 = schema14.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema14.getNullable();
        strSchema0.addExtension("default", (java.lang.Object) boolean18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strSchema0.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = strSchema0.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test10158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10158");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema9);
        io.swagger.oas.models.media.Schema schema18 = schema7.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema7.properties(strMap19);
        java.util.List<java.lang.String> strList21 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema23 = schema20.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int24 = schema23.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = schema23.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema27.properties(strMap32);
        java.lang.Integer int34 = schema33.getMaxProperties();
        io.swagger.oas.models.media.Schema schema36 = schema33.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema33.name("hi!");
        java.lang.Boolean boolean39 = schema33.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema41 = schema33.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) false);
        schema23.setDefault((java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = schema23.getProperties();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test10159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10159");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.lang.Boolean boolean23 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.util.List<java.lang.String> strList32 = strSchema29.getRequired();
        strSchema29.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int35 = strSchema29.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema43 = strSchema29.not((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema24.setExample((java.lang.Object) schema43);
        strSchema12.setAdditionalProperties(schema43);
        strSchema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean48 = strSchema12.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test10160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10160");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema20.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10161");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        strSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getAdditionalProperties();
        java.lang.String str8 = strSchema0.getType();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test10162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10162");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        java.lang.Integer int4 = strSchema0.getMaxItems();
        strSchema0.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator7 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.minProperties((java.lang.Integer) 1);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test10163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10163");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        schema19.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema19.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema19.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean26 = strSchema25.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = strSchema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = strSchema25.description("");
        java.lang.Integer int30 = strSchema25.getMaxProperties();
        strSchema25.setType("default");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema25.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strSchema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        strSchema37.setNot((io.swagger.oas.models.media.Schema) strSchema42);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema37.minimum(bigDecimal48);
        schema49.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema49.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema54.properties(strMap59);
        java.lang.String str61 = strSchema54.getPattern();
        strSchema54.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema65 = strSchema54.exclusiveMinimum((java.lang.Boolean) true);
        schema65.setReadOnly((java.lang.Boolean) true);
        schema65.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        java.lang.Boolean boolean74 = strSchema71.getWriteOnly();
        strSchema71.setMaxItems((java.lang.Integer) 10);
        strSchema71.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean79 = strSchema71.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = strSchema71.externalDocs(externalDocumentation80);
        schema65.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema71);
        io.swagger.oas.models.media.Schema schema84 = schema65.description("default");
        schema84.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema88 = schema84.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema90 = schema84.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = schema90.getExtensions();
        schema49.setExtensions(strMap91);
        strSchema25.setExtensions(strMap91);
        schema24.setExtensions(strMap91);
        schema24.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema24.minimum(bigDecimal97);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test10164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10164");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema7.discriminator(discriminator35);
        strSchema7.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal39 = strSchema7.getMultipleOf();
        io.swagger.oas.models.media.Schema schema41 = strSchema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        java.lang.Boolean boolean45 = strSchema42.getDeprecated();
        java.lang.Integer int46 = strSchema42.getMaxItems();
        strSchema42.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator49 = strSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema51 = strSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = strSchema42.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema41.not((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema56.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema58.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test10165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10165");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getNullable();
        java.lang.Object obj2 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.lang.Boolean boolean8 = strSchema5.getWriteOnly();
        strSchema5.setMaxItems((java.lang.Integer) 10);
        strSchema5.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = strSchema5.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema15 = strSchema5.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean16 = strSchema5.getWriteOnly();
        io.swagger.oas.models.media.XML xML17 = strSchema5.getXml();
        io.swagger.oas.models.media.Schema schema19 = strSchema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.Integer int21 = schema20.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema28.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) (-1));
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema28.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema36.properties(strMap41);
        java.lang.Integer int43 = schema42.getMaxProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        java.util.List<java.lang.String> strList50 = strSchema47.getRequired();
        strSchema47.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int53 = strSchema47.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setName("no description");
        io.swagger.oas.models.media.Schema schema60 = strSchema54.type("");
        io.swagger.oas.models.media.Schema schema61 = strSchema47.not((io.swagger.oas.models.media.Schema) strSchema54);
        io.swagger.oas.models.media.XML xML62 = null;
        strSchema54.setXml(xML62);
        io.swagger.oas.models.media.Schema schema64 = schema45.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema54);
        schema35.setDefault((java.lang.Object) strSchema54);
        java.lang.Boolean boolean66 = strSchema54.getExclusiveMaximum();
        java.lang.String str67 = strSchema54.getFormat();
        io.swagger.oas.models.media.Schema schema69 = strSchema54.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean70 = schema20.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList71 = schema20.getEnum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test10166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10166");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = null;
        schema20.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.XML xML31 = schema20.getXml();
        io.swagger.oas.models.media.Schema schema33 = schema20.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = schema35.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        schema35.setMaximum(bigDecimal40);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(xML31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test10167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10167");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        java.lang.Boolean boolean18 = schema5.getDeprecated();
        java.lang.Integer int19 = schema5.getMaxLength();
        java.math.BigDecimal bigDecimal20 = null;
        schema5.setMaximum(bigDecimal20);
        java.lang.String str22 = schema5.getTitle();
        java.lang.Boolean boolean23 = schema5.getWriteOnly();
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema5.xml(xML24);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test10168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10168");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.description("hi!");
        schema14.set$ref("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema14.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test10169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10169");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = strSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        strSchema0.setNot(schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str26 = strSchema25.getTitle();
        strSchema25.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = strSchema25.getNullable();
        io.swagger.oas.models.media.Schema schema31 = strSchema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strSchema25.title("default");
        java.lang.String str34 = schema33.getType();
        io.swagger.oas.models.media.Schema schema36 = schema33.minLength((java.lang.Integer) 1);
        java.lang.String str37 = schema36.getType();
        java.lang.Integer int38 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        io.swagger.oas.models.media.Schema schema43 = strSchema39.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = strSchema39.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.util.List<java.lang.String> strList49 = strSchema46.getRequired();
        strSchema46.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = strSchema46.title("no description");
        java.lang.String str54 = schema53.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.externalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str58 = strSchema57.getTitle();
        io.swagger.oas.models.media.Schema schema60 = strSchema57.format("");
        strSchema57.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema63 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema63.setType("hi!");
        io.swagger.oas.models.media.Schema schema67 = strSchema63.maxLength((java.lang.Integer) 1);
        schema67.setPattern("");
        io.swagger.oas.models.media.Schema schema71 = schema67.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray75 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema71.setEnum((java.util.List<java.lang.String>) strList76);
        strSchema57.setEnum((java.util.List<java.lang.String>) strList76);
        schema56.setRequired((java.util.List<java.lang.String>) strList76);
        schema45.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema82 = schema36.required((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema84 = schema82.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setExample((java.lang.Object) schema82);
        java.lang.Integer int86 = schema82.getMinItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test10170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10170");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10171");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        schema10.setFormat("");
        schema10.setTitle("hi!");
        java.lang.Boolean boolean17 = schema10.getUniqueItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema10.setProperties(strMap18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema10.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10172");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        java.lang.Boolean boolean12 = schema6.getExclusiveMinimum();
        java.lang.Integer int13 = schema6.getMinItems();
        java.lang.Boolean boolean14 = schema6.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test10173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10173");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces37, produces38, components39);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(contentOptional40);
    }

    @Test
    public void test10174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10174");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema16.description("default");
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.Integer int29 = schema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 0);
        java.lang.String str32 = schema28.getType();
        io.swagger.oas.models.media.Schema schema34 = schema28.maxLength((java.lang.Integer) 100);
        schema21.setNot(schema28);
        java.lang.Boolean boolean36 = schema28.getNullable();
        io.swagger.oas.models.media.Schema schema38 = schema28.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str43 = schema28.getFormat();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test10175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10175");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList19 = schema11.getRequired();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema11.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema21.format("default");
        java.lang.Boolean boolean24 = schema23.getUniqueItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test10176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10176");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.name("");
        java.lang.Object obj10 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema14.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema22.description("default");
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema24);
        java.util.List<java.lang.String> strList27 = schema24.getRequired();
        schema24.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.addEnumItemObject("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test10177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10177");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        schema22.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema22.format("");
        io.swagger.oas.models.media.Schema schema28 = schema22.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10178");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema9 = schema8.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema11 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test10179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10179");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10180");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        schema16.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str20 = schema16.getPattern();
        java.math.BigDecimal bigDecimal21 = schema16.getMaximum();
        schema16.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str24 = schema16.getName();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test10181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10181");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("default");
        schema15.setType("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        java.lang.Boolean boolean25 = strSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = strSchema22.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        java.lang.Integer int35 = schema34.getMaxProperties();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMinimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema34.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema34.getAdditionalProperties();
        boolean boolean41 = strSchema22.equals((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema43 = schema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str47 = strSchema46.getTitle();
        io.swagger.oas.models.media.Schema schema49 = strSchema46.format("");
        io.swagger.oas.models.media.Schema schema51 = strSchema46.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema51.exclusiveMaximum((java.lang.Boolean) true);
        schema53.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        java.lang.Boolean boolean59 = strSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema61 = strSchema56.type("default");
        java.lang.String str62 = schema61.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        strSchema64.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = strSchema64.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = strSchema64.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema61.addProperties("no description", schema72);
        io.swagger.oas.models.media.Schema schema75 = schema61.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema75.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema78 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str79 = strSchema78.getTitle();
        io.swagger.oas.models.media.Schema schema81 = strSchema78.format("");
        strSchema78.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = strSchema78.getMaximum();
        java.math.BigDecimal bigDecimal85 = strSchema78.getMinimum();
        io.swagger.oas.models.media.Schema schema87 = strSchema78.deprecated((java.lang.Boolean) true);
        schema87.setMinLength((java.lang.Integer) (-1));
        schema77.setExample((java.lang.Object) schema87);
        io.swagger.oas.models.media.Schema schema92 = schema77.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        schema92.setDiscriminator(discriminator93);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema92.getProperties();
        io.swagger.oas.models.media.Schema schema96 = schema53.properties(strMap95);
        io.swagger.oas.models.media.Schema schema97 = schema43.properties(strMap95);
        io.swagger.oas.models.media.Schema schema98 = schema21.not(schema97);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test10182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10182");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.readOnly((java.lang.Boolean) false);
        strSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        schema13.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10183");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema8.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema12.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean15 = schema14.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema14.getNullable();
        strSchema0.addExtension("default", (java.lang.Object) boolean18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strSchema0.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxLength((java.lang.Integer) 1);
        java.lang.Integer int26 = schema25.getMinLength();
        java.lang.Boolean boolean27 = schema25.getExclusiveMaximum();
        schema25.setFormat("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test10184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10184");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList9 = strSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema11.getExtensions();
        java.lang.String str15 = schema11.getType();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test10185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10185");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        strSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.lang.Boolean boolean11 = strSchema8.getWriteOnly();
        strSchema8.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = strSchema8.$ref("hi!");
        io.swagger.oas.models.media.Schema schema17 = strSchema8.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = strSchema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema19 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema8);
        io.swagger.oas.models.media.Schema schema21 = strSchema8.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setUniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList51 = schema30.getRequired();
        schema21.setEnum(strList51);
        io.swagger.oas.models.media.Schema schema54 = schema21.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test10186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10186");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        io.swagger.oas.models.media.Schema schema30 = strSchema26.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema30.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean33 = schema32.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.discriminator(discriminator34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema32.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema32.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMaximum((java.lang.Boolean) true);
        schema25.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test10187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10187");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        strSchema17.setNot((io.swagger.oas.models.media.Schema) strSchema22);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema17.minimum(bigDecimal28);
        schema29.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema14.example((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema36 = schema29.maxProperties((java.lang.Integer) (-1));
        schema29.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test10188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10188");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str7 = schema6.get$ref();
        java.math.BigDecimal bigDecimal8 = schema6.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
    }

    @Test
    public void test10189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10189");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.discriminator(discriminator12);
        schema11.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10190");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        java.lang.Object obj9 = strSchema0.getExample();
        strSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = strSchema0.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10191");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.externalDocs(externalDocumentation10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema20.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = strSchema25.getProperties();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema25);
        java.lang.String str33 = strSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema35 = strSchema25.$ref("default");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strSchema25.multipleOf(bigDecimal36);
        java.lang.Class<?> wildcardClass38 = strSchema25.getClass();
        schema11.setDefault((java.lang.Object) strSchema25);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test10192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10192");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.getAdditionalProperties();
        strSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.maxItems((java.lang.Integer) 0);
        schema16.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema16.getReadOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test10193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10193");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.minimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        schema8.setMultipleOf(bigDecimal12);
        java.lang.Integer int14 = schema8.getMinProperties();
        java.lang.String str15 = schema8.getDescription();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test10194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10194");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList15 = schema14.getEnum();
        io.swagger.oas.annotations.media.Content[] contentArray16 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray16, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components23);
        boolean boolean25 = schema14.equals((java.lang.Object) components23);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema14.maximum(bigDecimal26);
        java.math.BigDecimal bigDecimal28 = null;
        schema14.setMinimum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(contentArray16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10195");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10196");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        schema13.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean18 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = schema13.addRequiredItem("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test10197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10197");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.minimum(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema14.getProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10198");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.lang.String str10 = schema9.get$ref();
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = strSchema13.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = schema17.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean20 = schema19.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.discriminator(discriminator21);
        schema22.setMaxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema22.addRequiredItem("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        schema9.setExample((java.lang.Object) schema31);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema34 = schema31.maxProperties((java.lang.Integer) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#/components/schemas/no description" + "'", str10, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test10199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10199");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str10 = strSchema9.getTitle();
        io.swagger.oas.models.media.Schema schema12 = strSchema9.format("");
        io.swagger.oas.models.media.Schema schema14 = strSchema9.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) true);
        schema8.setNot(schema16);
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10200");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        java.lang.String str19 = strSchema7.get$ref();
        java.lang.Boolean boolean20 = strSchema7.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema7.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10201");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema11.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.nullable((java.lang.Boolean) true);
        schema30.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test10202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10202");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema20.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test10203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10203");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema23.getAdditionalProperties();
        schema26.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test10204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10204");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.util.List<java.lang.String> strList22 = strSchema19.getRequired();
        strSchema19.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strSchema19.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema33 = strSchema19.not((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema19.multipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema18.not(schema35);
        java.lang.Integer int43 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema schema45 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList48 = schema35.getEnum();
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema35.xml(xML49);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test10205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10205");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.deprecated((java.lang.Boolean) true);
        schema12.setNullable((java.lang.Boolean) false);
        schema12.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 100);
        schema18.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10206");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.example((java.lang.Object) '#');
        java.lang.Boolean boolean11 = schema6.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema6.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) true);
        schema17.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10207");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        java.lang.Integer int17 = schema16.getMaxProperties();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema16.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.addProperties("default", schema25);
        io.swagger.oas.models.media.Schema schema27 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema25.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str32 = schema31.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test10208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10208");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema7.discriminator(discriminator35);
        strSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = strSchema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setName("no description");
        io.swagger.oas.models.media.Schema schema46 = strSchema40.type("");
        io.swagger.oas.models.media.Schema schema48 = schema46.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema46.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.lang.Boolean boolean54 = strSchema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = strSchema51.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = strSchema51.getProperties();
        schema50.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema51);
        java.lang.Integer int59 = strSchema51.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = strSchema51.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        strSchema51.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema schema64 = strSchema51.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema65 = strSchema7.not((io.swagger.oas.models.media.Schema) strSchema51);
        java.math.BigDecimal bigDecimal66 = null;
        strSchema7.setMinimum(bigDecimal66);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test10209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10209");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strSchema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strSchema30.type("default");
        io.swagger.oas.models.media.Schema schema36 = strSchema19.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        java.lang.Integer int46 = schema45.getMaxProperties();
        java.math.BigDecimal bigDecimal47 = null;
        schema45.setMinimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxProperties((java.lang.Integer) (-1));
        schema38.setExample((java.lang.Object) schema50);
        java.math.BigDecimal bigDecimal54 = schema38.getMultipleOf();
        io.swagger.oas.models.media.Schema schema56 = schema38.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema58);
        java.lang.Boolean boolean60 = schema16.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema16.discriminator(discriminator61);
        java.lang.String str63 = schema16.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test10210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10210");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema21.description("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema25.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10211");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10212");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        java.lang.String str8 = strSchema0.getPattern();
        java.math.BigDecimal bigDecimal9 = null;
        strSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.getNot();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = strSchema15.type("default");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.readOnly((java.lang.Boolean) false);
        schema20.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema20.setDiscriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = schema20.getMaximum();
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema20.xml(xML32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema20.properties(strMap34);
        java.lang.String str36 = schema20.getType();
        io.swagger.oas.models.media.Schema schema37 = schema13.additionalProperties(schema20);
        io.swagger.oas.models.media.Schema schema39 = schema13.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "default" + "'", str36, "default");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test10213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10213");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getNullable();
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema10.setExternalDocs(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test10214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10214");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema schema16 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10215");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        schema30.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema30.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) true);
        java.lang.String str54 = schema53.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.discriminator(discriminator55);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        java.lang.Integer int70 = strSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema71.type("");
        java.lang.Integer int78 = schema77.getMaxProperties();
        java.math.BigDecimal bigDecimal79 = null;
        schema77.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema77.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        schema77.setExternalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema77.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) true);
        boolean boolean89 = strSchema59.equals((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema90 = schema53.not((io.swagger.oas.models.media.Schema) strSchema59);
        java.lang.Integer int91 = strSchema59.getMaxLength();
        io.swagger.oas.models.media.Schema schema92 = schema34.addProperties("", (io.swagger.oas.models.media.Schema) strSchema59);
        io.swagger.oas.models.media.Schema schema94 = schema92.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema96 = schema92.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test10216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10216");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("hi!");
        java.lang.String str9 = schema4.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test10217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10217");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setMaxItems((java.lang.Integer) 10);
        strSchema16.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = strSchema16.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema16.externalDocs(externalDocumentation25);
        schema14.addExtension("hi!", (java.lang.Object) externalDocumentation25);
        schema14.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strSchema30.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) true);
        schema38.setMaxItems((java.lang.Integer) 0);
        java.lang.String str41 = schema38.toString();
        java.util.List<java.lang.String> strList42 = schema38.getRequired();
        io.swagger.oas.models.media.Schema schema43 = schema14.required(strList42);
        java.lang.Boolean boolean44 = schema14.getWriteOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str41, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test10218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10218");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema7.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        schema18.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema18.maxProperties((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass25 = schema24.getClass();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test10219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10219");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        schema13.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema13.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema13.maxLength((java.lang.Integer) 0);
        java.lang.String str20 = schema19.toString();
        io.swagger.oas.models.media.Schema schema22 = schema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        io.swagger.oas.models.media.Schema schema50 = strSchema46.maxLength((java.lang.Integer) 1);
        schema50.setPattern("");
        io.swagger.oas.models.media.Schema schema54 = schema50.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 10);
        schema42.setExample((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema schema59 = schema56.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema19.not(schema59);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setName("no description");
        io.swagger.oas.models.media.Schema schema68 = strSchema62.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray72 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        schema70.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.String str76 = schema70.getTitle();
        schema70.setNullable((java.lang.Boolean) true);
        schema19.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema70);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test10220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10220");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema12 = schema6.minItems((java.lang.Integer) 0);
        schema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        strSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema25);
        io.swagger.oas.models.media.Schema schema33 = strSchema19.$ref("*/*");
        io.swagger.oas.models.media.Schema schema35 = schema33.$ref("");
        io.swagger.oas.models.media.Schema schema37 = schema33.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema33.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema16.example((java.lang.Object) schema39);
        schema16.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test10221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10221");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj18 = strSchema10.getExample();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema10.discriminator(discriminator19);
        boolean boolean21 = schema9.equals((java.lang.Object) discriminator19);
        java.lang.String str22 = schema9.getType();
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        io.swagger.oas.models.media.Schema schema32 = strSchema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema9.not(schema32);
        schema35.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test10222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10222");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        java.lang.Boolean boolean5 = strSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal6 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10223");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        schema13.setTitle("hi!");
        java.lang.String str16 = schema13.toString();
        io.swagger.oas.models.media.Schema schema18 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema18.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
    }

    @Test
    public void test10224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10224");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.Integer int19 = strSchema11.getMaxLength();
        java.math.BigDecimal bigDecimal20 = null;
        strSchema11.setMultipleOf(bigDecimal20);
        java.util.List<java.lang.String> strList22 = strSchema11.getRequired();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test10225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10225");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = schema34.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema23.not(schema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        schema39.setExtensions(strMap40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.multipleOf(bigDecimal42);
        schema43.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = schema43.getTitle();
        schema43.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test10226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10226");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema0.setMinLength((java.lang.Integer) 0);
        strSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test10227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10227");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        schema13.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10228");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList12 = schema9.getEnum();
        java.lang.Boolean boolean13 = schema9.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test10229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10229");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minimum(bigDecimal9);
        java.lang.Object obj11 = strSchema0.getExample();
        java.lang.Object obj12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.example(obj12);
        io.swagger.oas.models.media.Schema schema15 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = strSchema0.getProperties();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test10230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10230");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        java.lang.Integer int10 = schema8.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test10231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10231");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema14.setXml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema14.title("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.lang.Boolean boolean26 = strSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = strSchema23.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.lang.Boolean boolean32 = strSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = strSchema29.type("default");
        strSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema29);
        strSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.Integer int45 = schema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 0);
        java.lang.String str48 = schema44.getType();
        strSchema29.setDefault((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema51 = strSchema29.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean52 = strSchema29.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        io.swagger.oas.models.media.Schema schema57 = strSchema53.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema57.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("default");
        strSchema29.setExample((java.lang.Object) schema57);
        schema22.setExample((java.lang.Object) schema57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema22.externalDocs(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test10232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10232");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.minimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.multipleOf(bigDecimal30);
        java.lang.Boolean boolean32 = schema31.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
    }

    @Test
    public void test10233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10233");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        java.lang.Boolean boolean13 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean19 = strSchema18.getUniqueItems();
        strSchema18.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strSchema22.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.description("no description");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = strSchema33.properties(strMap38);
        java.lang.String str40 = strSchema33.getPattern();
        java.lang.String str41 = strSchema33.getPattern();
        strSchema33.setMaxLength((java.lang.Integer) (-1));
        strSchema33.setDescription("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int55 = schema54.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema64 = schema62.format("no description");
        io.swagger.oas.models.media.Schema schema65 = schema54.not(schema64);
        schema65.setTitle("");
        java.lang.String str68 = schema65.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        io.swagger.oas.models.media.Schema schema73 = strSchema69.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema75 = schema73.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean76 = schema75.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = schema75.getExternalDocs();
        java.math.BigDecimal bigDecimal78 = schema75.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema80 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema80.setType("hi!");
        strSchema80.setName("no description");
        io.swagger.oas.models.media.Schema schema86 = strSchema80.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema87 = schema75.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema80);
        io.swagger.oas.models.media.Schema schema89 = schema87.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema89.getProperties();
        io.swagger.oas.models.media.Schema schema91 = schema65.properties(strMap90);
        io.swagger.oas.models.media.Schema schema92 = strSchema33.properties(strMap90);
        io.swagger.oas.models.media.Schema schema93 = schema32.properties(strMap90);
        io.swagger.oas.models.media.Schema schema94 = strSchema18.properties(strMap90);
        io.swagger.oas.models.media.Schema schema95 = schema15.properties(strMap90);
        java.lang.String str96 = schema15.getTitle();
        io.swagger.oas.models.media.Schema schema98 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNull(externalDocumentation77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test10234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10234");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        java.lang.Boolean boolean5 = strSchema0.getWriteOnly();
        java.lang.String str6 = strSchema0.getName();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        schema8.setExternalDocs(externalDocumentation9);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10235");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test10236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10236");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        schema4.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test10237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10237");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.addEnumItemObject("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test10238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10238");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strSchema19.getExternalDocs();
        java.lang.String str25 = strSchema19.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        strSchema19.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema19.discriminator(discriminator28);
        strSchema19.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema18.not((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema0.setNot(schema18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = strSchema34.getDeprecated();
        java.lang.String str40 = strSchema34.getDescription();
        io.swagger.oas.models.media.Schema schema42 = strSchema34.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema42.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema42.$ref("*/*");
        io.swagger.oas.models.media.Schema schema48 = schema42.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema42.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema18.example((java.lang.Object) schema50);
        java.lang.String str52 = schema50.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setName("no description");
        io.swagger.oas.models.media.Schema schema60 = strSchema54.type("");
        java.lang.Integer int61 = schema60.getMaxProperties();
        java.math.BigDecimal bigDecimal62 = null;
        schema60.setMinimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema60.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal66 = schema60.getMinimum();
        io.swagger.oas.models.media.Schema schema68 = schema60.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.discriminator(discriminator69);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema76 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema76.setType("hi!");
        strSchema76.setName("no description");
        strSchema71.setNot((io.swagger.oas.models.media.Schema) strSchema76);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strSchema71.minimum(bigDecimal82);
        schema83.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema83.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema88 = schema68.example((java.lang.Object) schema83);
        java.lang.String str89 = schema88.getDescription();
        io.swagger.oas.models.media.Schema schema91 = schema88.name("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema92 = schema50.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema91);
        schema50.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test10239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10239");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.description("hi!");
        schema16.setMaxProperties((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList19 = schema16.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test10240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10240");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema11.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int35 = schema30.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test10241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10241");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj24 = schema23.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test10242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10242");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        io.swagger.oas.models.media.Schema schema14 = schema11.pattern("default");
        io.swagger.oas.models.media.Schema schema16 = schema11.type("default");
        java.math.BigDecimal bigDecimal17 = schema11.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema11.uniqueItems((java.lang.Boolean) true);
        schema19.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test10243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10243");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str8 = strSchema7.getTitle();
        io.swagger.oas.models.media.Schema schema10 = strSchema7.format("");
        strSchema7.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strSchema7.getExtensions();
        java.lang.Integer int14 = strSchema7.getMinItems();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        boolean boolean17 = strSchema0.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.$ref("#/components/schemas/default");
        schema19.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test10244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10244");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        java.lang.Integer int22 = schema12.getMaxProperties();
        java.lang.Boolean boolean23 = schema12.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema12.externalDocs(externalDocumentation24);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test10245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10245");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema14.readOnly((java.lang.Boolean) false);
        schema14.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10246");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean22 = strSchema21.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = strSchema21.description("");
        schema25.setPattern("hi!");
        java.lang.Integer int28 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema schema30 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = strSchema7.not(schema25);
        schema25.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test10247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10247");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        schema33.setReadOnly((java.lang.Boolean) true);
        schema33.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        java.lang.Boolean boolean42 = strSchema39.getWriteOnly();
        strSchema39.setMaxItems((java.lang.Integer) 10);
        strSchema39.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean47 = strSchema39.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema39.externalDocs(externalDocumentation48);
        schema33.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema39);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema33.xml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean57 = schema33.getReadOnly();
        java.lang.String str58 = schema33.getDescription();
        io.swagger.oas.models.media.Schema schema59 = schema21.additionalProperties(schema33);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + true + "'", boolean57, true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str58, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test10248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10248");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema12 = schema6.uniqueItems((java.lang.Boolean) true);
        java.lang.String str13 = schema6.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        schema22.setRequired((java.util.List<java.lang.String>) strList37);
        schema6.setEnum((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema43 = schema6.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test10249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10249");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema6.addProperties("no description", schema24);
        java.lang.Boolean boolean26 = schema6.getDeprecated();
        schema6.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema6.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test10250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10250");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema9 = schema6.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        java.lang.String str12 = schema11.getDescription();
        io.swagger.oas.models.media.Schema schema14 = schema11.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema11.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10251");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        schema14.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema14.getMinItems();
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test10252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10252");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML16 = null;
        schema15.setXml(xML16);
        schema15.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema15.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test10253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10253");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        strSchema15.setMinProperties((java.lang.Integer) 10);
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strSchema15.getExtensions();
        strSchema15.setType("no description");
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema14.setProperties(strMap34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = schema51.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema44.not(schema51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str56 = strSchema55.getTitle();
        io.swagger.oas.models.media.Schema schema58 = strSchema55.format("");
        strSchema55.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = schema67.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray71 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        schema69.setRequired((java.util.List<java.lang.String>) strList72);
        strSchema55.setRequired((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema76 = schema54.required((java.util.List<java.lang.String>) strList72);
        schema14.setRequired((java.util.List<java.lang.String>) strList72);
        java.lang.Integer int78 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema80 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test10254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10254");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.example((java.lang.Object) '#');
        java.lang.Boolean boolean11 = schema6.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema6.maxItems((java.lang.Integer) 100);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj16 = schema13.getExample();
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMaximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + '#' + "'", obj16, '#');
    }

    @Test
    public void test10255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10255");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int24 = schema23.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.format("no description");
        io.swagger.oas.models.media.Schema schema34 = schema23.not(schema33);
        schema34.setTitle("");
        java.lang.String str37 = schema34.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        io.swagger.oas.models.media.Schema schema42 = strSchema38.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = schema42.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean45 = schema44.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = schema44.getExternalDocs();
        java.math.BigDecimal bigDecimal47 = schema44.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setName("no description");
        io.swagger.oas.models.media.Schema schema55 = strSchema49.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema56 = schema44.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema49);
        io.swagger.oas.models.media.Schema schema58 = schema56.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema58.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema34.properties(strMap59);
        schema12.setProperties(strMap59);
        schema12.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean66 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
    }

    @Test
    public void test10256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10256");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("no description");
        java.lang.String str27 = schema24.getFormat();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema24.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.setReadOnly((java.lang.Boolean) true);
        java.lang.String str34 = schema31.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test10257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10257");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        io.swagger.oas.models.media.Schema schema11 = strSchema7.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = strSchema7.uniqueItems((java.lang.Boolean) true);
        strSchema7.setMaxLength((java.lang.Integer) 10);
        java.lang.Integer int16 = strSchema7.getMinLength();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema7.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        io.swagger.oas.models.media.Schema schema23 = strSchema19.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema23.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean26 = schema25.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema25.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = schema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.Integer int45 = schema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 0);
        java.lang.String str48 = schema44.getType();
        java.lang.String str49 = schema44.getPattern();
        io.swagger.oas.models.media.Schema schema51 = schema44.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean53 = strSchema52.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = strSchema52.getExternalDocs();
        io.swagger.oas.models.media.Schema schema56 = strSchema52.description("");
        schema56.setPattern("hi!");
        java.lang.Integer int59 = schema56.getMinItems();
        io.swagger.oas.models.media.Schema schema61 = schema56.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList62 = schema61.getRequired();
        schema51.setRequired(strList62);
        io.swagger.oas.models.media.Schema schema64 = schema30.required(strList62);
        strSchema7.setRequired(strList62);
        io.swagger.oas.models.media.Schema schema66 = schema6.required(strList62);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test10258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10258");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        schema11.setPattern("");
        java.lang.Boolean boolean14 = schema11.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema17 = schema11.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10259");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema14.setXml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema14.title("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.lang.Boolean boolean26 = strSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = strSchema23.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.lang.Boolean boolean32 = strSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = strSchema29.type("default");
        strSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema29);
        strSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.Integer int45 = schema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.minProperties((java.lang.Integer) 0);
        java.lang.String str48 = schema44.getType();
        strSchema29.setDefault((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema51 = strSchema29.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean52 = strSchema29.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        io.swagger.oas.models.media.Schema schema57 = strSchema53.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema57.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("default");
        strSchema29.setExample((java.lang.Object) schema57);
        schema22.setExample((java.lang.Object) schema57);
        io.swagger.oas.models.media.Schema schema65 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema65.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema66);
    }

    @Test
    public void test10260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10260");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        java.lang.Integer int15 = schema14.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.properties(strMap16);
        schema14.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema14.title("default");
        schema21.setReadOnly((java.lang.Boolean) false);
        strSchema0.setNot(schema21);
        io.swagger.oas.models.media.Schema schema26 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10261");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        schema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema16.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema21.getDeprecated();
        java.lang.String str23 = schema21.getTitle();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test10262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10262");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = schema23.getMinimum();
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.addEnumItemObject("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test10263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10263");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.maximum(bigDecimal29);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10264");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema12.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean23 = strSchema22.getUniqueItems();
        strSchema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strSchema26.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema34 = strSchema26.description("no description");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema26.maximum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = strSchema37.properties(strMap42);
        java.lang.String str44 = strSchema37.getPattern();
        java.lang.String str45 = strSchema37.getPattern();
        strSchema37.setMaxLength((java.lang.Integer) (-1));
        strSchema37.setDescription("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int59 = schema58.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        io.swagger.oas.models.media.Schema schema68 = schema66.format("no description");
        io.swagger.oas.models.media.Schema schema69 = schema58.not(schema68);
        schema69.setTitle("");
        java.lang.String str72 = schema69.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        io.swagger.oas.models.media.Schema schema77 = strSchema73.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = schema77.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean80 = schema79.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = schema79.getExternalDocs();
        java.math.BigDecimal bigDecimal82 = schema79.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema84 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema84.setType("hi!");
        strSchema84.setName("no description");
        io.swagger.oas.models.media.Schema schema90 = strSchema84.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema91 = schema79.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema84);
        io.swagger.oas.models.media.Schema schema93 = schema91.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema93.getProperties();
        io.swagger.oas.models.media.Schema schema95 = schema69.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = strSchema37.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema36.properties(strMap94);
        io.swagger.oas.models.media.Schema schema98 = strSchema22.properties(strMap94);
        schema20.setProperties(strMap94);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(externalDocumentation81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test10265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10265");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        strSchema0.setPattern("");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test10266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10266");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str12 = strSchema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = strSchema11.format("");
        strSchema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray27 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        schema25.setRequired((java.util.List<java.lang.String>) strList28);
        strSchema11.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema32 = schema10.required((java.util.List<java.lang.String>) strList28);
        schema10.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = strSchema35.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.minProperties((java.lang.Integer) 0);
        java.lang.String str45 = schema41.getType();
        java.lang.String str46 = schema41.getPattern();
        schema41.setMaxProperties((java.lang.Integer) 10);
        schema41.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema41.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema10.additionalProperties(schema41);
        schema41.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test10267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10267");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal8 = strSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.multipleOf(bigDecimal11);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = strSchema0.getMultipleOf();
        java.lang.String str16 = strSchema0.toString();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10268");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema13.getNot();
        schema6.setNot(schema13);
        io.swagger.oas.models.media.Schema schema18 = schema6.name("");
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMultipleOf(bigDecimal19);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10269");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema22 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) true);
        schema24.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10270");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.xml(xML8);
        java.lang.Boolean boolean10 = schema9.getReadOnly();
        java.lang.String str11 = schema9.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int21 = schema20.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema schema31 = schema20.not(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.format("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strSchema34.properties(strMap39);
        java.lang.Integer int41 = schema40.getMaxProperties();
        io.swagger.oas.models.media.Schema schema43 = schema40.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema40.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema40.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        java.util.List<java.lang.String> strList51 = strSchema48.getRequired();
        strSchema48.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema48.title("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema48.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray72 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        schema69.setRequired((java.util.List<java.lang.String>) strList73);
        strSchema48.addExtension("", (java.lang.Object) schema69);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema77 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema77.setType("hi!");
        strSchema77.setName("no description");
        io.swagger.oas.models.media.Schema schema83 = strSchema77.type("");
        io.swagger.oas.models.media.Schema schema85 = strSchema77.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = strSchema77.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray90 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        schema87.setRequired((java.util.List<java.lang.String>) strList91);
        schema69.setEnum((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema95 = schema47.required((java.util.List<java.lang.String>) strList91);
        schema33.setRequired((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema97 = schema9.example((java.lang.Object) schema33);
        io.swagger.oas.models.media.XML xML98 = null;
        io.swagger.oas.models.media.Schema schema99 = schema97.xml(xML98);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test10271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10271");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema10.addProperties("*/*", schema22);
        schema10.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = strSchema30.getMinLength();
        java.lang.Integer int36 = strSchema30.getMaxLength();
        java.lang.Integer int37 = strSchema30.getMinProperties();
        strSchema30.setUniqueItems((java.lang.Boolean) true);
        schema29.setNot((io.swagger.oas.models.media.Schema) strSchema30);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test10272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10272");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        java.lang.Integer int24 = strSchema11.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = strSchema11.format("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema11.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = strSchema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = strSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema32.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
    }

    @Test
    public void test10273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10273");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        strSchema11.setNot((io.swagger.oas.models.media.Schema) strSchema16);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strSchema24.title("no description");
        java.lang.String str32 = schema31.getDescription();
        boolean boolean33 = schema23.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema35 = schema31.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.lang.Boolean boolean39 = strSchema36.getWriteOnly();
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator42 = strSchema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strSchema36);
        io.swagger.oas.models.media.XML xML44 = schema43.getXml();
        schema10.setDefault((java.lang.Object) schema43);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        schema10.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML44);
    }

    @Test
    public void test10274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10274");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj40 = strSchema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        strSchema34.setExample((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema51 = schema33.not((io.swagger.oas.models.media.Schema) strSchema34);
        io.swagger.oas.models.media.Schema schema53 = schema33.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test10275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10275");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        strSchema0.setMaximum(bigDecimal8);
        strSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.String str14 = schema13.getType();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
    }

    @Test
    public void test10276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10276");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema21 = schema20.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean23 = strSchema22.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strSchema22.getExternalDocs();
        io.swagger.oas.models.media.Schema schema26 = strSchema22.description("");
        java.lang.Integer int27 = strSchema22.getMaxProperties();
        strSchema22.setType("default");
        io.swagger.oas.models.media.Schema schema31 = strSchema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema31.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema31.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema20.setDefault((java.lang.Object) schema37);
        java.lang.Boolean boolean40 = schema20.getDeprecated();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test10277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10277");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("");
        schema13.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema13.get$ref();
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMultipleOf(bigDecimal17);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test10278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10278");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean11 = strSchema10.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = strSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = strSchema10.description("");
        java.lang.Integer int15 = strSchema10.getMaxProperties();
        strSchema10.setType("default");
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema6.additionalProperties(schema19);
        schema20.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test10279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10279");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema20.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = strSchema26.getMinLength();
        java.lang.Integer int32 = strSchema26.getMaxLength();
        java.math.BigDecimal bigDecimal33 = strSchema26.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema25.additionalProperties((io.swagger.oas.models.media.Schema) strSchema26);
        java.lang.Integer int35 = strSchema26.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        strSchema45.setNot((io.swagger.oas.models.media.Schema) strSchema50);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strSchema45.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.type("");
        io.swagger.oas.models.media.Schema schema66 = schema64.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema75 = strSchema67.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strSchema67.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray80 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema77.setRequired((java.util.List<java.lang.String>) strList81);
        schema66.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = strSchema45.required((java.util.List<java.lang.String>) strList81);
        strSchema36.setEnum((java.util.List<java.lang.String>) strList81);
        strSchema26.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema88 = schema13.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema90 = schema88.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema92 = schema90.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema94 = schema90.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean95 = schema90.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test10280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10280");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int17 = schema14.getMinItems();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test10281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10281");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema5.discriminator(discriminator13);
        java.math.BigDecimal bigDecimal15 = null;
        schema14.setMaximum(bigDecimal15);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test10282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10282");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.discriminator(discriminator24);
        java.lang.String str26 = schema25.getFormat();
        java.math.BigDecimal bigDecimal27 = schema25.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.properties(strMap28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean35 = strSchema30.getDeprecated();
        java.lang.String str36 = strSchema30.getDescription();
        io.swagger.oas.models.media.Schema schema38 = strSchema30.maxLength((java.lang.Integer) 0);
        java.lang.Integer int39 = strSchema30.getMaxItems();
        io.swagger.oas.models.media.Schema schema41 = strSchema30.format("");
        io.swagger.oas.models.media.Schema schema43 = strSchema30.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.setDeprecated((java.lang.Boolean) true);
        schema43.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = strSchema48.properties(strMap53);
        java.lang.Boolean boolean55 = strSchema48.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        io.swagger.oas.models.media.Schema schema60 = strSchema56.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = schema60.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean63 = schema62.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = schema62.getExternalDocs();
        java.math.BigDecimal bigDecimal65 = schema62.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema74 = schema62.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema67);
        io.swagger.oas.models.media.Schema schema76 = schema74.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema76.getProperties();
        io.swagger.oas.models.media.Schema schema78 = strSchema48.properties(strMap77);
        io.swagger.oas.models.media.Schema schema79 = schema43.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema29.properties(strMap77);
        schema80.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema84 = schema80.uniqueItems((java.lang.Boolean) false);
        schema14.setExample((java.lang.Object) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test10283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10283");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        strSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = strSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.nullable((java.lang.Boolean) false);
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray41 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        schema39.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = schema39.getTitle();
        java.lang.Boolean boolean46 = schema39.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        java.util.List<java.lang.String> strList55 = strSchema52.getRequired();
        strSchema52.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int58 = strSchema52.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema66 = strSchema52.not((io.swagger.oas.models.media.Schema) strSchema59);
        strSchema47.setExample((java.lang.Object) schema66);
        io.swagger.oas.models.media.Schema schema68 = schema39.not((io.swagger.oas.models.media.Schema) strSchema47);
        java.util.List<java.lang.String> strList69 = schema68.getRequired();
        strSchema0.setEnum(strList69);
        io.swagger.oas.models.media.Schema schema72 = strSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test10284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10284");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema schema4 = strSchema0.type("");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema11.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = strSchema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema10.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        java.lang.String str25 = schema22.getPattern();
        io.swagger.oas.models.media.Schema schema27 = schema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema30.properties(strMap35);
        java.lang.Integer int37 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema36.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = strSchema42.getMinLength();
        java.lang.Integer int48 = strSchema42.getMaxLength();
        java.math.BigDecimal bigDecimal49 = strSchema42.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema52 = strSchema42.type("default");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema54.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.multipleOf(bigDecimal57);
        java.lang.Boolean boolean59 = schema56.getDeprecated();
        io.swagger.oas.models.media.Schema schema61 = schema56.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean62 = schema56.getReadOnly();
        schema22.setNot(schema56);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
    }

    @Test
    public void test10285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10285");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("no description");
        io.swagger.oas.models.media.Schema schema28 = schema17.not(schema27);
        io.swagger.oas.models.media.Schema schema29 = schema6.not(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema6.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        io.swagger.oas.models.media.Schema schema36 = strSchema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean39 = schema38.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema38.discriminator(discriminator40);
        schema41.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema41.exclusiveMinimum((java.lang.Boolean) false);
        schema45.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        java.lang.String str51 = schema45.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator52 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = schema45.readOnly((java.lang.Boolean) false);
        schema45.setType("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test10286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10286");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) false);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "no description", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        boolean boolean25 = schema13.equals((java.lang.Object) tagSetOptional24);
        io.swagger.oas.models.media.Schema schema27 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(tagSetOptional21);
        org.junit.Assert.assertNotNull(tagSetOptional22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test10287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10287");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.lang.String str28 = schema25.toString();
        schema25.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test10288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10288");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema42 = strSchema34.nullable((java.lang.Boolean) true);
        schema31.setExample((java.lang.Object) strSchema34);
        io.swagger.oas.models.media.Schema schema45 = strSchema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList46 = strSchema34.getRequired();
        io.swagger.oas.models.media.Schema schema47 = schema18.required(strList46);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test10289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10289");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema6.nullable((java.lang.Boolean) true);
        schema6.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10290");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getExclusiveMinimum();
        schema6.addEnumItemObject("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema6.getExternalDocs();
        java.lang.String str13 = schema6.getDescription();
        java.lang.Object obj14 = schema6.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test10291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10291");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema30.maxProperties((java.lang.Integer) 1);
        java.lang.String str34 = schema30.get$ref();
        java.lang.String str35 = schema30.get$ref();
        io.swagger.oas.models.media.Schema schema37 = schema30.minProperties((java.lang.Integer) 100);
        schema37.setTitle("hi!");
        java.lang.String str40 = schema37.toString();
        io.swagger.oas.models.media.Schema schema42 = schema37.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema22.addProperties("", schema42);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str40, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test10292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10292");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        java.lang.String str11 = schema10.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        java.lang.String str19 = schema18.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        schema18.setExtensions(strMap20);
        java.lang.Boolean boolean22 = schema18.getReadOnly();
        java.util.List<java.lang.String> strList23 = schema18.getRequired();
        io.swagger.oas.models.media.Schema schema24 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema18);
        java.lang.String str25 = schema18.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test10293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10293");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test10294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10294");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = strSchema34.type("default");
        io.swagger.oas.models.media.Schema schema40 = strSchema23.not(schema39);
        java.math.BigDecimal bigDecimal41 = null;
        schema39.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema39.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setMinLength((java.lang.Integer) 10);
        boolean boolean47 = schema22.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = strSchema48.properties(strMap53);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        io.swagger.oas.models.media.Schema schema60 = strSchema56.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = schema60.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean63 = schema62.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema62.discriminator(discriminator64);
        java.lang.Boolean boolean66 = schema62.getNullable();
        strSchema48.addExtension("default", (java.lang.Object) boolean66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        strSchema48.setExternalDocs(externalDocumentation68);
        boolean boolean70 = schema39.equals((java.lang.Object) strSchema48);
        io.swagger.oas.models.media.Schema schema72 = strSchema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema72.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test10295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10295");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minItems((java.lang.Integer) 1);
        java.lang.String str10 = schema9.get$ref();
        schema9.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test10296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10296");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema13);
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema28.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test10297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10297");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.lang.Boolean boolean34 = strSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = strSchema31.type("default");
        strSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema31);
        io.swagger.oas.models.media.Schema schema38 = strSchema19.addProperties("", (io.swagger.oas.models.media.Schema) strSchema25);
        io.swagger.oas.models.media.Schema schema40 = strSchema25.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = strSchema25.getMultipleOf();
        strSchema0.setDefault((java.lang.Object) bigDecimal41);
        java.math.BigDecimal bigDecimal43 = null;
        strSchema0.setMinimum(bigDecimal43);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test10298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10298");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMinItems((java.lang.Integer) 10);
        java.lang.Integer int14 = schema11.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test10299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10299");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str23 = strSchema22.getTitle();
        io.swagger.oas.models.media.Schema schema25 = strSchema22.format("");
        strSchema22.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = strSchema22.getMaximum();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMinimum();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.deprecated((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) (-1));
        schema21.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str37 = schema21.getFormat();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test10300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10300");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getExclusiveMinimum();
        schema6.addEnumItemObject("default");
        schema6.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        java.lang.Integer int19 = strSchema15.getMaxItems();
        strSchema15.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = strSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.addExtension("", (java.lang.Object) schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema6.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10301");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.not(schema10);
        java.lang.Class<?> wildcardClass12 = schema9.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test10302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10302");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema9);
        schema16.setType("default");
        java.math.BigDecimal bigDecimal19 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema20.properties(strMap25);
        java.lang.Integer int27 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema26.description("no description");
        java.lang.Integer int32 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema26.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema34.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        io.swagger.oas.models.media.Schema schema44 = strSchema40.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema44.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean47 = schema46.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.discriminator(discriminator48);
        schema49.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema49.getExternalDocs();
        java.math.BigDecimal bigDecimal55 = null;
        schema49.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        strSchema57.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = strSchema57.properties(strMap62);
        java.lang.String str64 = strSchema57.getPattern();
        strSchema57.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = strSchema57.exclusiveMinimum((java.lang.Boolean) true);
        schema68.setReadOnly((java.lang.Boolean) true);
        schema68.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        java.lang.Boolean boolean77 = strSchema74.getWriteOnly();
        strSchema74.setMaxItems((java.lang.Integer) 10);
        strSchema74.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean82 = strSchema74.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = strSchema74.externalDocs(externalDocumentation83);
        schema68.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema74);
        io.swagger.oas.models.media.Schema schema87 = schema68.description("default");
        schema87.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema91 = schema87.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema93 = schema87.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = schema93.getExtensions();
        schema49.setExtensions(strMap94);
        schema38.setExtensions(strMap94);
        schema16.setExtensions(strMap94);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test10303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10303");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        java.lang.Boolean boolean21 = schema19.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strSchema22.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema19.not(schema35);
        schema36.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 10);
        java.lang.String str43 = schema40.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test10304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10304");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        java.lang.String str30 = schema29.getFormat();
        java.math.BigDecimal bigDecimal31 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema18.not(schema29);
        schema29.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema29.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema29.discriminator(discriminator36);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema37.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema37.getExternalDocs();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
    }

    @Test
    public void test10305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10305");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.multipleOf(bigDecimal13);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        strSchema33.setNot((io.swagger.oas.models.media.Schema) strSchema38);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strSchema33.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema27.addProperties("no description", schema45);
        schema12.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        java.lang.Boolean boolean53 = strSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema55 = strSchema50.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = strSchema50.getProperties();
        io.swagger.oas.models.media.Schema schema58 = strSchema50.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema50.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str61 = strSchema50.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean67 = strSchema62.getDeprecated();
        strSchema62.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        strSchema62.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema78 = strSchema50.required((java.util.List<java.lang.String>) strList75);
        schema45.setRequired((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema81 = schema45.exclusiveMinimum((java.lang.Boolean) false);
        schema45.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test10306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10306");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 10);
        schema19.setMaxItems((java.lang.Integer) 100);
        schema19.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test10307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10307");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        javax.ws.rs.Produces produces7 = null;
        javax.ws.rs.Produces produces8 = null;
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces7, produces8, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
    }

    @Test
    public void test10308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10308");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.String str47 = schema42.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema42.setExternalDocs(externalDocumentation50);
        java.lang.Integer int52 = schema42.getMinItems();
        io.swagger.oas.models.media.Schema schema54 = schema42.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML55 = schema42.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(xML55);
    }

    @Test
    public void test10309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10309");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.lang.Boolean boolean56 = strSchema53.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = strSchema53.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        strSchema53.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema59);
        io.swagger.oas.models.media.Schema schema67 = strSchema53.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        strSchema69.setNot((io.swagger.oas.models.media.Schema) strSchema74);
        strSchema69.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strSchema69.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        strSchema69.setProperties(strMap83);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = strSchema69.maximum(bigDecimal85);
        io.swagger.oas.models.media.Schema schema87 = strSchema53.addProperties("", (io.swagger.oas.models.media.Schema) strSchema69);
        io.swagger.oas.models.media.XML xML88 = null;
        schema87.setXml(xML88);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema87);
        java.lang.Integer int91 = schema87.getMinLength();
        io.swagger.oas.models.media.Schema schema93 = schema87.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal94 = schema93.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        schema93.setDiscriminator(discriminator95);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test10310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10310");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strSchema10.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        schema18.setMaxItems((java.lang.Integer) 0);
        java.lang.String str21 = schema18.toString();
        java.util.List<java.lang.String> strList22 = schema18.getRequired();
        io.swagger.oas.models.media.Schema schema23 = schema9.required(strList22);
        io.swagger.oas.models.media.XML xML24 = null;
        schema9.setXml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema9.maximum(bigDecimal28);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test10311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10311");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema12.setDiscriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema12.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        java.math.BigDecimal bigDecimal28 = null;
        strSchema21.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strSchema21.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema31.multipleOf(bigDecimal36);
        schema31.setMinProperties((java.lang.Integer) 1);
        schema12.setNot(schema31);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema31.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = strSchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema45.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        java.lang.Boolean boolean59 = strSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema61 = strSchema56.type("default");
        io.swagger.oas.models.media.Schema schema62 = strSchema45.not(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema61.description("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        java.lang.Boolean boolean68 = strSchema65.getWriteOnly();
        io.swagger.oas.models.media.Schema schema70 = strSchema65.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = strSchema65.getProperties();
        io.swagger.oas.models.media.Schema schema73 = strSchema65.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema65.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str76 = strSchema65.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema77 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema77.setType("hi!");
        strSchema77.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean82 = strSchema77.getDeprecated();
        strSchema77.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        strSchema77.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema93 = strSchema65.required((java.util.List<java.lang.String>) strList90);
        schema64.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema95 = schema64.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema97 = schema64.exclusiveMaximum((java.lang.Boolean) false);
        schema44.setExample((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test10312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10312");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj8 = strSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.discriminator(discriminator9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test10313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10313");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema6.minProperties((java.lang.Integer) 100);
        schema13.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema13.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema13.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema13.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        schema33.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema33.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema13.additionalProperties(schema37);
        java.lang.String str40 = schema37.toString();
        schema37.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str40, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10314");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.title("default");
        java.lang.String str9 = schema8.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema21.example((java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema23);
        schema23.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10315");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = strSchema14.required((java.util.List<java.lang.String>) strList50);
        java.lang.Integer int55 = strSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema57 = strSchema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setDefault((java.lang.Object) strSchema14);
        schema6.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test10316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10316");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema schema18 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = schema11.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test10317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10317");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        java.lang.Integer int36 = schema33.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test10318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10318");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) true);
        java.lang.Integer int27 = schema24.getMinLength();
        io.swagger.oas.models.media.Schema schema29 = schema24.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema29.getProperties();
        java.lang.String str31 = schema29.getTitle();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.xml(xML32);
        java.math.BigDecimal bigDecimal34 = schema33.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test10319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10319");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = strSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        strSchema0.setNot(schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = strSchema25.getDeprecated();
        java.lang.String str31 = strSchema25.getDescription();
        io.swagger.oas.models.media.Schema schema33 = strSchema25.maxLength((java.lang.Integer) 0);
        java.lang.Integer int34 = strSchema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema36 = strSchema25.format("");
        io.swagger.oas.models.media.Schema schema38 = strSchema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setDeprecated((java.lang.Boolean) true);
        schema38.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema22.additionalProperties(schema38);
        io.swagger.oas.models.media.Schema schema45 = schema38.nullable((java.lang.Boolean) false);
        schema45.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test10320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10320");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        java.lang.Integer int46 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema22.example((java.lang.Object) int46);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema51 = schema49.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean52 = schema51.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test10321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10321");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10322");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = strSchema29.getExternalDocs();
        java.lang.String str35 = strSchema29.getTitle();
        strSchema29.setMaxItems((java.lang.Integer) (-1));
        strSchema29.setUniqueItems((java.lang.Boolean) true);
        schema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema22.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap41);
    }

    @Test
    public void test10323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10323");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10324");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.lang.String str8 = schema6.getPattern();
        io.swagger.oas.models.media.Schema schema10 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema12.getFormat();
        java.lang.Boolean boolean14 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test10325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10325");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        strSchema0.setXml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema schema23 = schema21.format("");
        schema23.setMinItems((java.lang.Integer) 1);
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema23.discriminator(discriminator28);
        io.swagger.oas.models.media.XML xML30 = schema29.getXml();
        java.lang.Integer int31 = schema29.getMinLength();
        io.swagger.oas.models.media.Schema schema33 = schema29.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int43 = schema42.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.format("no description");
        io.swagger.oas.models.media.Schema schema53 = schema42.not(schema52);
        java.lang.Integer int54 = schema42.getMaxItems();
        java.lang.Integer int55 = schema42.getMaxLength();
        io.swagger.oas.models.media.Schema schema57 = schema42.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = strSchema58.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        io.swagger.oas.models.media.Schema schema68 = strSchema64.maxLength((java.lang.Integer) 1);
        schema68.setPattern("");
        io.swagger.oas.models.media.Schema schema72 = schema68.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray76 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema72.setEnum((java.util.List<java.lang.String>) strList77);
        strSchema58.setRequired((java.util.List<java.lang.String>) strList77);
        schema57.setRequired((java.util.List<java.lang.String>) strList77);
        schema33.setRequired((java.util.List<java.lang.String>) strList77);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList77);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = strSchema0.maximum(bigDecimal84);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test10326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10326");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int30 = schema29.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test10327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10327");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema26.setDiscriminator(discriminator31);
        java.util.List<java.lang.String> strList33 = schema26.getRequired();
        schema13.setNot(schema26);
        java.lang.String str35 = schema26.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = schema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = schema26.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema26.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test10328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10328");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        strSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test10329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10329");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.externalDocs(externalDocumentation41);
        schema42.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal45 = schema42.getMaximum();
        io.swagger.oas.models.media.Schema schema47 = schema42.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test10330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10330");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        io.swagger.oas.models.media.Schema schema63 = schema5.maxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema5.maximum(bigDecimal64);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test10331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10331");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.util.List<java.lang.String> strList22 = strSchema19.getRequired();
        strSchema19.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strSchema19.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema33 = strSchema19.not((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema19.multipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema18.not(schema35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = schema18.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test10332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10332");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = strSchema16.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema16.not((io.swagger.oas.models.media.Schema) strSchema23);
        strSchema23.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema34 = strSchema23.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema36 = strSchema23.minProperties((java.lang.Integer) 100);
        java.lang.String str37 = strSchema23.getFormat();
        io.swagger.oas.models.media.Schema schema39 = strSchema23.minProperties((java.lang.Integer) 100);
        java.lang.Integer int40 = strSchema23.getMaxLength();
        io.swagger.oas.models.media.Schema schema41 = schema13.not((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.models.media.Schema schema43 = schema41.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema41.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test10333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10333");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = strSchema25.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        strSchema34.setNot((io.swagger.oas.models.media.Schema) strSchema39);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema34.minimum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = schema53.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema64 = strSchema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strSchema56.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray69 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        schema66.setRequired((java.util.List<java.lang.String>) strList70);
        schema55.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = strSchema34.required((java.util.List<java.lang.String>) strList70);
        strSchema25.setEnum((java.util.List<java.lang.String>) strList70);
        java.math.BigDecimal bigDecimal76 = strSchema25.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        io.swagger.oas.models.media.Schema schema78 = strSchema25.discriminator(discriminator77);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = strSchema25.maximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema81 = strSchema20.additionalProperties(schema80);
        schema81.setTitle("hi!");
        java.lang.Boolean boolean84 = schema81.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema81.setDiscriminator(discriminator85);
        io.swagger.oas.models.media.Schema schema87 = schema10.additionalProperties(schema81);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test10334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10334");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.multipleOf(bigDecimal15);
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = strSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.lang.Boolean boolean24 = strSchema21.getWriteOnly();
        java.lang.Integer int25 = strSchema21.getMinItems();
        strSchema0.addExtension("", (java.lang.Object) strSchema21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean34 = schema33.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema33.getProperties();
        java.lang.Integer int36 = schema33.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema33.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema33.multipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.readOnly((java.lang.Boolean) true);
        strSchema21.setExample((java.lang.Object) true);
        strSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator46 = strSchema21.getDiscriminator();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator46);
    }

    @Test
    public void test10335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10335");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.discriminator(discriminator14);
        java.lang.Boolean boolean16 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema18 = schema11.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMaximum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10336");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean7 = schema6.getDeprecated();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema24 = strSchema10.not((io.swagger.oas.models.media.Schema) strSchema17);
        strSchema17.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = strSchema17.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean32 = strSchema31.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = strSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = strSchema31.description("");
        schema35.setPattern("hi!");
        java.lang.Integer int38 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = strSchema17.not(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Schema schema45 = schema6.not(schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        schema6.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        schema54.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = schema54.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema60 = schema54.minItems((java.lang.Integer) 0);
        schema60.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema60.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema6.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema69 = schema67.title("default");
        io.swagger.oas.models.media.Schema schema70 = schema67.getAdditionalProperties();
        java.math.BigDecimal bigDecimal71 = schema70.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal71);
    }

    @Test
    public void test10337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10337");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strSchema0.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = null;
        strSchema0.setExtensions(strMap8);
        io.swagger.oas.models.media.XML xML10 = null;
        strSchema0.setXml(xML10);
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = strSchema0.getReadOnly();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
    }

    @Test
    public void test10338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10338");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        java.lang.String str10 = schema9.getType();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.maximum(bigDecimal11);
        java.lang.String str13 = schema12.getType();
        java.lang.String str14 = schema12.getName();
        io.swagger.oas.models.media.Schema schema16 = schema12.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "default" + "'", str14, "default");
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10339");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema25.not((io.swagger.oas.models.media.Schema) strSchema32);
        io.swagger.oas.models.media.XML xML40 = null;
        strSchema32.setXml(xML40);
        io.swagger.oas.models.media.Schema schema42 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema32);
        schema13.setDefault((java.lang.Object) strSchema32);
        strSchema32.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strSchema32.getExtensions();
        io.swagger.oas.models.media.Schema schema48 = strSchema32.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test10340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10340");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        java.lang.String str7 = strSchema0.toString();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("no description");
        io.swagger.oas.models.media.Schema schema12 = schema11.getNot();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test10341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10341");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema6.setProperties(strMap10);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.xml(xML12);
        java.math.BigDecimal bigDecimal14 = null;
        schema6.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema6.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = schema17.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test10342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10342");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema7.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = schema20.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema20.setExternalDocs(externalDocumentation22);
        java.lang.String str24 = schema20.getDescription();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(xML21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test10343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10343");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema5.exclusiveMaximum((java.lang.Boolean) true);
        schema7.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema7.minLength((java.lang.Integer) 10);
        schema11.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test10344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10344");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = schema23.getMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test10345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10345");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setMaxItems((java.lang.Integer) 10);
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test10346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10346");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = strSchema0.getMultipleOf();
        java.lang.Integer int11 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema31 = schema26.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema40.setRequired((java.util.List<java.lang.String>) strList55);
        schema31.setEnum((java.util.List<java.lang.String>) strList55);
        boolean boolean60 = schema13.equals((java.lang.Object) strList55);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test10347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10347");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        strSchema16.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strSchema16.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        strSchema16.setProperties(strMap30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema16.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema34 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema0.properties(strMap35);
        java.math.BigDecimal bigDecimal37 = schema36.getMinimum();
        schema36.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.nullable((java.lang.Boolean) true);
        schema49.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema36.addProperties("#/components/schemas/default", schema49);
        io.swagger.oas.models.media.Schema schema54 = schema49.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema49.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test10348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10348");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList12 = strSchema0.getRequired();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = strSchema0.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test10349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10349");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.lang.Boolean boolean56 = strSchema53.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = strSchema53.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        strSchema53.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema59);
        io.swagger.oas.models.media.Schema schema67 = strSchema53.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        strSchema69.setNot((io.swagger.oas.models.media.Schema) strSchema74);
        strSchema69.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strSchema69.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        strSchema69.setProperties(strMap83);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = strSchema69.maximum(bigDecimal85);
        io.swagger.oas.models.media.Schema schema87 = strSchema53.addProperties("", (io.swagger.oas.models.media.Schema) strSchema69);
        io.swagger.oas.models.media.XML xML88 = null;
        schema87.setXml(xML88);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema87);
        java.lang.Boolean boolean91 = schema87.getDeprecated();
        java.lang.Boolean boolean92 = schema87.getWriteOnly();
        java.util.List<java.lang.String> strList93 = schema87.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation94 = null;
        schema87.setExternalDocs(externalDocumentation94);
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema87.discriminator(discriminator96);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation98 = null;
        schema97.setExternalDocs(externalDocumentation98);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test10350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10350");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.title("no description");
        java.math.BigDecimal bigDecimal13 = strSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema5);
        schema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema14.type("hi!");
        java.lang.String str21 = schema14.get$ref();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test10351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10351");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema6.minItems((java.lang.Integer) 1);
        schema6.setPattern("default");
        java.lang.Boolean boolean15 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema6.externalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test10352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10352");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema6.minimum(bigDecimal19);
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        schema6.setMultipleOf(bigDecimal23);
        java.lang.Boolean boolean25 = schema6.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
    }

    @Test
    public void test10353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10353");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema23.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test10354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10354");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        io.swagger.oas.models.media.Schema schema46 = strSchema29.not(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 0);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        schema27.setExample((java.lang.Object) schema48);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.maximum(bigDecimal52);
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema48.xml(xML54);
        java.lang.Boolean boolean56 = schema55.getReadOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test10355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10355");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        strSchema0.setExtensions(strMap9);
        strSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10356");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10357");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema23.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        strSchema30.setNot((io.swagger.oas.models.media.Schema) strSchema35);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema30.minimum(bigDecimal41);
        schema42.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = schema42.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema48 = schema42.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema42.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema52 = schema42.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML53 = null;
        schema42.setXml(xML53);
        schema42.setPattern("default");
        java.lang.String str57 = schema42.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema42.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        java.util.List<java.lang.String> strList63 = strSchema60.getRequired();
        strSchema60.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int66 = strSchema60.getMinLength();
        io.swagger.oas.models.media.Schema schema68 = strSchema60.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        schema68.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema68.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean73 = schema72.getExclusiveMaximum();
        java.util.List<java.lang.String> strList74 = schema72.getRequired();
        io.swagger.oas.models.media.Schema schema76 = schema72.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema59.setAdditionalProperties(schema76);
        io.swagger.oas.models.media.Schema schema78 = schema29.example((java.lang.Object) schema76);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema29.minimum(bigDecimal79);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test10358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10358");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray10 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.Integer int14 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema schema16 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10359");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.String str10 = schema6.get$ref();
        java.lang.String str11 = schema6.get$ref();
        java.math.BigDecimal bigDecimal12 = schema6.getMultipleOf();
        java.lang.Integer int13 = schema6.getMaxLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test10360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10360");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int25 = schema24.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("*/*");
        io.swagger.oas.models.media.Schema schema30 = schema24.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.discriminator(discriminator40);
        java.lang.Integer int42 = schema41.getMinItems();
        schema41.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema41.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema41.getDeprecated();
        schema41.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setDefault((java.lang.Object) schema41);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test10361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10361");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.xml(xML15);
        java.lang.Boolean boolean17 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema19 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test10362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10362");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        io.swagger.oas.models.media.XML xML19 = null;
        schema10.setXml(xML19);
        schema10.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = schema10.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema10.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema25.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test10363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10363");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema12.setMinimum(bigDecimal23);
        java.lang.Boolean boolean25 = strSchema12.getDeprecated();
        strSchema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test10364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10364");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        schema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxLength((java.lang.Integer) (-1));
        java.lang.String str26 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema28 = schema12.format("");
        java.lang.String str29 = schema28.getPattern();
        java.lang.String[] strArray32 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        boolean boolean35 = schema28.equals((java.lang.Object) tagSetOptional34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.util.List<java.lang.String> strList40 = strSchema37.getRequired();
        strSchema37.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int43 = strSchema37.getMinLength();
        java.lang.String str44 = strSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema46 = strSchema37.name("");
        java.lang.Object obj47 = strSchema37.getExample();
        io.swagger.oas.models.media.Schema schema49 = strSchema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = strSchema51.properties(strMap56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = strSchema51.discriminator(discriminator58);
        io.swagger.oas.models.media.Schema schema61 = schema59.description("default");
        java.math.BigDecimal bigDecimal62 = schema61.getMultipleOf();
        io.swagger.oas.models.media.Schema schema63 = strSchema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        io.swagger.oas.models.media.Schema schema64 = schema28.addProperties("default", schema63);
        schema63.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema68 = schema63.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int69 = schema68.getMaxLength();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test10365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10365");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        strSchema0.setTitle("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10366");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = strSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.pattern("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) true);
        java.lang.String str16 = schema15.getPattern();
        schema15.setDeprecated((java.lang.Boolean) false);
        schema15.set$ref("default");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/default" + "'", str16, "#/components/schemas/default");
    }

    @Test
    public void test10367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10367");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema5.writeOnly((java.lang.Boolean) true);
        schema5.setMaxProperties((java.lang.Integer) 0);
        schema5.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = strSchema13.maxLength((java.lang.Integer) 1);
        schema17.setPattern("");
        io.swagger.oas.models.media.Schema schema21 = schema17.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        strSchema24.setNot((io.swagger.oas.models.media.Schema) strSchema29);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema24.minimum(bigDecimal35);
        schema36.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema36.maxItems((java.lang.Integer) 10);
        schema21.setDefault((java.lang.Object) schema40);
        schema5.addExtension("hi!", (java.lang.Object) schema21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema5.getProperties();
        schema5.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema5.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test10368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10368");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        java.lang.Object obj22 = schema19.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema19.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        io.swagger.oas.models.media.Schema schema29 = strSchema25.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = strSchema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        java.util.List<java.lang.String> strList35 = strSchema32.getRequired();
        strSchema32.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema32.title("no description");
        java.lang.String str40 = schema39.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str44 = strSchema43.getTitle();
        io.swagger.oas.models.media.Schema schema46 = strSchema43.format("");
        strSchema43.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        io.swagger.oas.models.media.Schema schema57 = schema53.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray61 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema57.setEnum((java.util.List<java.lang.String>) strList62);
        strSchema43.setEnum((java.util.List<java.lang.String>) strList62);
        schema42.setRequired((java.util.List<java.lang.String>) strList62);
        schema31.setRequired((java.util.List<java.lang.String>) strList62);
        schema19.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema70 = schema19.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int71 = schema70.getMaxProperties();
        io.swagger.oas.models.media.Schema schema73 = schema70.readOnly((java.lang.Boolean) true);
        schema70.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test10369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10369");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        java.lang.Boolean boolean15 = schema6.getReadOnly();
        java.lang.Boolean boolean16 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray30 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema27.setRequired((java.util.List<java.lang.String>) strList31);
        java.util.List<java.lang.String> strList34 = schema27.getEnum();
        java.lang.String str35 = schema27.toString();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.lang.Boolean boolean39 = strSchema36.getDeprecated();
        io.swagger.oas.models.media.Schema schema41 = strSchema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        io.swagger.oas.models.media.Schema schema48 = strSchema44.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = strSchema44.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.util.List<java.lang.String> strList54 = strSchema51.getRequired();
        strSchema51.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema51.title("no description");
        java.lang.String str59 = schema58.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema58.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str63 = strSchema62.getTitle();
        io.swagger.oas.models.media.Schema schema65 = strSchema62.format("");
        strSchema62.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        io.swagger.oas.models.media.Schema schema72 = strSchema68.maxLength((java.lang.Integer) 1);
        schema72.setPattern("");
        io.swagger.oas.models.media.Schema schema76 = schema72.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray80 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema76.setEnum((java.util.List<java.lang.String>) strList81);
        strSchema62.setEnum((java.util.List<java.lang.String>) strList81);
        schema61.setRequired((java.util.List<java.lang.String>) strList81);
        schema50.setRequired((java.util.List<java.lang.String>) strList81);
        schema41.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema88 = schema27.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema89 = schema6.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema91 = schema89.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj92 = schema91.getExample();
        io.swagger.oas.models.media.Discriminator discriminator93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema91.discriminator(discriminator93);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str35, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test10370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10370");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        java.lang.Object obj22 = schema19.getExample();
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema27 = strSchema25.maxItems((java.lang.Integer) 100);
        strSchema25.setDescription("*/*");
        strSchema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema19.example((java.lang.Object) strSchema25);
        io.swagger.oas.models.media.Schema schema36 = strSchema25.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test10371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10371");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minimum(bigDecimal13);
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = strSchema0.getName();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        strSchema0.setDiscriminator(discriminator18);
        strSchema0.setFormat("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = strSchema0.$ref("default");
        io.swagger.oas.models.media.Schema schema25 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMinimum(bigDecimal26);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test10372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10372");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        java.lang.String str7 = schema4.getPattern();
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        schema4.setMaxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema4.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int19 = strSchema13.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        strSchema13.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 1);
        schema23.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.maxProperties((java.lang.Integer) 100);
        schema35.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema23.addProperties("*/*", schema35);
        schema23.setMinItems((java.lang.Integer) 10);
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean48 = strSchema43.getDeprecated();
        java.lang.String str49 = strSchema43.getDescription();
        io.swagger.oas.models.media.Schema schema51 = strSchema43.maxLength((java.lang.Integer) 0);
        java.lang.Integer int52 = schema51.getMinItems();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema51.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema23.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.xml(xML56);
        schema4.setDefault((java.lang.Object) schema55);
        java.math.BigDecimal bigDecimal59 = null;
        schema4.setMultipleOf(bigDecimal59);
        java.math.BigDecimal bigDecimal61 = schema4.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal61);
    }

    @Test
    public void test10373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10373");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        schema36.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = strSchema15.required((java.util.List<java.lang.String>) strList51);
        strSchema7.setEnum((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        io.swagger.oas.models.media.Schema schema61 = strSchema57.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = strSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator64 = strSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema65 = strSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strSchema57);
        java.util.List<java.lang.String> strList66 = strSchema57.getEnum();
        io.swagger.oas.models.media.Schema schema68 = strSchema57.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test10374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10374");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        io.swagger.oas.models.media.Schema schema50 = strSchema46.maxLength((java.lang.Integer) 1);
        schema50.setPattern("");
        io.swagger.oas.models.media.Schema schema54 = schema50.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 10);
        schema42.setExample((java.lang.Object) schema56);
        schema19.setNot(schema56);
        io.swagger.oas.models.media.Schema schema60 = schema19.title("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = schema19.getExternalDocs();
        schema19.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
    }

    @Test
    public void test10375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10375");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        strSchema17.setNot((io.swagger.oas.models.media.Schema) strSchema22);
        java.lang.String str28 = strSchema17.getDescription();
        strSchema17.setDescription("default");
        io.swagger.oas.models.media.Schema schema31 = strSchema7.not((io.swagger.oas.models.media.Schema) strSchema17);
        io.swagger.oas.models.media.Schema schema33 = strSchema7.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test10376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10376");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.readOnly((java.lang.Boolean) true);
        schema10.setUniqueItems((java.lang.Boolean) true);
        schema10.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10377");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        java.lang.Integer int17 = schema16.getMaxProperties();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema16.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.addProperties("default", schema25);
        java.lang.String str27 = schema26.getPattern();
        io.swagger.oas.models.media.Schema schema29 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test10378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10378");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = strSchema10.getMaximum();
        java.math.BigDecimal bigDecimal17 = strSchema10.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strSchema20.getExternalDocs();
        java.lang.String str26 = strSchema20.getTitle();
        strSchema20.setName("default");
        strSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray41 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        schema39.setRequired((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = strSchema20.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema46 = schema19.required((java.util.List<java.lang.String>) strList42);
        schema9.setEnum((java.util.List<java.lang.String>) strList42);
        schema9.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test10379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10379");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.discriminator(discriminator44);
        schema42.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.Integer int59 = strSchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        java.lang.Integer int67 = schema66.getMaxProperties();
        java.math.BigDecimal bigDecimal68 = null;
        schema66.setMinimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema66.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema66.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) true);
        boolean boolean78 = strSchema48.equals((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema79 = schema42.not((io.swagger.oas.models.media.Schema) strSchema48);
        java.lang.Boolean boolean80 = strSchema48.getWriteOnly();
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema48);
        io.swagger.oas.models.media.Schema schema83 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) true);
        schema85.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test10380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10380");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strSchema11.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray24 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        schema21.setRequired((java.util.List<java.lang.String>) strList25);
        strSchema0.addExtension("", (java.lang.Object) schema21);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema21.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema21.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        schema32.setExtensions(strMap33);
        java.lang.Class<?> wildcardClass35 = schema32.getClass();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test10381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10381");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        java.lang.Integer int9 = schema6.getMinLength();
        java.util.List<java.lang.String> strList10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.required(strList10);
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test10382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10382");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMaxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList17 = schema14.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test10383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10383");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test10384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10384");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.String str47 = schema42.getFormat();
        schema42.setMaxLength((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = schema42.getProperties();
        io.swagger.oas.models.media.Schema schema52 = schema42.readOnly((java.lang.Boolean) false);
        java.lang.String str53 = schema52.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test10385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10385");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int27 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema schema37 = schema26.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.format("default");
        io.swagger.oas.models.media.Schema schema41 = schema36.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal42 = null;
        schema41.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.xml(xML44);
        schema10.setAdditionalProperties(schema45);
        schema45.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema45.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test10386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10386");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList9 = strSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10387");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10388");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema schema34 = strSchema17.not(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        java.lang.Integer int44 = schema43.getMaxProperties();
        java.math.BigDecimal bigDecimal45 = null;
        schema43.setMinimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema43.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) (-1));
        schema36.setExample((java.lang.Object) schema48);
        java.math.BigDecimal bigDecimal52 = schema36.getMultipleOf();
        io.swagger.oas.models.media.Schema schema54 = schema36.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = strSchema0.additionalProperties(schema36);
        java.lang.Boolean boolean56 = schema36.getUniqueItems();
        java.math.BigDecimal bigDecimal57 = schema36.getMaximum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(bigDecimal57);
    }

    @Test
    public void test10389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10389");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str16 = strSchema15.getTitle();
        io.swagger.oas.models.media.Schema schema18 = strSchema15.format("");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema18.readOnly((java.lang.Boolean) false);
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema18);
        schema18.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema18.type("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test10390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10390");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.xml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.uniqueItems((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getDescription();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test10391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10391");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema6.minimum(bigDecimal19);
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.multipleOf(bigDecimal23);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema24.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test10392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10392");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces35, produces36, components37);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional38);
    }

    @Test
    public void test10393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10393");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = strSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = strSchema14.required((java.util.List<java.lang.String>) strList50);
        strSchema5.setEnum((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal56 = strSchema5.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema5.discriminator(discriminator57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema5.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema61 = strSchema0.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setName("no description");
        io.swagger.oas.models.media.Schema schema68 = strSchema62.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int71 = schema70.getMinItems();
        io.swagger.oas.models.media.Schema schema72 = schema61.example((java.lang.Object) int71);
        java.math.BigDecimal bigDecimal73 = null;
        schema61.setMaximum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = schema61.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test10394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10394");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML18 = null;
        schema17.setXml(xML18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        java.lang.Integer int28 = schema27.getMaxProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema27.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema27.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema27.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema17.addProperties("default", schema36);
        schema36.set$ref("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema0.example((java.lang.Object) schema36);
        java.lang.Boolean boolean41 = schema36.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema36.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.$ref("default");
        io.swagger.oas.models.media.Schema schema60 = schema58.$ref("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        java.util.List<java.lang.String> strList63 = schema62.getRequired();
        schema43.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema62.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strMap65);
    }

    @Test
    public void test10395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10395");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.maximum(bigDecimal12);
        java.util.List<java.lang.String> strList14 = null;
        schema10.setRequired(strList14);
        io.swagger.oas.models.media.Schema schema17 = schema10.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema17.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = strSchema19.properties(strMap24);
        java.lang.String str26 = strSchema19.getPattern();
        strSchema19.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = strSchema19.exclusiveMinimum((java.lang.Boolean) true);
        schema30.setReadOnly((java.lang.Boolean) true);
        schema30.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.lang.Boolean boolean39 = strSchema36.getWriteOnly();
        strSchema36.setMaxItems((java.lang.Integer) 10);
        strSchema36.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = strSchema36.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema36.externalDocs(externalDocumentation45);
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema36);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema30.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setAdditionalProperties(schema30);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test10396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10396");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean17 = schema16.getNullable();
        schema16.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
    }

    @Test
    public void test10397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10397");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        io.swagger.oas.models.media.Schema schema32 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        java.lang.Integer int34 = schema32.getMaxProperties();
        schema32.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema32.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = schema38.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test10398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10398");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList5 = null;
        strSchema0.setEnum(strList5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        java.lang.Integer int14 = schema13.getMaxProperties();
        java.math.BigDecimal bigDecimal15 = null;
        schema13.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema13.maxProperties((java.lang.Integer) 1);
        schema18.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema23 = schema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = strSchema0.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean28 = schema27.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema30 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10399");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = strSchema24.getMinLength();
        java.lang.Integer int30 = strSchema24.getMaxLength();
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema24);
        io.swagger.oas.models.media.Schema schema33 = schema23.deprecated((java.lang.Boolean) false);
        java.lang.String str34 = schema23.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "no description" + "'", str34, "no description");
    }

    @Test
    public void test10400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10400");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        schema24.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10401");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = schema11.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        strSchema19.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema23 = strSchema19.type("");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = null;
        strSchema19.setExtensions(strMap24);
        strSchema19.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema19.maximum(bigDecimal28);
        schema11.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.String str31 = strSchema19.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str31, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10402");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.Boolean boolean47 = schema42.getDeprecated();
        io.swagger.oas.models.media.Schema schema49 = schema42.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = strSchema51.getMinLength();
        java.lang.Integer int57 = strSchema51.getMaxLength();
        java.lang.Integer int58 = strSchema51.getMinProperties();
        strSchema51.setNullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = strSchema51.getProperties();
        schema42.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema51);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test10403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10403");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        strSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.discriminator(discriminator9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Integer int13 = schema10.getMinItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test10404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10404");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test10405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10405");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
    }

    @Test
    public void test10406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10406");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        io.swagger.oas.models.media.Schema schema46 = strSchema29.not(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 0);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        schema27.setExample((java.lang.Object) schema48);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.maximum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setName("no description");
        io.swagger.oas.models.media.Schema schema60 = strSchema54.type("");
        schema60.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema60.addRequiredItem("");
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema60.minimum(bigDecimal65);
        schema66.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema66.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema53.additionalProperties(schema66);
        schema66.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test10407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10407");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test10408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10408");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema33.setDiscriminator(discriminator34);
        java.lang.String str36 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema33.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = schema33.getMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test10409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10409");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.minProperties((java.lang.Integer) 10);
        java.lang.String str13 = schema12.toString();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMultipleOf(bigDecimal14);
        schema12.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10410");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema27.properties(strMap32);
        strSchema27.setMaxLength((java.lang.Integer) 0);
        strSchema27.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.String str45 = strSchema38.getPattern();
        strSchema38.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = strSchema38.exclusiveMinimum((java.lang.Boolean) true);
        schema49.setReadOnly((java.lang.Boolean) true);
        schema49.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        java.lang.Boolean boolean58 = strSchema55.getWriteOnly();
        strSchema55.setMaxItems((java.lang.Integer) 10);
        strSchema55.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean63 = strSchema55.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = strSchema55.externalDocs(externalDocumentation64);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema55);
        io.swagger.oas.models.media.Schema schema68 = schema49.description("default");
        schema68.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema72 = schema68.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema74 = schema68.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        strSchema27.setExtensions(strMap75);
        schema26.setExtensions(strMap75);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema26.properties(strMap78);
        schema79.setWriteOnly((java.lang.Boolean) false);
        schema79.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        schema79.setDiscriminator(discriminator84);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test10411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10411");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.Boolean boolean13 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        schema15.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Schema schema21 = schema15.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test10412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10412");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = strSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray49 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        schema46.setRequired((java.util.List<java.lang.String>) strList50);
        schema35.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = strSchema14.required((java.util.List<java.lang.String>) strList50);
        strSchema5.setEnum((java.util.List<java.lang.String>) strList50);
        java.math.BigDecimal bigDecimal56 = strSchema5.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema5.discriminator(discriminator57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema5.maximum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema61 = strSchema0.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setName("no description");
        io.swagger.oas.models.media.Schema schema68 = strSchema62.type("");
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int71 = schema70.getMinItems();
        io.swagger.oas.models.media.Schema schema72 = schema61.example((java.lang.Object) int71);
        java.math.BigDecimal bigDecimal73 = null;
        schema61.setMaximum(bigDecimal73);
        java.math.BigDecimal bigDecimal75 = schema61.getMaximum();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal75);
    }

    @Test
    public void test10413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10413");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        java.lang.String str7 = strSchema0.toString();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("no description");
        java.lang.String str12 = schema11.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test10414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10414");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        strSchema11.setMaxItems((java.lang.Integer) 10);
        strSchema11.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = strSchema11.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean22 = strSchema11.getNullable();
        io.swagger.oas.models.media.Schema schema23 = strSchema11.getAdditionalProperties();
        strSchema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = strSchema26.getDeprecated();
        java.lang.String str32 = strSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema34 = strSchema26.maxLength((java.lang.Integer) 0);
        java.lang.Integer int35 = strSchema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = strSchema26.format("");
        io.swagger.oas.models.media.Schema schema39 = strSchema26.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setDeprecated((java.lang.Boolean) true);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = strSchema44.properties(strMap49);
        java.lang.Boolean boolean51 = strSchema44.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        io.swagger.oas.models.media.Schema schema56 = strSchema52.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema56.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean59 = schema58.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = schema58.getExternalDocs();
        java.math.BigDecimal bigDecimal61 = schema58.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema63 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema63.setType("hi!");
        strSchema63.setName("no description");
        io.swagger.oas.models.media.Schema schema69 = strSchema63.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema70 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema63);
        io.swagger.oas.models.media.Schema schema72 = schema70.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema72.getProperties();
        io.swagger.oas.models.media.Schema schema74 = strSchema44.properties(strMap73);
        io.swagger.oas.models.media.Schema schema75 = schema39.properties(strMap73);
        io.swagger.oas.models.media.Schema schema76 = strSchema11.properties(strMap73);
        io.swagger.oas.models.media.Schema schema77 = strSchema0.example((java.lang.Object) strMap73);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema78 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema78.setType("hi!");
        java.lang.Boolean boolean81 = strSchema78.getWriteOnly();
        io.swagger.oas.models.media.Schema schema83 = strSchema78.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = strSchema78.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        strSchema78.setExternalDocs(externalDocumentation85);
        io.swagger.oas.models.media.Schema schema88 = strSchema78.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList89 = strSchema78.getRequired();
        schema77.setRequired(strList89);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strList89);
    }

    @Test
    public void test10415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10415");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema13.getTitle();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10416");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean13 = schema6.getExclusiveMinimum();
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema6.getExtensions();
        java.lang.String str17 = schema6.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test10417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10417");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        schema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = schema12.getExclusiveMaximum();
        java.util.List<java.lang.String> strList14 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema16.getReadOnly();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + true + "'", boolean19, true);
    }

    @Test
    public void test10418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10418");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema8.writeOnly((java.lang.Boolean) false);
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.math.BigDecimal bigDecimal42 = null;
        schema40.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema40.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema40.getAdditionalProperties();
        boolean boolean47 = strSchema28.equals((java.lang.Object) schema40);
        strSchema28.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = strSchema28.deprecated((java.lang.Boolean) false);
        schema51.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema51.deprecated((java.lang.Boolean) true);
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.Boolean boolean59 = schema24.getUniqueItems();
        java.lang.Boolean boolean60 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        io.swagger.oas.models.media.Schema schema65 = strSchema61.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema67 = schema65.example((java.lang.Object) (short) 0);
        schema65.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema65.maxProperties((java.lang.Integer) 0);
        schema65.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema75 = schema65.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema24.example((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test10419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10419");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test10420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10420");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        java.lang.Boolean boolean17 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        java.lang.Boolean boolean23 = strSchema20.getWriteOnly();
        java.lang.Integer int24 = strSchema20.getMinProperties();
        strSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        schema16.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = strSchema34.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        strSchema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema40);
        io.swagger.oas.models.media.Schema schema47 = strSchema28.addProperties("", (io.swagger.oas.models.media.Schema) strSchema34);
        io.swagger.oas.models.media.Schema schema49 = strSchema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema16.example((java.lang.Object) strSchema34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int60 = schema59.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = schema67.format("no description");
        io.swagger.oas.models.media.Schema schema70 = schema59.not(schema69);
        io.swagger.oas.models.media.Schema schema72 = schema69.format("default");
        io.swagger.oas.models.media.Schema schema74 = schema69.exclusiveMinimum((java.lang.Boolean) false);
        schema69.setFormat("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema34.example((java.lang.Object) "no description");
        java.lang.Integer int78 = schema77.getMaxItems();
        java.lang.Class<?> wildcardClass79 = schema77.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test10421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10421");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.getNot();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strSchema0.minimum(bigDecimal14);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test10422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10422");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        java.lang.Integer int14 = schema9.getMinItems();
        java.lang.Integer int15 = schema9.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema16.title("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema16.minProperties((java.lang.Integer) 1);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean28 = strSchema27.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = strSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = strSchema27.description("");
        java.lang.Integer int32 = strSchema27.getMaxProperties();
        strSchema27.setType("default");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema27.minimum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema27.discriminator(discriminator37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        strSchema27.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema27.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema25.example((java.lang.Object) strSchema27);
        strSchema27.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str49 = schema9.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        java.lang.Boolean boolean53 = strSchema50.getWriteOnly();
        strSchema50.setMaxItems((java.lang.Integer) 10);
        strSchema50.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = strSchema50.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema60 = strSchema50.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean61 = strSchema50.getWriteOnly();
        java.lang.Boolean boolean62 = strSchema50.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema64 = strSchema50.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = schema64.minProperties((java.lang.Integer) 0);
        schema9.setExample((java.lang.Object) schema66);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test10423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10423");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test10424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10424");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10425");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strSchema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str18 = strSchema17.getTitle();
        io.swagger.oas.models.media.Schema schema20 = strSchema17.format("");
        io.swagger.oas.models.media.Schema schema22 = strSchema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema16.example((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxProperties((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList26 = null;
        schema25.setEnum(strList26);
        io.swagger.oas.models.media.Schema schema28 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema25.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test10426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10426");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        java.lang.Boolean boolean6 = schema4.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema10.format("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema10.minItems((java.lang.Integer) 0);
        schema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10427");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int19 = strSchema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema13.not((io.swagger.oas.models.media.Schema) strSchema20);
        java.lang.Boolean boolean28 = strSchema13.getUniqueItems();
        java.lang.Boolean boolean29 = strSchema13.getNullable();
        io.swagger.oas.models.media.Schema schema31 = strSchema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strSchema13.maxItems((java.lang.Integer) (-1));
        strSchema13.setType("default");
        io.swagger.oas.models.media.Discriminator discriminator36 = strSchema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean38 = strSchema37.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = strSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema41 = strSchema37.description("");
        java.lang.Boolean boolean42 = schema41.getUniqueItems();
        schema41.setTitle("");
        io.swagger.oas.models.media.Schema schema45 = strSchema13.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema schema47 = strSchema13.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema49.properties(strMap54);
        java.lang.Integer int56 = schema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 0);
        java.lang.String str59 = schema55.getType();
        schema55.setReadOnly((java.lang.Boolean) true);
        schema55.set$ref("");
        java.lang.String str64 = schema55.getName();
        io.swagger.oas.models.media.Schema schema66 = schema55.exclusiveMaximum((java.lang.Boolean) false);
        schema55.setNullable((java.lang.Boolean) true);
        schema47.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) true);
        boolean boolean70 = strSchema0.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test10428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10428");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10429");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = strSchema16.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema16.not((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.models.media.XML xML31 = null;
        strSchema23.setXml(xML31);
        strSchema23.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = schema41.minProperties((java.lang.Integer) (-1));
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema41.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema49.properties(strMap54);
        java.lang.Integer int56 = schema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        java.util.List<java.lang.String> strList63 = strSchema60.getRequired();
        strSchema60.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int66 = strSchema60.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema74 = strSchema60.not((io.swagger.oas.models.media.Schema) strSchema67);
        io.swagger.oas.models.media.XML xML75 = null;
        strSchema67.setXml(xML75);
        io.swagger.oas.models.media.Schema schema77 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema67);
        schema48.setDefault((java.lang.Object) strSchema67);
        strSchema23.setDefault((java.lang.Object) strSchema67);
        schema15.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal83 = null;
        schema15.setMinimum(bigDecimal83);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test10430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10430");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        schema19.setTitle("*/*");
        java.lang.Object obj22 = schema19.getExample();
        io.swagger.oas.models.media.Schema schema24 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10431");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test10432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10432");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        io.swagger.oas.models.media.XML xML19 = null;
        schema10.setXml(xML19);
        schema10.setReadOnly((java.lang.Boolean) false);
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema10.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema10.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test10433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10433");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema6.getExternalDocs();
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema11);
        schema18.setReadOnly((java.lang.Boolean) true);
        java.lang.String str21 = schema18.getDescription();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test10434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10434");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = strSchema0.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test10435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10435");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        strSchema17.setNot((io.swagger.oas.models.media.Schema) strSchema22);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema17.minimum(bigDecimal28);
        schema29.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema14.example((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 1);
        schema34.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema34.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = strSchema41.getDeprecated();
        io.swagger.oas.models.media.Schema schema48 = strSchema41.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strSchema49.properties(strMap54);
        java.lang.Integer int56 = schema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema59 = schema48.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema58.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema61.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.xml(xML64);
        boolean boolean66 = schema34.equals((java.lang.Object) schema65);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test10436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10436");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.description("default");
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema8.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList30 = schema25.getRequired();
        io.swagger.oas.models.media.Schema schema32 = schema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.externalDocs(externalDocumentation34);
        schema32.setTitle("#/components/schemas/default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        io.swagger.oas.models.media.Schema schema44 = strSchema38.type("");
        io.swagger.oas.models.media.Schema schema46 = schema44.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int47 = schema46.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = schema54.format("no description");
        io.swagger.oas.models.media.Schema schema57 = schema46.not(schema56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema56.multipleOf(bigDecimal58);
        java.lang.String str60 = schema59.getTitle();
        io.swagger.oas.models.media.Schema schema62 = schema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema62.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        io.swagger.oas.models.media.Schema schema68 = strSchema64.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema70 = schema68.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean71 = schema70.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = schema70.getProperties();
        io.swagger.oas.models.media.Schema schema74 = schema70.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema75 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema75.setType("hi!");
        io.swagger.oas.models.media.Schema schema79 = strSchema75.maxLength((java.lang.Integer) 1);
        schema79.setPattern("");
        io.swagger.oas.models.media.Schema schema83 = schema79.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray87 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        schema83.setEnum((java.util.List<java.lang.String>) strList88);
        schema74.setEnum((java.util.List<java.lang.String>) strList88);
        schema62.setEnum((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema93 = schema32.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation94 = schema93.getExternalDocs();
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema93.multipleOf(bigDecimal95);
        io.swagger.oas.models.media.Schema schema97 = schema14.not(schema96);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(externalDocumentation94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test10437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10437");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema13.discriminator(discriminator20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        strSchema13.setProperties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strSchema13.setDiscriminator(discriminator24);
        io.swagger.oas.models.media.Schema schema27 = strSchema13.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema13.minimum(bigDecimal28);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) bigDecimal28);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test10438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10438");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str15 = strSchema14.getTitle();
        io.swagger.oas.models.media.Schema schema17 = strSchema14.format("");
        io.swagger.oas.models.media.Schema schema19 = strSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        java.lang.Integer int29 = schema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema32.properties(strMap37);
        java.lang.String str39 = strSchema32.getType();
        schema28.setNot((io.swagger.oas.models.media.Schema) strSchema32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.util.List<java.lang.String> strList49 = strSchema46.getRequired();
        strSchema46.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int52 = strSchema46.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema60 = strSchema46.not((io.swagger.oas.models.media.Schema) strSchema53);
        strSchema41.setExample((java.lang.Object) schema60);
        java.math.BigDecimal bigDecimal62 = null;
        schema60.setMultipleOf(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema60.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema66 = schema28.example((java.lang.Object) schema65);
        io.swagger.oas.models.media.Schema schema67 = schema21.example((java.lang.Object) schema28);
        java.lang.Integer int68 = schema67.getMinItems();
        io.swagger.oas.models.media.Schema schema70 = schema67.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal71 = null;
        schema67.setMinimum(bigDecimal71);
        schema11.setNot(schema67);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test10439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10439");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        strSchema0.setExternalDocs(externalDocumentation6);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
    }

    @Test
    public void test10440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10440");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        schema10.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10441");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        java.lang.Integer int35 = strSchema7.getMinLength();
        strSchema7.setTitle("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = strSchema7.getDefault();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: Cannot cast io.swagger.oas.models.media.Schema to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test10442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10442");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.title("default");
        io.swagger.oas.models.media.Schema schema10 = schema8.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema10.setExternalDocs(externalDocumentation11);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test10443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10443");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema19.format("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema23.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.minimum(bigDecimal28);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test10444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10444");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema8 = schema4.$ref("default");
        schema8.setType("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema13.setExtensions(strMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test10445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10445");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = strSchema12.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strSchema12.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(externalDocumentation24);
    }

    @Test
    public void test10446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10446");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.Boolean boolean6 = strSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.format("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test10447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10447");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.util.List<java.lang.String> strList20 = strSchema17.getRequired();
        strSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = strSchema17.getDeprecated();
        java.math.BigDecimal bigDecimal24 = strSchema17.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = strSchema17.$ref("no description");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.multipleOf(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 0);
        java.lang.String str35 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strSchema0.additionalProperties(schema34);
        schema34.addEnumItemObject("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = schema34.getMultipleOf();
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "#/components/schemas/no description" + "'", str35, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test10448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10448");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema9.getEnum();
        schema9.setName("hi!");
        schema9.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test10449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10449");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = schema6.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10450");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        schema8.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = schema8.writeOnly((java.lang.Boolean) true);
        schema13.setMaxLength((java.lang.Integer) 1);
        java.lang.String str16 = schema13.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test10451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10451");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setFormat("no description");
        schema18.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema18.xml(xML28);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.discriminator(discriminator30);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.discriminator(discriminator32);
        java.math.BigDecimal bigDecimal34 = schema33.getMultipleOf();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test10452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10452");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.addRequiredItem("");
        strSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test10453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10453");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema14 = strSchema12.maxItems((java.lang.Integer) 100);
        schema14.setTitle("");
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema11.additionalProperties(schema18);
        java.math.BigDecimal bigDecimal20 = schema11.getMinimum();
        schema11.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test10454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10454");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str20 = strSchema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = strSchema19.format("");
        strSchema19.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema33.setRequired((java.util.List<java.lang.String>) strList36);
        strSchema19.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema18.required((java.util.List<java.lang.String>) strList36);
        schema40.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.maxItems((java.lang.Integer) (-1));
        schema46.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test10455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10455");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        strSchema0.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = strSchema0.get$ref();
        java.lang.Integer int10 = strSchema0.getMinProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test10456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10456");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema12.setMinimum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema12.minimum(bigDecimal25);
        strSchema12.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: #\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test10457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10457");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        java.lang.Integer int22 = schema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.minProperties((java.lang.Integer) 0);
        java.lang.String str25 = schema21.getType();
        strSchema6.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = strSchema6.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean29 = strSchema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        strSchema30.setNot((io.swagger.oas.models.media.Schema) strSchema35);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema30.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        java.util.List<java.lang.String> strList46 = strSchema43.getRequired();
        strSchema43.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = strSchema43.title("no description");
        java.lang.String str51 = schema50.getDescription();
        boolean boolean52 = schema42.equals((java.lang.Object) schema50);
        java.util.List<java.lang.String> strList53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.required(strList53);
        schema50.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema50.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = strSchema60.properties(strMap65);
        java.lang.Integer int67 = schema66.getMaxProperties();
        io.swagger.oas.models.media.Schema schema69 = schema66.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = schema66.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema72 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema72.setType("hi!");
        strSchema72.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int77 = strSchema72.getMinLength();
        java.lang.Integer int78 = strSchema72.getMaxLength();
        java.math.BigDecimal bigDecimal79 = strSchema72.getMaximum();
        io.swagger.oas.models.media.Schema schema80 = schema71.additionalProperties((io.swagger.oas.models.media.Schema) strSchema72);
        io.swagger.oas.models.media.Schema schema82 = schema80.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema50.addProperties("default", schema80);
        io.swagger.oas.models.media.Schema schema85 = schema80.minLength((java.lang.Integer) (-1));
        strSchema6.setAdditionalProperties(schema80);
        java.util.List<java.lang.String> strList87 = schema80.getEnum();
        java.lang.Boolean boolean88 = schema80.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNull(boolean88);
    }

    @Test
    public void test10458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10458");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.String str6 = strSchema0.getDescription();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.multipleOf(bigDecimal7);
        java.lang.Integer int9 = schema8.getMaxProperties();
        java.lang.String str10 = schema8.getTitle();
        java.util.List<java.lang.String> strList11 = null;
        schema8.setEnum(strList11);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test10459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10459");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.XML xML17 = null;
        schema10.setXml(xML17);
        schema10.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema10.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = schema31.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema31.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.lang.Boolean boolean40 = strSchema37.getDeprecated();
        boolean boolean42 = strSchema37.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema37.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema37.deprecated((java.lang.Boolean) false);
        boolean boolean47 = schema31.equals((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema31.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.nullable((java.lang.Boolean) true);
        java.lang.Integer int52 = schema49.getMinLength();
        io.swagger.oas.models.media.Schema schema54 = schema49.type("");
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema56 = schema22.additionalProperties(schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test10460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10460");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema6.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test10461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10461");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.util.List<java.lang.String> strList26 = strSchema23.getRequired();
        strSchema23.setReadOnly((java.lang.Boolean) true);
        schema8.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray31 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap32 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        strSchema23.addExtension("no description", (java.lang.Object) strMap33);
        io.swagger.oas.models.media.Schema schema36 = strSchema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        java.util.List<java.lang.String> strList54 = schema47.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setName("no description");
        io.swagger.oas.models.media.Schema schema61 = strSchema55.type("");
        io.swagger.oas.models.media.Schema schema63 = schema61.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int64 = schema63.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setName("no description");
        io.swagger.oas.models.media.Schema schema71 = strSchema65.type("");
        io.swagger.oas.models.media.Schema schema73 = schema71.format("no description");
        io.swagger.oas.models.media.Schema schema74 = schema63.not(schema73);
        io.swagger.oas.models.media.Schema schema76 = schema73.format("default");
        io.swagger.oas.models.media.Schema schema78 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal79 = null;
        schema78.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema78.xml(xML81);
        schema47.setAdditionalProperties(schema82);
        io.swagger.oas.models.media.Schema schema85 = schema47.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema47.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal88 = null;
        schema87.setMinimum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema90 = strSchema23.additionalProperties(schema87);
        java.lang.String str91 = strSchema23.get$ref();
        java.lang.Boolean boolean92 = strSchema23.getExclusiveMinimum();
        java.util.List<java.lang.String> strList93 = strSchema23.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(linkParameterArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test10462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10462");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema22.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.getAdditionalProperties();
        boolean boolean29 = strSchema10.equals((java.lang.Object) schema22);
        boolean boolean30 = schema9.equals((java.lang.Object) boolean29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.lang.Boolean boolean40 = strSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = strSchema37.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        java.lang.Boolean boolean46 = strSchema43.getWriteOnly();
        io.swagger.oas.models.media.Schema schema48 = strSchema43.type("default");
        strSchema37.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema43);
        io.swagger.oas.models.media.Schema schema50 = strSchema31.addProperties("", (io.swagger.oas.models.media.Schema) strSchema37);
        strSchema31.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str53 = strSchema31.getFormat();
        strSchema31.setDeprecated((java.lang.Boolean) false);
        schema9.setDefault((java.lang.Object) false);
        schema9.setDeprecated((java.lang.Boolean) true);
        schema9.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test10463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10463");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) true);
        java.lang.Integer int27 = schema24.getMinLength();
        java.math.BigDecimal bigDecimal28 = schema24.getMultipleOf();
        java.lang.Boolean boolean29 = schema24.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + true + "'", boolean29, true);
    }

    @Test
    public void test10464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10464");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.deprecated((java.lang.Boolean) true);
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema schema39 = schema31.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.discriminator(discriminator40);
        io.swagger.oas.models.media.XML xML42 = null;
        schema39.setXml(xML42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema39.xml(xML44);
        java.math.BigDecimal bigDecimal46 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        io.swagger.oas.models.media.Schema schema51 = strSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = schema51.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean54 = schema53.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = schema53.getExternalDocs();
        java.math.BigDecimal bigDecimal56 = schema53.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema65 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema58);
        io.swagger.oas.models.media.Schema schema67 = schema65.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = schema67.getProperties();
        io.swagger.oas.models.media.Schema schema69 = schema45.properties(strMap68);
        io.swagger.oas.models.media.Schema schema70 = schema22.properties(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        schema70.setDiscriminator(discriminator71);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test10465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10465");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        java.math.BigDecimal bigDecimal35 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema19.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 0);
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        schema39.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str44 = schema39.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str44, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test10466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10466");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.pattern("no description");
        strSchema0.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        strSchema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strSchema28.properties(strMap33);
        java.lang.Integer int35 = schema34.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.minProperties((java.lang.Integer) 0);
        java.lang.String str38 = schema34.getType();
        strSchema19.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema41 = strSchema19.maxProperties((java.lang.Integer) 1);
        schema41.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = strSchema0.not(schema41);
        java.math.BigDecimal bigDecimal45 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema47 = schema41.readOnly((java.lang.Boolean) true);
        schema41.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test10467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10467");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema18 = strSchema14.maxLength((java.lang.Integer) 1);
        schema18.setPattern("");
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator34 = strSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.format("no description");
        io.swagger.oas.models.media.Schema schema55 = schema44.not(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema54.format("default");
        io.swagger.oas.models.media.Schema schema59 = schema54.exclusiveMinimum((java.lang.Boolean) false);
        schema54.setFormat("no description");
        io.swagger.oas.models.media.Discriminator discriminator62 = schema54.getDiscriminator();
        strSchema23.addExtension("hi!", (java.lang.Object) schema54);
        schema22.setDefault((java.lang.Object) "hi!");
        schema13.setAdditionalProperties(schema22);
        schema13.setMinProperties((java.lang.Integer) 0);
        schema13.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema71 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test10468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10468");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML5 = null;
        schema4.setXml(xML5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema15 = strSchema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = strSchema7.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray20 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        schema17.setRequired((java.util.List<java.lang.String>) strList21);
        java.util.List<java.lang.String> strList24 = schema17.getEnum();
        schema17.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema17.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema4.example((java.lang.Object) schema30);
        schema30.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int43 = schema42.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema52 = schema50.format("no description");
        io.swagger.oas.models.media.Schema schema53 = schema42.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.format("default");
        io.swagger.oas.models.media.Schema schema57 = schema52.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int58 = schema57.getMinLength();
        java.math.BigDecimal bigDecimal59 = null;
        schema57.setMultipleOf(bigDecimal59);
        schema30.setAdditionalProperties(schema57);
        schema57.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test10469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10469");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minimum(bigDecimal9);
        java.lang.Object obj11 = strSchema0.getExample();
        java.lang.Object obj12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema0.example(obj12);
        io.swagger.oas.models.media.Schema schema15 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = strSchema0.getMaxItems();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test10470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10470");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setMaxItems((java.lang.Integer) 10);
        java.lang.String str20 = schema16.getName();
        schema16.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test10471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10471");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test10472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10472");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        java.lang.Integer int4 = strSchema0.getMinProperties();
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.getNot();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.format("");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test10473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10473");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema5.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        schema5.setDiscriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema5.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema5.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test10474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10474");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        java.lang.String str11 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int18 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = strSchema12.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        schema20.setExtensions(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema20);
        schema20.setType("");
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema20.discriminator(discriminator28);
        schema29.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema29.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test10475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10475");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        schema6.setType("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema6.setExternalDocs(externalDocumentation10);
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema6.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema6.readOnly((java.lang.Boolean) false);
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema17.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test10476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10476");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        schema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxLength((java.lang.Integer) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean28 = schema12.getDeprecated();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test10477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10477");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.title("");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test10478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10478");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema16.title("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema16.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strSchema27.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema37.setRequired((java.util.List<java.lang.String>) strList41);
        strSchema16.addExtension("", (java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = strSchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strSchema45.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray58 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        schema55.setRequired((java.util.List<java.lang.String>) strList59);
        schema37.setEnum((java.util.List<java.lang.String>) strList59);
        java.lang.Object obj63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema37.example(obj63);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strSchema65.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema73 = schema71.exclusiveMaximum((java.lang.Boolean) true);
        schema73.setMaxItems((java.lang.Integer) 0);
        java.lang.String str76 = schema73.toString();
        java.util.List<java.lang.String> strList77 = schema73.getRequired();
        schema37.setRequired(strList77);
        io.swagger.oas.models.media.Schema schema79 = schema11.required(strList77);
        schema11.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str76, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test10479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10479");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema29.getExtensions();
        java.lang.Boolean boolean32 = schema29.getNullable();
        java.lang.String str33 = schema29.getDescription();
        io.swagger.oas.models.media.Schema schema35 = schema29.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema29.minimum(bigDecimal36);
        java.lang.Boolean boolean38 = schema37.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test10480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10480");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.addRequiredItem("");
        java.lang.Boolean boolean34 = schema33.getExclusiveMinimum();
        schema33.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema33.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.externalDocs(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test10481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10481");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test10482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10482");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        strSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema13.description("hi!");
        schema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.xml(xML23);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test10483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10483");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        java.lang.Integer int24 = strSchema11.getMaxLength();
        java.math.BigDecimal bigDecimal25 = strSchema11.getMultipleOf();
        strSchema11.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test10484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10484");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.title("no description");
        java.math.BigDecimal bigDecimal13 = strSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema5);
        schema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema19 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema21 = schema14.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test10485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10485");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        java.util.List<java.lang.String> strList11 = schema6.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML19 = null;
        schema18.setXml(xML19);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        java.lang.Integer int29 = schema28.getMaxProperties();
        java.math.BigDecimal bigDecimal30 = null;
        schema28.setMinimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema28.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema28.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema18.addProperties("default", schema37);
        java.math.BigDecimal bigDecimal39 = null;
        schema18.setMaximum(bigDecimal39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema18.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema44 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema46 = schema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema44.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test10486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10486");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema10.addProperties("*/*", schema22);
        schema22.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test10487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10487");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) false);
        schema6.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test10488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10488");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema2 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema2.setType("hi!");
        strSchema2.setName("no description");
        io.swagger.oas.models.media.Schema schema8 = strSchema2.type("");
        schema8.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema8.example((java.lang.Object) '#');
        strSchema0.setExample((java.lang.Object) schema8);
        java.lang.Boolean boolean14 = schema8.getExclusiveMinimum();
        schema8.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test10489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10489");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strSchema6.getExternalDocs();
        java.lang.String str12 = strSchema6.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        strSchema6.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema6.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = strSchema6.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strSchema6.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema6.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        io.swagger.oas.models.media.Schema schema27 = strSchema23.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean30 = schema29.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema29.getExternalDocs();
        java.math.BigDecimal bigDecimal32 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema schema33 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean35 = strSchema34.getNullable();
        java.lang.Object obj36 = strSchema34.getExample();
        io.swagger.oas.models.media.Schema schema38 = strSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        java.util.List<java.lang.String> strList42 = strSchema39.getRequired();
        strSchema39.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema39.title("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema39.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = strSchema50.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = strSchema50.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray63 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema60.setRequired((java.util.List<java.lang.String>) strList64);
        strSchema39.addExtension("", (java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        strSchema68.setName("no description");
        io.swagger.oas.models.media.Schema schema74 = strSchema68.type("");
        io.swagger.oas.models.media.Schema schema76 = strSchema68.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = strSchema68.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray81 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        schema78.setRequired((java.util.List<java.lang.String>) strList82);
        schema60.setEnum((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema86 = schema38.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema87 = schema29.required((java.util.List<java.lang.String>) strList82);
        schema22.setRequired((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema89 = schema5.required((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.annotations.links.Link[] linkArray90 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap91 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray90);
        boolean boolean92 = schema5.equals((java.lang.Object) linkArray90);
        io.swagger.oas.models.media.Schema schema94 = schema5.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(linkArray90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test10490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10490");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema16 = strSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        strSchema0.setMaximum(bigDecimal17);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test10491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10491");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.util.List<java.lang.String> strList26 = strSchema23.getRequired();
        strSchema23.setReadOnly((java.lang.Boolean) true);
        schema8.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray31 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap32 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        strSchema23.addExtension("no description", (java.lang.Object) strMap33);
        io.swagger.oas.models.media.Schema schema36 = strSchema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        java.util.List<java.lang.String> strList54 = schema47.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setName("no description");
        io.swagger.oas.models.media.Schema schema61 = strSchema55.type("");
        io.swagger.oas.models.media.Schema schema63 = schema61.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int64 = schema63.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setName("no description");
        io.swagger.oas.models.media.Schema schema71 = strSchema65.type("");
        io.swagger.oas.models.media.Schema schema73 = schema71.format("no description");
        io.swagger.oas.models.media.Schema schema74 = schema63.not(schema73);
        io.swagger.oas.models.media.Schema schema76 = schema73.format("default");
        io.swagger.oas.models.media.Schema schema78 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal79 = null;
        schema78.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema78.xml(xML81);
        schema47.setAdditionalProperties(schema82);
        io.swagger.oas.models.media.Schema schema85 = schema47.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema47.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal88 = null;
        schema87.setMinimum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema90 = strSchema23.additionalProperties(schema87);
        io.swagger.oas.models.media.Schema schema92 = schema90.type("#/components/schemas/default");
        java.lang.Object obj93 = schema92.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(linkParameterArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test10492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10492");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        java.lang.Integer int17 = schema16.getMaxProperties();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema16.setExternalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.addProperties("default", schema25);
        java.math.BigDecimal bigDecimal27 = null;
        schema6.setMaximum(bigDecimal27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema6.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema6.discriminator(discriminator30);
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int34 = schema6.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test10493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10493");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        schema7.set$ref("");
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int19 = strSchema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema13.not((io.swagger.oas.models.media.Schema) strSchema20);
        java.lang.Boolean boolean28 = strSchema13.getUniqueItems();
        java.lang.Boolean boolean29 = strSchema13.getNullable();
        io.swagger.oas.models.media.Schema schema31 = strSchema13.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int32 = strSchema13.getMinItems();
        java.lang.Boolean boolean33 = strSchema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema34 = schema7.addProperties("#/components/schemas/hi!", (io.swagger.oas.models.media.Schema) strSchema13);
        strSchema13.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test10494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10494");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        java.lang.Integer int23 = schema22.getMaxProperties();
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema22.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.getAdditionalProperties();
        boolean boolean29 = strSchema10.equals((java.lang.Object) schema22);
        boolean boolean30 = schema9.equals((java.lang.Object) boolean29);
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.String str33 = schema9.get$ref();
        io.swagger.oas.models.media.Schema schema35 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = schema9.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema9.discriminator(discriminator37);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test10495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10495");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema30.properties(strMap35);
        java.lang.Integer int37 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema36.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = strSchema42.getMinLength();
        java.lang.Integer int48 = strSchema42.getMaxLength();
        java.math.BigDecimal bigDecimal49 = strSchema42.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema52 = schema50.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema20.addProperties("default", schema50);
        io.swagger.oas.models.media.Schema schema55 = schema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema57 = schema50.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean58 = schema57.getNullable();
        schema57.setType("#/components/schemas/default");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test10496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10496");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        java.lang.Integer int15 = strSchema11.getMinProperties();
        strSchema11.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema9.not((io.swagger.oas.models.media.Schema) strSchema11);
        schema9.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10497");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        java.lang.Integer int23 = schema22.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema34 = strSchema26.nullable((java.lang.Boolean) true);
        schema34.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMaximum(bigDecimal39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema38.getExternalDocs();
        schema22.setExample((java.lang.Object) externalDocumentation41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation41);
    }

    @Test
    public void test10498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10498");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int25 = schema24.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema24.getDiscriminator();
        schema24.setDescription("#/components/schemas/default");
        java.lang.Boolean boolean29 = schema24.getUniqueItems();
        schema24.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema24.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test10499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10499");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.not(schema17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test10500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10500");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        schema42.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema42.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal51 = null;
        schema50.setMinimum(bigDecimal51);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
    }
}

