import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.discriminator(discriminator25);
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        java.lang.Integer int8 = schema6.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        schema6.setDiscriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema6.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = schema5.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema18.properties(strMap23);
        java.lang.String str25 = strSchema18.getType();
        schema14.setNot((io.swagger.oas.models.media.Schema) strSchema18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        java.util.List<java.lang.String> strList35 = strSchema32.getRequired();
        strSchema32.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int38 = strSchema32.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema46 = strSchema32.not((io.swagger.oas.models.media.Schema) strSchema39);
        strSchema27.setExample((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal48 = null;
        schema46.setMultipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema46.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema14.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema53 = schema7.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema schema55 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str56 = schema55.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getWriteOnly();
        strSchema0.setTitle("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        strSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema6.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = strSchema0.required((java.util.List<java.lang.String>) strList36);
        schema40.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema40.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str47 = strSchema46.getTitle();
        io.swagger.oas.models.media.Schema schema49 = strSchema46.format("");
        schema49.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        schema49.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        io.swagger.oas.models.media.Schema schema59 = strSchema55.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema59.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean62 = schema61.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema61.discriminator(discriminator63);
        io.swagger.oas.models.media.Schema schema66 = schema61.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean71 = schema70.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema73 = schema70.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema49.not(schema70);
        io.swagger.oas.models.media.Schema schema76 = schema49.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema76.getProperties();
        schema40.setAdditionalProperties(schema76);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        schema23.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = strSchema30.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema42.getAdditionalProperties();
        boolean boolean49 = strSchema30.equals((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema51 = schema42.minProperties((java.lang.Integer) (-1));
        boolean boolean52 = schema23.equals((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema23.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema23.getProperties();
        schema23.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strMap31);
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        schema36.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema36.type("hi!");
        io.swagger.oas.models.media.Schema schema50 = schema24.not(schema49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        schema50.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = schema50.getMaxItems();
        io.swagger.oas.models.media.Schema schema57 = schema50.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = strSchema58.properties(strMap63);
        strSchema58.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = strSchema58.pattern("no description");
        java.util.List<java.lang.String> strList69 = schema68.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema68.discriminator(discriminator70);
        boolean boolean72 = schema57.equals((java.lang.Object) schema71);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray28 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        schema25.setRequired((java.util.List<java.lang.String>) strList29);
        java.util.List<java.lang.String> strList32 = schema25.getEnum();
        java.lang.String str33 = schema25.toString();
        io.swagger.oas.models.media.Schema schema35 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setDefault((java.lang.Object) schema25);
        java.math.BigDecimal bigDecimal39 = schema25.getMinimum();
        java.lang.String str40 = schema25.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema11.properties(strMap16);
        java.lang.String str18 = strSchema11.getPattern();
        strSchema11.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema11.exclusiveMinimum((java.lang.Boolean) true);
        schema22.setReadOnly((java.lang.Boolean) true);
        schema22.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        strSchema28.setMaxItems((java.lang.Integer) 10);
        strSchema28.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = strSchema28.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema28.externalDocs(externalDocumentation37);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema28);
        io.swagger.oas.models.media.Schema schema41 = schema22.description("default");
        schema41.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema41.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema41.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = schema47.getExtensions();
        strSchema0.setExtensions(strMap48);
        java.lang.String str50 = strSchema0.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strSchema15.setExtensions(strMap16);
        io.swagger.oas.models.media.Schema schema19 = strSchema15.type("");
        schema19.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema26.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = strSchema26.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema25.additionalProperties(schema34);
        java.lang.Integer int36 = schema34.getMinLength();
        io.swagger.oas.models.media.Schema schema37 = schema14.not(schema34);
        schema37.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal40 = null;
        schema37.setMaximum(bigDecimal40);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = schema6.getWriteOnly();
        java.lang.Integer int10 = schema6.getMaxLength();
        java.lang.Integer int11 = schema6.getMaxItems();
        schema6.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema6.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        java.lang.Boolean boolean25 = strSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = strSchema22.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        strSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Schema schema35 = strSchema16.addProperties("", (io.swagger.oas.models.media.Schema) strSchema22);
        io.swagger.oas.models.media.Schema schema37 = strSchema22.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList38 = null;
        io.swagger.oas.models.media.Schema schema39 = strSchema22.required(strList38);
        java.lang.Integer int40 = schema39.getMaxLength();
        java.lang.Integer int41 = schema39.getMinLength();
        schema6.setDefault((java.lang.Object) int41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        java.lang.Boolean boolean4 = strSchema0.getUniqueItems();
        strSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema7.setFormat("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(schema7);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML12 = schema11.getXml();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML12);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.discriminator(discriminator14);
        schema15.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML20 = schema19.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.xml(xML14);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema9.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        java.util.List<java.lang.String> strList23 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Discriminator discriminator5 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = strSchema19.getProperties();
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        io.swagger.oas.models.media.XML xML27 = null;
        schema18.setXml(xML27);
        schema18.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = strSchema0.not(schema18);
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMaximum(bigDecimal32);
        java.math.BigDecimal bigDecimal34 = schema31.getMinimum();
        org.junit.Assert.assertNull(discriminator5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strSchema0.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int42 = strSchema36.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        strSchema36.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema46.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setNullable((java.lang.Boolean) true);
        schema20.setExample((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema59 = schema20.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema20.getNot();
        java.lang.String str61 = schema20.getType();
        java.lang.Object obj62 = schema20.getExample();
        java.lang.Boolean boolean63 = schema20.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema30.properties(strMap35);
        java.lang.Integer int37 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema36.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = strSchema42.getMinLength();
        java.lang.Integer int48 = strSchema42.getMaxLength();
        java.math.BigDecimal bigDecimal49 = strSchema42.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema52 = schema50.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema20.addProperties("default", schema50);
        io.swagger.oas.models.media.Schema schema55 = schema50.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = schema50.getReadOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + true + "'", boolean56, true);
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        java.lang.Integer int62 = schema5.getMinItems();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        strSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = strSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal12 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = strSchema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        strSchema0.setNot(schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = strSchema25.getDeprecated();
        java.lang.String str31 = strSchema25.getDescription();
        io.swagger.oas.models.media.Schema schema33 = strSchema25.maxLength((java.lang.Integer) 0);
        java.lang.Integer int34 = strSchema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema36 = strSchema25.format("");
        io.swagger.oas.models.media.Schema schema38 = strSchema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setDeprecated((java.lang.Boolean) true);
        schema38.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema22.additionalProperties(schema38);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        io.swagger.oas.models.media.Schema schema48 = strSchema44.maxLength((java.lang.Integer) 1);
        schema48.setPattern("");
        io.swagger.oas.models.media.Schema schema52 = schema48.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray56 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        schema52.setEnum((java.util.List<java.lang.String>) strList57);
        schema22.setRequired((java.util.List<java.lang.String>) strList57);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setFormat("no description");
        java.lang.Integer int26 = schema18.getMaxLength();
        java.lang.Boolean boolean27 = schema18.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema7.not(schema17);
        schema17.setNullable((java.lang.Boolean) false);
        java.lang.Integer int21 = schema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema17.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        schema17.setDiscriminator(discriminator28);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMinItems();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        schema22.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema42 = schema22.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList43 = schema42.getRequired();
        io.swagger.oas.models.media.Schema schema44 = schema6.required(strList43);
        java.util.List<java.lang.String> strList45 = schema44.getRequired();
        schema44.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema21.not((io.swagger.oas.models.media.Schema) strSchema28);
        strSchema16.setExample((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema38 = schema35.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        java.lang.String str43 = schema38.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema45.properties(strMap50);
        java.lang.String str52 = strSchema45.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        java.lang.Integer int60 = schema59.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema59.properties(strMap61);
        schema59.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema66 = schema59.title("default");
        schema66.setReadOnly((java.lang.Boolean) false);
        strSchema45.setNot(schema66);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str71 = strSchema70.getTitle();
        io.swagger.oas.models.media.Schema schema73 = strSchema70.format("");
        io.swagger.oas.models.media.Schema schema75 = strSchema70.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strSchema70.description("*/*");
        boolean boolean78 = schema66.equals((java.lang.Object) "*/*");
        io.swagger.oas.models.media.Discriminator discriminator79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema66.discriminator(discriminator79);
        io.swagger.oas.models.media.XML xML81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.xml(xML81);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema80);
        java.util.List<java.lang.String> strList84 = schema38.getRequired();
        schema6.setNot(schema38);
        io.swagger.oas.models.media.Schema schema87 = schema38.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema14.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema23 = schema22.getNot();
        io.swagger.oas.models.media.Schema schema25 = schema22.$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        strSchema29.setNot((io.swagger.oas.models.media.Schema) strSchema34);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strSchema29.minimum(bigDecimal40);
        schema41.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema46 = schema41.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = schema53.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema64 = strSchema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strSchema56.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray69 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        schema66.setRequired((java.util.List<java.lang.String>) strList70);
        schema55.setRequired((java.util.List<java.lang.String>) strList70);
        schema46.setEnum((java.util.List<java.lang.String>) strList70);
        schema25.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema76 = schema13.required((java.util.List<java.lang.String>) strList70);
        java.lang.Boolean boolean77 = schema76.getWriteOnly();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema11.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        schema32.setMinLength((java.lang.Integer) 0);
        java.lang.Integer int37 = schema32.getMinItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema30.not((io.swagger.oas.models.media.Schema) strSchema37);
        strSchema37.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema48 = strSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        schema48.setNot(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema29.not(schema53);
        java.lang.Boolean boolean58 = schema29.getUniqueItems();
        java.lang.Boolean boolean59 = schema29.getExclusiveMaximum();
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str22 = strSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema24 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strSchema0.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = null;
        schema8.setExtensions(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema8.addRequiredItem("default");
        schema8.setMaxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean15 = schema8.getReadOnly();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema13 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = strSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = schema34.maxProperties((java.lang.Integer) 1);
        java.lang.String str38 = schema34.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema23.not(schema34);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema23.multipleOf(bigDecimal40);
        java.lang.Integer int42 = schema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema44 = schema23.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML47 = null;
        schema46.setXml(xML47);
        schema46.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.lang.Integer int10 = schema9.getMaxItems();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.multipleOf(bigDecimal11);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.util.List<java.lang.String> strList26 = strSchema23.getRequired();
        strSchema23.setReadOnly((java.lang.Boolean) true);
        schema8.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray31 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap32 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        strSchema23.addExtension("no description", (java.lang.Object) strMap33);
        io.swagger.oas.models.media.Schema schema36 = strSchema23.format("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.util.List<java.lang.String> strList40 = strSchema37.getRequired();
        strSchema37.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int43 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setName("no description");
        io.swagger.oas.models.media.Schema schema50 = strSchema44.type("");
        io.swagger.oas.models.media.Schema schema51 = strSchema37.not((io.swagger.oas.models.media.Schema) strSchema44);
        java.lang.Boolean boolean52 = strSchema37.getUniqueItems();
        java.lang.Boolean boolean53 = strSchema37.getNullable();
        io.swagger.oas.models.media.Schema schema55 = strSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema64 = schema62.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray66 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema64.setRequired((java.util.List<java.lang.String>) strList67);
        strSchema37.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema71 = schema36.required((java.util.List<java.lang.String>) strList67);
        java.lang.String str72 = schema36.toString();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(linkParameterArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str72, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema5.title("no description");
        java.math.BigDecimal bigDecimal13 = strSchema5.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema5);
        schema14.setFormat("hi!");
        java.math.BigDecimal bigDecimal17 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema14.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.multipleOf(bigDecimal19);
        java.math.BigDecimal bigDecimal21 = schema20.getMinimum();
        java.math.BigDecimal bigDecimal22 = null;
        schema20.setMinimum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema14 = strSchema12.maxItems((java.lang.Integer) 100);
        schema14.setTitle("");
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema11.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        java.lang.String str11 = schema6.getPattern();
        schema6.setMaxProperties((java.lang.Integer) 10);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema6.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        java.lang.Integer int14 = schema9.getMinItems();
        java.lang.Integer int15 = schema9.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.util.List<java.lang.String> strList19 = strSchema16.getRequired();
        strSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema16.title("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema16.minProperties((java.lang.Integer) 1);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean28 = strSchema27.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = strSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = strSchema27.description("");
        java.lang.Integer int32 = strSchema27.getMaxProperties();
        strSchema27.setType("default");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema27.minimum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = strSchema27.discriminator(discriminator37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        strSchema27.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema27.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema25.example((java.lang.Object) strSchema27);
        strSchema27.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML47 = schema9.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML47);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        schema25.setType("#/components/schemas/default");
        schema25.setDescription("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.description("no description");
        schema13.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = null;
        schema20.setMaximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        schema20.setMinimum(bigDecimal33);
        java.lang.Boolean boolean35 = schema20.getReadOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str13 = schema10.toString();
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema10.getNot();
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema10.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema11.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.util.List<java.lang.String> strList9 = strSchema6.getRequired();
        strSchema6.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = strSchema6.getDeprecated();
        java.math.BigDecimal bigDecimal13 = strSchema6.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema20.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = strSchema26.getMinLength();
        java.lang.Integer int32 = strSchema26.getMaxLength();
        java.math.BigDecimal bigDecimal33 = strSchema26.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema25.additionalProperties((io.swagger.oas.models.media.Schema) strSchema26);
        java.lang.Integer int35 = strSchema26.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        strSchema45.setNot((io.swagger.oas.models.media.Schema) strSchema50);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strSchema45.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.type("");
        io.swagger.oas.models.media.Schema schema66 = schema64.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema75 = strSchema67.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strSchema67.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray80 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema77.setRequired((java.util.List<java.lang.String>) strList81);
        schema66.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = strSchema45.required((java.util.List<java.lang.String>) strList81);
        strSchema36.setEnum((java.util.List<java.lang.String>) strList81);
        strSchema26.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema88 = strSchema6.required((java.util.List<java.lang.String>) strList81);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList81);
        java.util.List<java.lang.String> strList90 = strSchema0.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator91 = null;
        strSchema0.setDiscriminator(discriminator91);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strList90);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema11.setExternalDocs(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.util.List<java.lang.String> strList26 = strSchema23.getRequired();
        strSchema23.setReadOnly((java.lang.Boolean) true);
        schema8.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray31 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap32 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray31);
        strSchema23.addExtension("no description", (java.lang.Object) strMap33);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema23.xml(xML35);
        java.util.List<java.lang.String> strList37 = strSchema23.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(linkParameterArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int11 = strSchema6.getMinLength();
        strSchema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setNot((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema15 = schema5.getNot();
        java.lang.Boolean boolean16 = schema5.getUniqueItems();
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema13.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        schema4.setTitle("");
        schema4.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList12 = schema11.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.lang.String str11 = strSchema0.getDescription();
        strSchema0.setDescription("default");
        strSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str16 = strSchema0.getType();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.addEnumItemObject("hi!");
        strSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema11.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML5 = null;
        schema4.setXml(xML5);
        io.swagger.oas.models.media.XML xML7 = schema4.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema4.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema4.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Boolean boolean14 = schema13.getNullable();
        java.lang.Object obj15 = null;
        boolean boolean16 = schema13.equals(obj15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        schema10.setFormat("");
        schema10.setTitle("hi!");
        java.lang.Boolean boolean17 = schema10.getUniqueItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema10.setProperties(strMap18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.maximum(bigDecimal20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema10.externalDocs(externalDocumentation22);
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = strSchema11.maxProperties((java.lang.Integer) 1);
        schema25.setMaxItems((java.lang.Integer) 1);
        java.lang.Object obj28 = null;
        schema25.setDefault(obj28);
        java.math.BigDecimal bigDecimal30 = schema25.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.lang.Boolean boolean34 = strSchema31.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = strSchema31.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.String str39 = schema38.getName();
        schema25.setDefault((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema42 = schema38.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str43 = schema42.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        strSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema7.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strSchema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema36.not(schema43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str48 = strSchema47.getTitle();
        io.swagger.oas.models.media.Schema schema50 = strSchema47.format("");
        strSchema47.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = schema59.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray63 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema61.setRequired((java.util.List<java.lang.String>) strList64);
        strSchema47.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema46.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema69 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema70 = schema46.getNot();
        io.swagger.oas.models.media.Schema schema71 = schema46.getNot();
        io.swagger.oas.models.media.Schema schema73 = schema71.nullable((java.lang.Boolean) false);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema schema76 = schema71.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema76.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("*/*");
        java.lang.String str16 = schema11.getName();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.util.List<java.lang.String> strList20 = strSchema17.getRequired();
        strSchema17.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = strSchema17.getMinLength();
        java.math.BigDecimal bigDecimal24 = null;
        strSchema17.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema32 = schema11.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str34 = strSchema33.getTitle();
        io.swagger.oas.models.media.Schema schema36 = strSchema33.format("");
        io.swagger.oas.models.media.Schema schema38 = strSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str40 = strSchema39.getTitle();
        io.swagger.oas.models.media.Schema schema42 = strSchema39.format("");
        io.swagger.oas.models.media.Schema schema44 = strSchema39.exclusiveMaximum((java.lang.Boolean) true);
        strSchema33.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema33.readOnly((java.lang.Boolean) true);
        java.lang.String str48 = strSchema33.getTitle();
        io.swagger.oas.models.media.Schema schema49 = schema32.additionalProperties((io.swagger.oas.models.media.Schema) strSchema33);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean52 = schema51.getWriteOnly();
        io.swagger.oas.models.media.XML xML53 = schema51.getXml();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
        org.junit.Assert.assertNull(xML53);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal21 = schema19.getMaximum();
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMaximum(bigDecimal22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema25.get$ref();
        schema25.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        schema21.setDiscriminator(discriminator22);
        io.swagger.oas.models.media.Schema schema25 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj26 = schema25.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int19 = strSchema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema13.not((io.swagger.oas.models.media.Schema) strSchema20);
        java.lang.Boolean boolean28 = strSchema13.getUniqueItems();
        java.lang.Boolean boolean29 = strSchema13.getNullable();
        io.swagger.oas.models.media.Schema schema31 = strSchema13.uniqueItems((java.lang.Boolean) false);
        strSchema13.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema40.getExternalDocs();
        io.swagger.oas.models.media.Schema schema43 = schema40.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema40.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        java.lang.Boolean boolean49 = strSchema46.getDeprecated();
        boolean boolean51 = strSchema46.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strSchema46.multipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = strSchema46.deprecated((java.lang.Boolean) false);
        boolean boolean56 = schema40.equals((java.lang.Object) schema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema40.maximum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = strSchema13.not(schema58);
        schema12.setDefault((java.lang.Object) strSchema13);
        io.swagger.oas.models.media.Schema schema63 = schema12.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema65 = schema63.uniqueItems((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(schema63);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.util.List<java.lang.String> strList22 = strSchema19.getRequired();
        strSchema19.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strSchema19.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema33 = strSchema19.not((io.swagger.oas.models.media.Schema) strSchema26);
        strSchema14.setExample((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema36 = schema33.maxProperties((java.lang.Integer) (-1));
        schema13.setExample((java.lang.Object) schema33);
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        io.swagger.oas.models.media.Schema schema44 = strSchema40.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema44.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean47 = schema46.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.discriminator(discriminator48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema49.setExternalDocs(externalDocumentation50);
        schema49.setType("");
        io.swagger.oas.models.media.Schema schema55 = schema49.format("");
        java.lang.String str56 = schema49.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        strSchema57.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean62 = strSchema57.getDeprecated();
        io.swagger.oas.models.media.Schema schema64 = strSchema57.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = strSchema65.properties(strMap70);
        java.lang.Integer int72 = schema71.getMaxProperties();
        io.swagger.oas.models.media.Schema schema74 = schema71.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema64.not(schema74);
        io.swagger.oas.models.media.Schema schema77 = schema74.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema77.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema80 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema80.setType("hi!");
        java.lang.Boolean boolean83 = strSchema80.getWriteOnly();
        io.swagger.oas.models.media.Schema schema85 = strSchema80.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = strSchema80.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        strSchema80.setExternalDocs(externalDocumentation87);
        io.swagger.oas.models.media.Schema schema90 = strSchema80.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList91 = strSchema80.getRequired();
        io.swagger.oas.models.media.Schema schema92 = schema77.required(strList91);
        schema49.setEnum(strList91);
        schema13.setEnum(strList91);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema schema4 = strSchema0.type("");
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) 10);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.name("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.externalDocs(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema7.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str12 = strSchema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = strSchema11.format("");
        strSchema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        io.swagger.oas.models.media.Schema schema21 = strSchema17.maxLength((java.lang.Integer) 1);
        schema21.setPattern("");
        io.swagger.oas.models.media.Schema schema25 = schema21.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray29 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        schema25.setEnum((java.util.List<java.lang.String>) strList30);
        strSchema11.setEnum((java.util.List<java.lang.String>) strList30);
        schema10.setRequired((java.util.List<java.lang.String>) strList30);
        java.math.BigDecimal bigDecimal35 = schema10.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        java.lang.Integer int46 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema22.example((java.lang.Object) int46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = strSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema21 = strSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema26 = strSchema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strSchema18.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray31 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        schema28.setRequired((java.util.List<java.lang.String>) strList32);
        java.util.List<java.lang.String> strList35 = schema28.getEnum();
        java.lang.Integer int36 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema38 = schema28.pattern("default");
        io.swagger.oas.models.media.Schema schema40 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean41 = schema17.equals((java.lang.Object) schema28);
        java.lang.String str42 = schema28.getPattern();
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "default" + "'", str42, "default");
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        strSchema15.setMinProperties((java.lang.Integer) 10);
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strSchema15.getExtensions();
        strSchema15.setType("no description");
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema14.setProperties(strMap34);
        java.math.BigDecimal bigDecimal36 = null;
        schema14.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = strSchema40.properties(strMap45);
        java.lang.Integer int47 = schema46.getMaxProperties();
        schema46.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.externalDocs(externalDocumentation50);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema46.multipleOf(bigDecimal52);
        schema39.setNot(schema46);
        java.lang.String str55 = schema46.get$ref();
        java.lang.Object obj56 = schema46.getExample();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = schema9.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema9.getExternalDocs();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(externalDocumentation13);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        schema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema27.pattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        java.lang.Integer int46 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema22.example((java.lang.Object) int46);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = strSchema51.getDeprecated();
        io.swagger.oas.models.media.Schema schema58 = strSchema51.$ref("");
        schema58.addEnumItemObject("#/components/schemas/default");
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "#/components/schemas/default");
        java.util.List<java.lang.String> strList62 = schema49.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strList62);
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        schema36.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = strSchema15.required((java.util.List<java.lang.String>) strList51);
        strSchema7.setEnum((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        io.swagger.oas.models.media.Schema schema61 = strSchema57.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = strSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator64 = strSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema65 = strSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strSchema57);
        java.util.List<java.lang.String> strList66 = strSchema57.getEnum();
        io.swagger.oas.models.media.Schema schema68 = strSchema57.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema68.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema70.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema70.getProperties();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema8.writeOnly((java.lang.Boolean) false);
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        java.lang.Integer int41 = schema40.getMaxProperties();
        java.math.BigDecimal bigDecimal42 = null;
        schema40.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema40.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema40.getAdditionalProperties();
        boolean boolean47 = strSchema28.equals((java.lang.Object) schema40);
        strSchema28.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = strSchema28.deprecated((java.lang.Boolean) false);
        schema51.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema51.deprecated((java.lang.Boolean) true);
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = schema24.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean62 = strSchema61.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = strSchema61.getExternalDocs();
        io.swagger.oas.models.media.Schema schema65 = strSchema61.description("");
        strSchema61.setDefault((java.lang.Object) (byte) 100);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = strSchema61.maximum(bigDecimal68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        schema69.setExternalDocs(externalDocumentation70);
        schema24.setAdditionalProperties(schema69);
        schema69.setMaxLength((java.lang.Integer) 100);
        schema69.addExtension("", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema69.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.XML xML12 = strSchema0.getXml();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str15 = strSchema0.toString();
        io.swagger.oas.models.media.XML xML16 = strSchema0.getXml();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        schema22.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.minimum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema schema4 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema6 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema8.discriminator(discriminator15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        strSchema8.setProperties(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        java.lang.Integer int36 = schema35.getMaxProperties();
        java.math.BigDecimal bigDecimal37 = null;
        schema35.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema35.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema35.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema35.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema25.addProperties("default", schema44);
        schema44.set$ref("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema8.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema50 = schema48.readOnly((java.lang.Boolean) true);
        schema4.setExample((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.minimum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.maxItems((java.lang.Integer) 100);
        schema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.$ref("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema18.getDiscriminator();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema29.getExtensions();
        java.lang.Boolean boolean32 = schema29.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = strSchema6.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = strSchema6.getProperties();
        java.lang.String str24 = strSchema6.getDescription();
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        io.swagger.oas.models.media.XML xML28 = schema27.getXml();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMaximum(bigDecimal29);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML28);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema24.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML29 = null;
        schema28.setXml(xML29);
        io.swagger.oas.models.media.XML xML31 = schema28.getXml();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema28.getExtensions();
        schema28.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema18.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema37 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(xML31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        io.swagger.oas.models.media.Schema schema32 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema32.xml(xML34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strSchema36.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema36.discriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema45 = schema44.getNot();
        io.swagger.oas.models.media.Schema schema47 = schema44.$ref("hi!");
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        schema47.setDiscriminator(discriminator48);
        io.swagger.oas.models.media.Schema schema50 = schema35.additionalProperties(schema47);
        schema35.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        schema11.setPattern("");
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.util.List<java.lang.String> strList18 = strSchema15.getRequired();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = strSchema15.getProperties();
        java.lang.Boolean boolean22 = strSchema15.getWriteOnly();
        strSchema15.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strSchema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = strSchema25.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strSchema34.properties(strMap39);
        java.lang.String str41 = strSchema34.getPattern();
        strSchema34.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strSchema34.exclusiveMinimum((java.lang.Boolean) true);
        schema45.setReadOnly((java.lang.Boolean) true);
        schema45.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.lang.Boolean boolean54 = strSchema51.getWriteOnly();
        strSchema51.setMaxItems((java.lang.Integer) 10);
        strSchema51.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean59 = strSchema51.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = strSchema51.externalDocs(externalDocumentation60);
        schema45.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema51);
        io.swagger.oas.models.media.Schema schema64 = schema45.description("default");
        schema64.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema68 = schema64.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema70 = schema64.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = schema70.getExtensions();
        schema33.setExtensions(strMap71);
        strSchema15.setExtensions(strMap71);
        schema11.setExtensions(strMap71);
        io.swagger.oas.models.media.Schema schema76 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = null;
        schema76.setMinimum(bigDecimal77);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) 0);
        java.lang.String str10 = schema5.toString();
        java.lang.String str11 = schema5.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        java.lang.Integer int25 = schema24.getMaxProperties();
        java.math.BigDecimal bigDecimal26 = null;
        schema24.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema24.getAdditionalProperties();
        boolean boolean31 = strSchema12.equals((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema schema33 = schema24.uniqueItems((java.lang.Boolean) false);
        schema5.setAdditionalProperties(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema24.getExternalDocs();
        io.swagger.oas.annotations.media.Content[] contentArray36 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray36, components37);
        javax.ws.rs.Produces produces39 = null;
        javax.ws.rs.Produces produces40 = null;
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContent(contentArray36, produces39, produces40, components41);
        schema24.setDefault((java.lang.Object) contentArray36);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional45 = io.swagger.jaxrs2.OperationParser.getContents(contentArray36, components44);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(contentArray36);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertNotNull(contentOptional42);
        org.junit.Assert.assertNotNull(contentOptional45);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        java.math.BigDecimal bigDecimal25 = null;
        schema23.setMinimum(bigDecimal25);
        schema23.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema6.not(schema14);
        java.lang.Boolean boolean16 = schema15.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal17 = schema15.getMinimum();
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema15.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = strSchema9.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema9.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray22 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        schema19.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.setRequired((java.util.List<java.lang.String>) strList23);
        schema8.addEnumItemObject("hi!");
        java.math.BigDecimal bigDecimal29 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        schema34.setPattern("");
        io.swagger.oas.models.media.Schema schema38 = schema34.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema38.setExternalDocs(externalDocumentation41);
        java.lang.String str43 = schema38.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean49 = strSchema44.getDeprecated();
        java.lang.String str50 = strSchema44.getDescription();
        io.swagger.oas.models.media.Schema schema52 = strSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema52.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        strSchema57.setName("no description");
        io.swagger.oas.models.media.Schema schema63 = strSchema57.type("");
        io.swagger.oas.models.media.Schema schema65 = schema63.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema66 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema66.setType("hi!");
        strSchema66.setName("no description");
        io.swagger.oas.models.media.Schema schema72 = strSchema66.type("");
        io.swagger.oas.models.media.Schema schema74 = strSchema66.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = strSchema66.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray79 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        schema76.setRequired((java.util.List<java.lang.String>) strList80);
        schema65.setRequired((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema56.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema85 = schema38.required((java.util.List<java.lang.String>) strList80);
        schema8.setDefault((java.lang.Object) schema85);
        java.lang.Object obj87 = schema85.getExample();
        io.swagger.oas.models.media.Schema schema89 = schema85.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        schema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema17.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.lang.Boolean boolean34 = strSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = strSchema31.type("default");
        strSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema31);
        strSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema31.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean47 = strSchema42.getDeprecated();
        strSchema42.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        strSchema42.setRequired((java.util.List<java.lang.String>) strList55);
        strSchema31.setRequired((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = schema17.required((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema61 = schema17.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.discriminator(discriminator44);
        java.lang.String str46 = schema45.getFormat();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema45.maximum(bigDecimal47);
        java.util.List<java.lang.String> strList49 = null;
        schema45.setRequired(strList49);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray61 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        schema59.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema45.required((java.util.List<java.lang.String>) strList62);
        schema19.setEnum((java.util.List<java.lang.String>) strList62);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema18 = strSchema14.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema13.example((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) (-1));
        schema26.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.addRequiredItem("*/*");
        io.swagger.oas.models.media.XML xML36 = null;
        schema35.setXml(xML36);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        java.lang.Integer int46 = schema45.getMaxProperties();
        java.math.BigDecimal bigDecimal47 = null;
        schema45.setMinimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema45.setExternalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema45.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema35.addProperties("default", schema54);
        java.math.BigDecimal bigDecimal56 = null;
        schema54.setMaximum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int63 = strSchema58.getMinLength();
        java.lang.Integer int64 = strSchema58.getMaxLength();
        java.math.BigDecimal bigDecimal65 = strSchema58.getMaximum();
        java.math.BigDecimal bigDecimal66 = strSchema58.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str68 = strSchema67.getTitle();
        java.lang.String str69 = strSchema67.getPattern();
        strSchema58.setNot((io.swagger.oas.models.media.Schema) strSchema67);
        java.util.List<java.lang.String> strList71 = strSchema67.getEnum();
        boolean boolean72 = schema54.equals((java.lang.Object) strSchema67);
        io.swagger.oas.models.media.Schema schema74 = schema54.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema75 = schema26.not(schema54);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema76 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean77 = strSchema76.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = strSchema76.getExternalDocs();
        io.swagger.oas.models.media.Schema schema80 = strSchema76.description("");
        strSchema76.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema84 = strSchema76.nullable((java.lang.Boolean) true);
        strSchema76.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean87 = strSchema76.getReadOnly();
        java.math.BigDecimal bigDecimal88 = strSchema76.getMinimum();
        io.swagger.oas.models.media.Schema schema90 = strSchema76.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema92 = schema90.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema92.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema95 = schema54.additionalProperties(schema92);
        schema95.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(externalDocumentation78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNull(bigDecimal88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema10.properties(strMap15);
        java.lang.String str17 = strSchema10.getType();
        schema6.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        java.lang.String str19 = schema6.getType();
        io.swagger.oas.models.media.Schema schema21 = schema6.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str25 = strSchema24.getTitle();
        io.swagger.oas.models.media.Schema schema27 = strSchema24.format("");
        strSchema24.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strSchema24.getExtensions();
        java.lang.Integer int31 = strSchema24.getMinItems();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strSchema24.description("");
        io.swagger.oas.models.media.Schema schema36 = schema23.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema23.minLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList39 = schema23.getRequired();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema16.minimum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema10.addProperties("no description", schema28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema10.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = schema10.minLength((java.lang.Integer) 1);
        schema35.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str38 = schema35.getType();
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema35.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema35.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema12 = schema6.name("");
        java.math.BigDecimal bigDecimal13 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = schema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = schema20.maxProperties((java.lang.Integer) 1);
        java.lang.String str24 = schema20.get$ref();
        java.lang.String str25 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema27 = schema20.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 1);
        java.lang.String str30 = schema27.getName();
        schema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema27.xml(xML33);
        io.swagger.oas.models.media.Schema schema35 = schema12.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "no description" + "'", str30, "no description");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        schema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.Integer int34 = strSchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        java.lang.Integer int42 = schema41.getMaxProperties();
        java.math.BigDecimal bigDecimal43 = null;
        schema41.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = schema41.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema41.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        boolean boolean53 = strSchema23.equals((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema54 = schema17.not((io.swagger.oas.models.media.Schema) strSchema23);
        java.util.List<java.lang.String> strList55 = schema17.getRequired();
        java.math.BigDecimal bigDecimal56 = schema17.getMinimum();
        schema17.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(bigDecimal56);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setMaxLength((java.lang.Integer) 100);
        java.lang.String str7 = strSchema0.getDescription();
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) true);
        java.lang.String str10 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        schema9.setType("");
        io.swagger.oas.models.media.Schema schema15 = schema9.format("");
        java.lang.String str16 = schema9.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = strSchema17.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = strSchema17.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema24.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = strSchema40.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strSchema40.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strSchema40.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList51 = strSchema40.getRequired();
        io.swagger.oas.models.media.Schema schema52 = schema37.required(strList51);
        schema9.setEnum(strList51);
        java.lang.Integer int54 = schema9.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int54);
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) (-1));
        java.lang.Object obj12 = schema6.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema15 = strSchema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = strSchema7.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray20 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        schema17.setRequired((java.util.List<java.lang.String>) strList21);
        java.util.List<java.lang.String> strList24 = schema17.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.format("no description");
        io.swagger.oas.models.media.Schema schema44 = schema33.not(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema43.format("default");
        io.swagger.oas.models.media.Schema schema48 = schema43.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal49 = null;
        schema48.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.xml(xML51);
        schema17.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema17.deprecated((java.lang.Boolean) false);
        strSchema0.setNot(schema17);
        java.lang.Class<?> wildcardClass57 = schema17.getClass();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.externalDocs(externalDocumentation12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema15.getDescription();
        io.swagger.oas.models.media.Schema schema18 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema11.properties(strMap16);
        java.lang.Integer int18 = schema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema17.name("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.name("no description");
        schema10.setAdditionalProperties(schema26);
        java.lang.Integer int28 = schema26.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Schema schema36 = strSchema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setName("no description");
        io.swagger.oas.models.media.Schema schema46 = strSchema40.type("");
        io.swagger.oas.models.media.Schema schema48 = strSchema40.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = strSchema40.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.lang.Boolean boolean54 = strSchema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = strSchema51.type("default");
        io.swagger.oas.models.media.Schema schema57 = strSchema40.not(schema56);
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        java.lang.Integer int67 = schema66.getMaxProperties();
        java.math.BigDecimal bigDecimal68 = null;
        schema66.setMinimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema66.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema73 = schema71.maxProperties((java.lang.Integer) (-1));
        schema59.setExample((java.lang.Object) schema71);
        java.math.BigDecimal bigDecimal75 = schema59.getMultipleOf();
        io.swagger.oas.models.media.Schema schema77 = schema59.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 0);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema79);
        java.lang.String str81 = schema79.getTitle();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str81, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.String str32 = strSchema25.getPattern();
        java.lang.String str33 = strSchema25.getPattern();
        strSchema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = strSchema25.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int48 = schema47.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        strSchema49.setName("no description");
        io.swagger.oas.models.media.Schema schema55 = strSchema49.type("");
        io.swagger.oas.models.media.Schema schema57 = schema55.format("no description");
        io.swagger.oas.models.media.Schema schema58 = schema47.not(schema57);
        io.swagger.oas.models.media.Schema schema60 = schema57.format("default");
        io.swagger.oas.models.media.Schema schema62 = schema60.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema63 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema63.setType("hi!");
        strSchema63.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = strSchema63.properties(strMap68);
        java.lang.Integer int70 = schema69.getMaxProperties();
        schema69.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema69.externalDocs(externalDocumentation73);
        io.swagger.oas.models.media.Schema schema76 = schema74.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema77 = schema62.not(schema74);
        io.swagger.oas.models.media.Schema schema78 = schema77.getNot();
        io.swagger.oas.models.media.Schema schema79 = strSchema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        java.lang.String str80 = strSchema25.getDescription();
        java.lang.Boolean boolean81 = strSchema25.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema82 = schema24.example((java.lang.Object) boolean81);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.maximum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = schema82.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        schema39.setFormat("");
        schema39.setTitle("hi!");
        schema39.setDeprecated((java.lang.Boolean) true);
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema39.getDeprecated();
        boolean boolean51 = schema24.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema53 = schema24.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + true + "'", boolean50, true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        java.lang.Boolean boolean17 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        java.lang.Boolean boolean23 = strSchema20.getWriteOnly();
        java.lang.Integer int24 = strSchema20.getMinProperties();
        strSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        schema16.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = strSchema34.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        strSchema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema40);
        io.swagger.oas.models.media.Schema schema47 = strSchema28.addProperties("", (io.swagger.oas.models.media.Schema) strSchema34);
        io.swagger.oas.models.media.Schema schema49 = strSchema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema16.example((java.lang.Object) strSchema34);
        io.swagger.oas.models.media.Schema schema51 = strSchema34.getAdditionalProperties();
        java.lang.String str52 = strSchema34.get$ref();
        io.swagger.oas.models.media.Schema schema54 = strSchema34.name("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema56 = schema54.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        java.lang.Integer int10 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema schema11 = schema7.getNot();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema8.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        java.math.BigDecimal bigDecimal36 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        io.swagger.oas.models.media.Schema schema41 = strSchema37.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean44 = schema43.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema45.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema43.not(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema52.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema52.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.discriminator(discriminator59);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema33.setNot(schema62);
        schema62.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.minimum(bigDecimal10);
        schema8.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema8.setExternalDocs(externalDocumentation14);
        schema8.setWriteOnly((java.lang.Boolean) true);
        schema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema8.getDeprecated();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        java.lang.Integer int11 = schema8.getMaxProperties();
        schema8.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        java.lang.Boolean boolean21 = schema19.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strSchema22.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema19.not(schema35);
        schema36.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema36.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean43 = schema36.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = null;
        strSchema0.setExtensions(strMap1);
        io.swagger.oas.models.media.Schema schema4 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema24 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema12.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = strSchema10.nullable((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.required(strList34);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) 0);
        schema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = schema37.getUniqueItems();
        java.lang.String str41 = schema37.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        io.swagger.oas.models.media.Schema schema14 = strSchema10.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema14.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.discriminator(discriminator18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema19.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema23);
        schema9.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.format("no description");
        io.swagger.oas.models.media.Schema schema55 = schema44.not(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema54.format("default");
        io.swagger.oas.models.media.Schema schema59 = schema54.exclusiveMinimum((java.lang.Boolean) false);
        schema54.setFormat("no description");
        schema54.setMinProperties((java.lang.Integer) 100);
        schema54.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema9.not(schema54);
        java.lang.Boolean boolean67 = schema66.getUniqueItems();
        java.lang.Boolean boolean68 = schema66.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(boolean68);
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema6.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.minimum(bigDecimal13);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = schema23.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int26 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = schema33.format("no description");
        io.swagger.oas.models.media.Schema schema36 = schema25.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema35.format("default");
        io.swagger.oas.models.media.Schema schema40 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema40.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.xml(xML43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = schema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = schema51.maxProperties((java.lang.Integer) 1);
        java.lang.String str55 = schema51.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema40.not(schema51);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema40.multipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = strSchema61.properties(strMap66);
        java.lang.String str68 = strSchema61.getPattern();
        strSchema61.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = strSchema61.exclusiveMinimum((java.lang.Boolean) true);
        schema72.setReadOnly((java.lang.Boolean) true);
        schema72.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema78 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema78.setType("hi!");
        java.lang.Boolean boolean81 = strSchema78.getWriteOnly();
        strSchema78.setMaxItems((java.lang.Integer) 10);
        strSchema78.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean86 = strSchema78.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        io.swagger.oas.models.media.Schema schema88 = strSchema78.externalDocs(externalDocumentation87);
        schema72.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema78);
        io.swagger.oas.models.media.XML xML90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema72.xml(xML90);
        io.swagger.oas.models.media.Schema schema93 = schema72.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema72.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema96 = schema40.additionalProperties(schema72);
        schema6.setNot(schema40);
        java.math.BigDecimal bigDecimal98 = null;
        schema40.setMaximum(bigDecimal98);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        schema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema6.get$ref();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.Integer int19 = strSchema11.getMaxLength();
        java.lang.Boolean boolean20 = strSchema11.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema11.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        schema29.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema29.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema35 = schema29.minItems((java.lang.Integer) 0);
        strSchema11.setDefault((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        strSchema37.setNot((io.swagger.oas.models.media.Schema) strSchema42);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema37.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        java.util.List<java.lang.String> strList53 = strSchema50.getRequired();
        strSchema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = strSchema50.title("no description");
        java.lang.String str58 = schema57.getDescription();
        boolean boolean59 = schema49.equals((java.lang.Object) schema57);
        java.util.List<java.lang.String> strList60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.required(strList60);
        schema57.setMaxItems((java.lang.Integer) 10);
        schema57.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema57.getDeprecated();
        io.swagger.oas.models.media.Schema schema68 = schema57.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal69 = schema68.getMinimum();
        schema68.setMinProperties((java.lang.Integer) 0);
        schema29.setAdditionalProperties(schema68);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        io.swagger.oas.models.media.Schema schema8 = schema4.$ref("default");
        io.swagger.oas.models.media.Schema schema10 = schema4.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMaximum(bigDecimal11);
        java.lang.String[] strArray20 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        io.swagger.oas.models.media.Schema schema23 = schema10.required((java.util.List<java.lang.String>) strList21);
        java.lang.Boolean boolean24 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        java.lang.Boolean boolean17 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        java.lang.Boolean boolean23 = strSchema20.getWriteOnly();
        java.lang.Integer int24 = strSchema20.getMinProperties();
        strSchema20.setExclusiveMinimum((java.lang.Boolean) true);
        schema16.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = strSchema34.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        strSchema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema40);
        io.swagger.oas.models.media.Schema schema47 = strSchema28.addProperties("", (io.swagger.oas.models.media.Schema) strSchema34);
        io.swagger.oas.models.media.Schema schema49 = strSchema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema16.example((java.lang.Object) strSchema34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int60 = schema59.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        strSchema61.setName("no description");
        io.swagger.oas.models.media.Schema schema67 = strSchema61.type("");
        io.swagger.oas.models.media.Schema schema69 = schema67.format("no description");
        io.swagger.oas.models.media.Schema schema70 = schema59.not(schema69);
        io.swagger.oas.models.media.Schema schema72 = schema69.format("default");
        io.swagger.oas.models.media.Schema schema74 = schema69.exclusiveMinimum((java.lang.Boolean) false);
        schema69.setFormat("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema34.example((java.lang.Object) "no description");
        strSchema34.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator80 = null;
        io.swagger.oas.models.media.Schema schema81 = strSchema34.discriminator(discriminator80);
        java.lang.String str82 = schema81.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        java.lang.Object obj8 = schema7.getExample();
        java.util.List<java.lang.String> strList9 = schema7.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema21.not((io.swagger.oas.models.media.Schema) strSchema28);
        java.lang.Boolean boolean36 = strSchema21.getUniqueItems();
        java.lang.Boolean boolean37 = strSchema21.getNullable();
        io.swagger.oas.models.media.Schema schema39 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strSchema21.maxItems((java.lang.Integer) (-1));
        strSchema21.setType("default");
        io.swagger.oas.models.media.Discriminator discriminator44 = strSchema21.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strSchema21.getProperties();
        io.swagger.oas.models.media.Schema schema46 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema21);
        java.lang.Integer int47 = strSchema21.getMinProperties();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj18 = strSchema10.getExample();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema10.discriminator(discriminator19);
        boolean boolean21 = schema9.equals((java.lang.Object) discriminator19);
        java.lang.String str22 = schema9.getType();
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        io.swagger.oas.models.media.Schema schema32 = strSchema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema9.not(schema32);
        schema35.setDescription("");
        java.math.BigDecimal bigDecimal38 = null;
        schema35.setMultipleOf(bigDecimal38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = strSchema6.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        strSchema6.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = strSchema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str21 = strSchema20.getTitle();
        strSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int29 = strSchema24.getMinLength();
        java.lang.String str30 = strSchema24.getDescription();
        strSchema20.setExample((java.lang.Object) str30);
        io.swagger.oas.models.media.Schema schema33 = strSchema20.$ref("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = strSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = strSchema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean37 = strSchema0.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema39 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML40 = strSchema0.getXml();
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(xML40);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema9.multipleOf(bigDecimal34);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema9.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema33.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str45 = strSchema44.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strSchema44.format("");
        strSchema44.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray60 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        schema58.setRequired((java.util.List<java.lang.String>) strList61);
        strSchema44.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList61);
        schema22.setEnum((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        java.util.List<java.lang.String> strList70 = strSchema67.getRequired();
        strSchema67.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int73 = strSchema67.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema67.not((io.swagger.oas.models.media.Schema) strSchema74);
        java.lang.Boolean boolean82 = strSchema67.getUniqueItems();
        java.lang.Boolean boolean83 = strSchema67.getNullable();
        io.swagger.oas.models.media.Schema schema85 = strSchema67.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strSchema67.maxItems((java.lang.Integer) (-1));
        strSchema67.setType("default");
        io.swagger.oas.models.media.Schema schema90 = schema22.not((io.swagger.oas.models.media.Schema) strSchema67);
        java.lang.Integer int91 = schema22.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema19.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getExclusiveMaximum();
        java.lang.Object obj26 = null;
        schema24.setExample(obj26);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.util.List<java.lang.String> strList31 = strSchema28.getRequired();
        strSchema28.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int34 = strSchema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema28.not((io.swagger.oas.models.media.Schema) strSchema35);
        strSchema23.setExample((java.lang.Object) schema42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema46 = schema18.example((java.lang.Object) schema42);
        java.lang.String str47 = schema42.getFormat();
        schema42.setMaxLength((java.lang.Integer) 0);
        schema42.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema42.minItems((java.lang.Integer) 1);
        schema53.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema7.discriminator(discriminator35);
        strSchema7.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal39 = strSchema7.getMultipleOf();
        io.swagger.oas.models.media.Schema schema41 = strSchema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = schema41.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema45.addRequiredItem("hi!");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) false);
        java.lang.String str13 = schema10.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean11 = strSchema10.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = strSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = strSchema10.description("");
        java.lang.Integer int15 = strSchema10.getMaxProperties();
        strSchema10.setType("default");
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema6.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        schema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema27.getExclusiveMinimum();
        schema19.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema42.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema19.not(schema42);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema19.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        java.lang.Integer int23 = schema6.getMaxProperties();
        java.lang.Integer int24 = schema6.getMaxItems();
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        strSchema29.setNot((io.swagger.oas.models.media.Schema) strSchema34);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strSchema29.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        java.util.List<java.lang.String> strList45 = strSchema42.getRequired();
        strSchema42.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strSchema42.title("no description");
        java.lang.String str50 = schema49.getDescription();
        boolean boolean51 = schema41.equals((java.lang.Object) schema49);
        java.util.List<java.lang.String> strList52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.required(strList52);
        schema49.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema49.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = strSchema59.properties(strMap64);
        java.lang.Integer int66 = schema65.getMaxProperties();
        io.swagger.oas.models.media.Schema schema68 = schema65.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema65.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int76 = strSchema71.getMinLength();
        java.lang.Integer int77 = strSchema71.getMaxLength();
        java.math.BigDecimal bigDecimal78 = strSchema71.getMaximum();
        io.swagger.oas.models.media.Schema schema79 = schema70.additionalProperties((io.swagger.oas.models.media.Schema) strSchema71);
        io.swagger.oas.models.media.Schema schema81 = schema79.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema49.addProperties("default", schema79);
        io.swagger.oas.models.media.Schema schema84 = schema79.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean85 = schema79.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema86 = schema6.not(schema79);
        io.swagger.oas.models.media.Schema schema88 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray10 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = schema8.getTitle();
        java.lang.String str15 = schema8.toString();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [default]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [default]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema6.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema6.minLength((java.lang.Integer) 10);
        java.lang.Integer int14 = schema6.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.util.List<java.lang.String> strList22 = strSchema19.getRequired();
        strSchema19.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strSchema19.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema33 = strSchema19.not((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema19.multipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema18.not(schema35);
        java.lang.Boolean boolean43 = schema35.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema7.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        schema18.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        java.lang.Integer int30 = schema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema29.description("no description");
        schema34.setPattern("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema18.additionalProperties(schema39);
        java.math.BigDecimal bigDecimal41 = null;
        schema40.setMaximum(bigDecimal41);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        java.lang.Boolean boolean6 = schema4.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema10.format("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema10.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean17 = schema16.getNullable();
        java.lang.Boolean boolean18 = schema16.getReadOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        io.swagger.jaxrs2.OperationParser.RESPONSE_DEFAULT = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        java.lang.String str9 = schema7.getType();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema11.minProperties((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass16 = schema11.getClass();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        strSchema0.setProperties(strMap9);
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        strSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strSchema0.getAdditionalProperties();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        io.swagger.oas.models.media.Schema schema24 = schema6.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean34 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema33.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema33.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema26.not(schema38);
        schema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = schema38.getUniqueItems();
        java.lang.String str43 = schema38.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean15 = schema12.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.format("no description");
        io.swagger.oas.models.media.Schema schema28 = schema17.not(schema27);
        io.swagger.oas.models.media.Schema schema29 = schema6.not(schema27);
        io.swagger.oas.models.media.Schema schema31 = schema6.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = schema12.getMultipleOf();
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strSchema19.getExternalDocs();
        java.lang.String str25 = strSchema19.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        strSchema19.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema19.discriminator(discriminator28);
        strSchema19.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema18.not((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema0.setNot(schema18);
        java.lang.String str34 = schema18.getTitle();
        java.lang.Class<?> wildcardClass35 = schema18.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = schema9.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces31, produces32, components33);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        schema6.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema6.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = null;
        schema6.setXml(xML14);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema12.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema12.getMinProperties();
        schema12.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        java.util.List<java.lang.String> strList52 = strSchema49.getRequired();
        strSchema49.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int55 = strSchema49.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema63 = strSchema49.not((io.swagger.oas.models.media.Schema) strSchema56);
        strSchema44.setExample((java.lang.Object) schema63);
        java.lang.Boolean boolean65 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Schema schema67 = schema63.format("hi!");
        java.math.BigDecimal bigDecimal68 = null;
        schema67.setMaximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxItems((java.lang.Integer) 1);
        schema67.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema67.getAdditionalProperties();
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema67.maximum(bigDecimal77);
        java.lang.Boolean boolean79 = schema67.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema80 = schema12.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema82 = schema12.maxItems((java.lang.Integer) 1);
        schema12.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList15 = schema10.getRequired();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema17.getProperties();
        schema17.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema17.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj16 = schema15.getExample();
        java.lang.Boolean boolean17 = schema15.getWriteOnly();
        java.util.List<java.lang.String> strList18 = schema15.getEnum();
        io.swagger.oas.models.media.Schema schema20 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema15.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = schema15.getMinLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str9 = strSchema0.getTitle();
        java.lang.String str10 = strSchema0.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.externalDocs(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML5 = null;
        schema4.setXml(xML5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        java.lang.Boolean boolean11 = strSchema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = strSchema8.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        java.lang.Integer int21 = schema20.getMaxProperties();
        java.math.BigDecimal bigDecimal22 = null;
        schema20.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema20.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema20.getAdditionalProperties();
        boolean boolean27 = strSchema8.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema29 = schema20.uniqueItems((java.lang.Boolean) false);
        schema20.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema20.maxLength((java.lang.Integer) (-1));
        java.lang.String str34 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema36 = schema20.format("");
        java.lang.String str37 = schema36.getPattern();
        java.lang.String[] strArray40 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional41 = io.swagger.jaxrs2.OperationParser.getTags(strArray40);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray40);
        boolean boolean43 = schema36.equals((java.lang.Object) tagSetOptional42);
        io.swagger.oas.models.media.Schema schema44 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema36);
        schema4.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str47 = schema4.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(tagSetOptional41);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str10 = strSchema9.getTitle();
        strSchema9.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = strSchema9.getNullable();
        io.swagger.oas.models.media.Schema schema15 = strSchema9.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema30.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str42 = strSchema41.getTitle();
        io.swagger.oas.models.media.Schema schema44 = strSchema41.format("");
        strSchema41.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = schema53.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray57 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        schema55.setRequired((java.util.List<java.lang.String>) strList58);
        strSchema41.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema62 = schema40.required((java.util.List<java.lang.String>) strList58);
        schema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema62.$ref("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema62.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.maxItems((java.lang.Integer) 0);
        java.lang.String str7 = schema6.getDescription();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.minimum(bigDecimal8);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Integer int5 = strSchema0.getMaxProperties();
        strSchema0.setType("default");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minimum(bigDecimal8);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean16 = strSchema15.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strSchema15.getExternalDocs();
        java.lang.Boolean boolean18 = strSchema15.getExclusiveMaximum();
        schema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) boolean18);
        io.swagger.oas.models.media.Schema schema21 = schema9.uniqueItems((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML5 = null;
        strSchema0.setXml(xML5);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema12.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        schema6.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema9.uniqueItems((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getPattern();
        java.lang.String str13 = schema11.toString();
        io.swagger.oas.models.media.Schema schema15 = schema11.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema15.setDiscriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.Integer int10 = schema9.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.util.List<java.lang.String> strList14 = strSchema11.getRequired();
        strSchema11.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = strSchema11.getMinLength();
        io.swagger.oas.models.media.Schema schema19 = strSchema11.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema19.readOnly((java.lang.Boolean) false);
        schema9.setExample((java.lang.Object) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema9.maximum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        schema24.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema24.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        strSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        java.lang.String str20 = schema19.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.externalDocs(externalDocumentation21);
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema19.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean27 = strSchema0.equals((java.lang.Object) schema19);
        java.math.BigDecimal bigDecimal28 = null;
        schema19.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema19.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema schema39 = strSchema33.type("");
        java.lang.Integer int40 = schema39.getMaxProperties();
        java.math.BigDecimal bigDecimal41 = null;
        schema39.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema39.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema39.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = schema39.getMinItems();
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int52 = schema39.getMinProperties();
        io.swagger.oas.models.media.Schema schema53 = schema19.addProperties("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        strSchema15.setMinProperties((java.lang.Integer) 10);
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strSchema15.getExtensions();
        strSchema15.setType("no description");
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema14.setProperties(strMap34);
        java.math.BigDecimal bigDecimal36 = null;
        schema14.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 0);
        java.lang.Integer int42 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema39.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        java.lang.String str25 = schema23.getName();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "no description" + "'", str25, "no description");
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.String str11 = schema10.getFormat();
        java.math.BigDecimal bigDecimal12 = schema10.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray28 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        schema25.setRequired((java.util.List<java.lang.String>) strList29);
        java.util.List<java.lang.String> strList32 = schema25.getEnum();
        java.lang.String str33 = schema25.toString();
        io.swagger.oas.models.media.Schema schema35 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setDefault((java.lang.Object) schema25);
        java.lang.String str39 = schema25.getPattern();
        java.util.List<java.lang.String> strList40 = schema25.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema7.getExternalDocs();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema7.setExternalDocs(externalDocumentation11);
        java.lang.Object obj13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.example(obj13);
        java.lang.String str15 = schema14.getName();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.discriminator(discriminator19);
        schema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.Integer int34 = strSchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        java.lang.Integer int42 = schema41.getMaxProperties();
        java.math.BigDecimal bigDecimal43 = null;
        schema41.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = schema41.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema41.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        boolean boolean53 = strSchema23.equals((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema54 = schema17.not((io.swagger.oas.models.media.Schema) strSchema23);
        io.swagger.oas.models.media.Schema schema56 = schema17.pattern("hi!");
        schema17.setMinLength((java.lang.Integer) 100);
        java.lang.Integer int59 = schema17.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        java.lang.String str5 = strSchema0.getType();
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.lang.Integer int7 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("#/components/schemas/no description");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema7.not(schema17);
        io.swagger.oas.models.media.Schema schema20 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        schema5.setDescription("default");
        io.swagger.oas.models.media.Schema schema65 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        schema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        java.lang.Boolean boolean71 = strSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema73 = strSchema68.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        java.lang.Boolean boolean77 = strSchema74.getWriteOnly();
        io.swagger.oas.models.media.Schema schema79 = strSchema74.type("default");
        strSchema68.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema74);
        io.swagger.oas.models.media.Schema schema82 = strSchema68.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator83 = null;
        io.swagger.oas.models.media.Schema schema84 = strSchema68.discriminator(discriminator83);
        schema5.setNot(schema84);
        schema5.setMinItems((java.lang.Integer) (-1));
        java.lang.Object obj88 = schema5.getExample();
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema10.properties(strMap15);
        java.lang.String str17 = strSchema10.getType();
        schema6.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int30 = strSchema24.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema38 = strSchema24.not((io.swagger.oas.models.media.Schema) strSchema31);
        strSchema19.setExample((java.lang.Object) schema38);
        java.math.BigDecimal bigDecimal40 = null;
        schema38.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema38.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = schema6.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema18 = strSchema14.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema13.example((java.lang.Object) schema20);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema24.readOnly((java.lang.Boolean) true);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = strSchema0.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        java.lang.Integer int18 = schema17.getMaxProperties();
        java.math.BigDecimal bigDecimal19 = null;
        schema17.setMinimum(bigDecimal19);
        java.math.BigDecimal bigDecimal21 = schema17.getMultipleOf();
        io.swagger.oas.models.media.Schema schema23 = schema17.uniqueItems((java.lang.Boolean) true);
        java.lang.String str24 = schema17.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema34.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = strSchema34.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray47 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        schema44.setRequired((java.util.List<java.lang.String>) strList48);
        schema33.setRequired((java.util.List<java.lang.String>) strList48);
        schema17.setEnum((java.util.List<java.lang.String>) strList48);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList48);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(externalDocumentation10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int23 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.format("default");
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.Integer int45 = schema44.getMaxProperties();
        schema44.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema37.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema52.getNot();
        io.swagger.oas.models.media.Schema schema54 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = strSchema0.discriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema58 = schema56.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean59 = schema58.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema50.getProperties();
        java.lang.Boolean boolean54 = schema50.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(boolean54);
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        java.lang.Boolean boolean21 = schema19.getUniqueItems();
        schema19.setTitle("");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strSchema27.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema37.setRequired((java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList44 = schema37.getEnum();
        java.lang.Integer int45 = schema37.getMaxLength();
        io.swagger.oas.models.media.Schema schema47 = schema37.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        strSchema48.setNot((io.swagger.oas.models.media.Schema) strSchema53);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema48.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        java.util.List<java.lang.String> strList64 = strSchema61.getRequired();
        strSchema61.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strSchema61.title("no description");
        java.lang.String str69 = schema68.getDescription();
        boolean boolean70 = schema60.equals((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema72 = schema68.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema37.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema75 = schema73.description("hi!");
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.minimum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema79 = schema77.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = schema77.getProperties();
        java.lang.String str81 = schema77.getFormat();
        schema77.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema84 = schema25.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        java.lang.Boolean boolean85 = schema25.getDeprecated();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.pattern("hi!");
        java.lang.Integer int27 = schema24.getMaxItems();
        java.lang.String str28 = schema24.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema24.setExternalDocs(externalDocumentation29);
        java.lang.Boolean boolean31 = schema24.getReadOnly();
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setTitle("");
        schema24.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces23, produces24, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = schema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        schema19.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema25.not((io.swagger.oas.models.media.Schema) strSchema32);
        strSchema32.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema43 = strSchema32.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema44 = schema19.addProperties("*/*", schema43);
        schema6.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema19);
        java.lang.Integer int46 = schema6.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema12 = strSchema0.getAdditionalProperties();
        strSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.not(schema17);
        java.util.List<java.lang.String> strList19 = schema18.getRequired();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean13 = schema12.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema12.setMinimum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema12.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        java.lang.Boolean boolean30 = strSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = strSchema27.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setName("no description");
        io.swagger.oas.models.media.Schema schema39 = strSchema33.type("");
        java.lang.Integer int40 = schema39.getMaxProperties();
        java.math.BigDecimal bigDecimal41 = null;
        schema39.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema39.getAdditionalProperties();
        boolean boolean46 = strSchema27.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema48 = schema39.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean53 = schema50.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema55 = schema50.readOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMinProperties();
        schema26.setDefault((java.lang.Object) int56);
        io.swagger.oas.models.media.Schema schema59 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema26.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str15 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getDeprecated();
        io.swagger.oas.models.media.Schema schema22 = strSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.Integer int31 = schema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema30.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = strSchema36.getMinLength();
        java.lang.Integer int42 = strSchema36.getMaxLength();
        java.math.BigDecimal bigDecimal43 = strSchema36.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema35.additionalProperties((io.swagger.oas.models.media.Schema) strSchema36);
        strSchema36.setType("");
        io.swagger.oas.models.media.Schema schema47 = schema22.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema36);
        java.lang.String str48 = schema22.getPattern();
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.discriminator(discriminator56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        java.lang.Boolean boolean60 = schema57.getNullable();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        java.lang.String str8 = strSchema0.getPattern();
        java.math.BigDecimal bigDecimal9 = null;
        strSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.getNot();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = strSchema0.getDeprecated();
        java.lang.Integer int15 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean18 = strSchema17.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strSchema17.description("");
        java.lang.Integer int22 = strSchema17.getMaxProperties();
        java.lang.Object obj23 = strSchema17.getExample();
        io.swagger.oas.models.media.Schema schema25 = strSchema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema4 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema4.setType("hi!");
        strSchema4.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int9 = strSchema4.getMinLength();
        java.lang.String str10 = strSchema4.getDescription();
        strSchema0.setExample((java.lang.Object) str10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strSchema18.getMinLength();
        strSchema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setNot((io.swagger.oas.models.media.Schema) strSchema18);
        java.math.BigDecimal bigDecimal27 = strSchema18.getMultipleOf();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.example((java.lang.Object) strSchema18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        schema28.setMinItems((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        strSchema34.setNot((io.swagger.oas.models.media.Schema) strSchema39);
        strSchema34.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = strSchema34.minProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList49 = schema48.getEnum();
        io.swagger.oas.annotations.media.Content[] contentArray50 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContent(contentArray50, produces53, produces54, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray50, components57);
        boolean boolean59 = schema48.equals((java.lang.Object) components57);
        io.swagger.oas.models.media.Schema schema60 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema48);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(contentArray50);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional56);
        org.junit.Assert.assertNotNull(contentOptional58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        java.lang.Object obj8 = schema7.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema7.properties(strMap9);
        schema7.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList28 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema30 = schema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema30.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.externalDocs(externalDocumentation32);
        schema30.setTitle("#/components/schemas/default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.format("no description");
        io.swagger.oas.models.media.Schema schema55 = schema44.not(schema54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema54.multipleOf(bigDecimal56);
        java.lang.String str58 = schema57.getTitle();
        io.swagger.oas.models.media.Schema schema60 = schema57.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int61 = schema60.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        io.swagger.oas.models.media.Schema schema66 = strSchema62.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = schema66.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean69 = schema68.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema68.getProperties();
        io.swagger.oas.models.media.Schema schema72 = schema68.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        io.swagger.oas.models.media.Schema schema77 = strSchema73.maxLength((java.lang.Integer) 1);
        schema77.setPattern("");
        io.swagger.oas.models.media.Schema schema81 = schema77.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray85 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema81.setEnum((java.util.List<java.lang.String>) strList86);
        schema72.setEnum((java.util.List<java.lang.String>) strList86);
        schema60.setEnum((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema30.required((java.util.List<java.lang.String>) strList86);
        schema7.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema94 = schema7.title("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal95 = null;
        schema94.setMinimum(bigDecimal95);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str8 = strSchema7.getTitle();
        io.swagger.oas.models.media.Schema schema10 = strSchema7.format("");
        strSchema7.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strSchema7.getExtensions();
        java.lang.Integer int14 = strSchema7.getMinItems();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        boolean boolean17 = strSchema0.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Discriminator discriminator18 = strSchema0.getDiscriminator();
        java.lang.Boolean boolean19 = strSchema0.getExclusiveMaximum();
        java.lang.String str20 = strSchema0.getDefault();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str12 = strSchema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = strSchema11.format("");
        io.swagger.oas.models.media.Schema schema16 = strSchema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema9.additionalProperties(schema16);
        java.lang.Boolean boolean20 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxItems((java.lang.Integer) 10);
        schema24.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        java.lang.Integer int9 = schema6.getMinLength();
        java.util.List<java.lang.String> strList10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.required(strList10);
        schema6.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema6.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema6.maximum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = strSchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = strSchema37.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        schema47.setRequired((java.util.List<java.lang.String>) strList51);
        schema36.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema55 = strSchema15.required((java.util.List<java.lang.String>) strList51);
        strSchema7.setEnum((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        io.swagger.oas.models.media.Schema schema61 = strSchema57.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = strSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator64 = strSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema65 = strSchema7.additionalProperties((io.swagger.oas.models.media.Schema) strSchema57);
        java.util.List<java.lang.String> strList66 = strSchema57.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        java.lang.Boolean boolean71 = strSchema68.getDeprecated();
        boolean boolean73 = strSchema68.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = strSchema68.multipleOf(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = strSchema68.deprecated((java.lang.Boolean) false);
        schema77.setMaxItems((java.lang.Integer) 0);
        schema77.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema77.exclusiveMaximum((java.lang.Boolean) false);
        strSchema57.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema86 = strSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = strSchema57.uniqueItems((java.lang.Boolean) true);
        java.lang.String str89 = strSchema57.getDescription();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = schema6.getExclusiveMinimum();
        schema6.addEnumItemObject("default");
        schema6.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.lang.Boolean boolean18 = strSchema15.getDeprecated();
        java.lang.Integer int19 = strSchema15.getMaxItems();
        strSchema15.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = strSchema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.addExtension("", (java.lang.Object) schema23);
        java.lang.Integer int25 = schema23.getMinItems();
        java.lang.Integer int26 = schema23.getMaxProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        schema4.setTitle("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema4.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema4.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        schema6.setReadOnly((java.lang.Boolean) true);
        schema6.set$ref("");
        schema6.setMaxProperties((java.lang.Integer) (-1));
        schema6.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema6.minimum(bigDecimal19);
        schema6.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema30.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema30.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.lang.Boolean boolean39 = strSchema36.getDeprecated();
        boolean boolean41 = strSchema36.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strSchema36.multipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strSchema36.deprecated((java.lang.Boolean) false);
        boolean boolean46 = schema30.equals((java.lang.Object) schema45);
        java.lang.String str47 = schema45.getName();
        java.util.List<java.lang.String> strList48 = schema45.getRequired();
        java.lang.Integer int49 = schema45.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        schema45.setMaximum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean59 = strSchema54.getDeprecated();
        java.lang.String str60 = strSchema54.getDescription();
        io.swagger.oas.models.media.Schema schema62 = strSchema54.maxLength((java.lang.Integer) 0);
        java.lang.Integer int63 = schema62.getMinItems();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema62.minimum(bigDecimal64);
        schema62.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        schema62.setExternalDocs(externalDocumentation68);
        io.swagger.oas.models.media.Schema schema70 = schema53.additionalProperties(schema62);
        schema6.addExtension("", (java.lang.Object) schema62);
        java.math.BigDecimal bigDecimal72 = null;
        schema62.setMaximum(bigDecimal72);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) (-1));
        schema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = strSchema25.getDeprecated();
        java.math.BigDecimal bigDecimal32 = strSchema25.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = strSchema25.$ref("no description");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema20.not(schema34);
        java.lang.String str42 = schema20.getDescription();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        strSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema0.multipleOf(bigDecimal13);
        java.lang.String str15 = schema14.toString();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("");
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Object obj13 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema15 = strSchema0.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = strSchema37.getMinLength();
        java.lang.Integer int43 = strSchema37.getMaxLength();
        java.math.BigDecimal bigDecimal44 = strSchema37.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strSchema37);
        java.lang.Integer int46 = strSchema37.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema22.example((java.lang.Object) int46);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal50 = null;
        schema49.setMinimum(bigDecimal50);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.lang.Boolean boolean11 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strSchema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        schema20.setMaxItems((java.lang.Integer) 0);
        java.lang.String str23 = schema20.toString();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.util.List<java.lang.String> strList27 = strSchema24.getRequired();
        strSchema24.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strSchema24.title("no description");
        java.lang.String str32 = schema31.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str36 = strSchema35.getTitle();
        io.swagger.oas.models.media.Schema schema38 = strSchema35.format("");
        strSchema35.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        io.swagger.oas.models.media.Schema schema45 = strSchema41.maxLength((java.lang.Integer) 1);
        schema45.setPattern("");
        io.swagger.oas.models.media.Schema schema49 = schema45.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray53 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        schema49.setEnum((java.util.List<java.lang.String>) strList54);
        strSchema35.setEnum((java.util.List<java.lang.String>) strList54);
        schema34.setRequired((java.util.List<java.lang.String>) strList54);
        schema20.setEnum((java.util.List<java.lang.String>) strList54);
        schema6.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema62 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        schema62.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema62.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str23, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getWriteOnly();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        java.lang.String str25 = schema24.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema27.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = strSchema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema24.addProperties("no description", schema35);
        schema35.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int39 = schema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = schema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema35.deprecated((java.lang.Boolean) false);
        schema18.setNot(schema35);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Integer int11 = strSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMinimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema18.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        boolean boolean30 = strSchema0.equals((java.lang.Object) schema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema29.getExtensions();
        java.lang.Boolean boolean32 = schema29.getNullable();
        java.lang.String str33 = schema29.toString();
        io.swagger.oas.models.media.Schema schema35 = schema29.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = schema17.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema5.setDiscriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema5.nullable((java.lang.Boolean) false);
        schema5.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema17.properties(strMap22);
        java.lang.String str24 = strSchema17.getPattern();
        strSchema17.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = strSchema17.exclusiveMinimum((java.lang.Boolean) true);
        schema28.setReadOnly((java.lang.Boolean) true);
        schema28.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.lang.Boolean boolean37 = strSchema34.getWriteOnly();
        strSchema34.setMaxItems((java.lang.Integer) 10);
        strSchema34.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = strSchema34.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema34.externalDocs(externalDocumentation43);
        schema28.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema34);
        io.swagger.oas.models.media.Schema schema47 = schema28.description("default");
        schema47.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema47.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = schema47.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        schema12.setExtensions(strMap54);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = strSchema56.properties(strMap61);
        java.lang.String str63 = strSchema56.getPattern();
        strSchema56.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = strSchema56.exclusiveMinimum((java.lang.Boolean) true);
        schema67.setReadOnly((java.lang.Boolean) true);
        schema67.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        java.lang.Boolean boolean76 = strSchema73.getWriteOnly();
        strSchema73.setMaxItems((java.lang.Integer) 10);
        strSchema73.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean81 = strSchema73.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = strSchema73.externalDocs(externalDocumentation82);
        schema67.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema73);
        java.lang.Integer int85 = schema67.getMaxProperties();
        schema12.setAdditionalProperties(schema67);
        java.lang.Boolean boolean87 = schema67.getReadOnly();
        schema67.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + true + "'", boolean87, true);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.description("");
        io.swagger.oas.models.media.Schema schema14 = schema8.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema18.getFormat();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal29 = null;
        schema20.setMultipleOf(bigDecimal29);
        java.lang.Integer int31 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = schema20.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        java.lang.Boolean boolean6 = schema4.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema8 = schema4.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.maximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema10.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = strSchema15.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema15.getMinProperties();
        java.lang.Integer int25 = strSchema15.getMinLength();
        strSchema15.setMaxLength((java.lang.Integer) 0);
        schema14.setNot((io.swagger.oas.models.media.Schema) strSchema15);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        java.lang.String str2 = strSchema0.getPattern();
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean10 = strSchema5.getDeprecated();
        java.lang.String str11 = strSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strSchema5.maxLength((java.lang.Integer) 0);
        java.lang.Integer int14 = strSchema5.getMaxItems();
        io.swagger.oas.models.media.Schema schema16 = strSchema5.format("");
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema5.not(schema17);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.additionalProperties(schema17);
        java.math.BigDecimal bigDecimal20 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = schema19.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str23 = schema22.getFormat();
        schema22.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strSchema17.multipleOf(bigDecimal22);
        java.lang.Boolean boolean24 = schema23.getDeprecated();
        java.lang.Boolean boolean25 = schema23.getNullable();
        schema23.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.addExtension("#/components/schemas/hi!", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        java.math.BigDecimal bigDecimal11 = schema6.getMinimum();
        java.lang.Integer int12 = schema6.getMinItems();
        schema6.setMaxItems((java.lang.Integer) 0);
        schema6.setDescription("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 100);
        schema31.setNullable((java.lang.Boolean) false);
        schema31.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema6.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = schema6.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        strSchema0.setMaxItems((java.lang.Integer) 10);
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = strSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.XML xML12 = strSchema0.getXml();
        io.swagger.oas.models.media.Schema schema14 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema14.setMaxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean17 = schema14.getWriteOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema2 = strSchema0.maxItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = strSchema0.properties(strMap3);
        java.lang.Boolean boolean5 = strSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxProperties((java.lang.Integer) 1);
        schema11.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema11.getDiscriminator();
        java.lang.Integer int15 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema17 = schema11.deprecated((java.lang.Boolean) false);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema7.not(schema17);
        java.util.List<java.lang.String> strList19 = schema17.getEnum();
        io.swagger.oas.models.media.Schema schema21 = schema17.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema17.uniqueItems((java.lang.Boolean) true);
        schema25.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML15 = null;
        strSchema7.setXml(xML15);
        strSchema7.setNullable((java.lang.Boolean) true);
        java.lang.String str19 = strSchema7.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strSchema7.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean22 = schema21.getExclusiveMinimum();
        schema21.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strSchema20.maxLength((java.lang.Integer) 1);
        schema24.setPattern("");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray32 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        schema28.setEnum((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema16.required((java.util.List<java.lang.String>) strList33);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.multipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        java.lang.Boolean boolean42 = strSchema39.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = strSchema39.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strSchema39.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        strSchema39.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = strSchema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean50 = strSchema39.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        java.lang.Boolean boolean54 = strSchema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = strSchema51.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        java.lang.Boolean boolean60 = strSchema57.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = strSchema57.type("default");
        strSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema57);
        strSchema57.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema57.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        strSchema68.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean73 = strSchema68.getDeprecated();
        strSchema68.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        strSchema68.setRequired((java.util.List<java.lang.String>) strList81);
        strSchema57.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = strSchema39.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema38.required((java.util.List<java.lang.String>) strList81);
        java.lang.Boolean boolean87 = schema86.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = strSchema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        java.lang.Boolean boolean26 = strSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = strSchema23.type("default");
        io.swagger.oas.models.media.Schema schema29 = strSchema12.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 0);
        schema29.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema9.not(schema35);
        java.lang.Boolean boolean37 = schema9.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema9.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.maximum(bigDecimal14);
        java.lang.Boolean boolean16 = schema15.getUniqueItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        schema12.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        io.swagger.oas.models.media.Schema schema21 = strSchema17.maxLength((java.lang.Integer) 1);
        schema21.setPattern("");
        io.swagger.oas.models.media.Schema schema25 = schema21.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = null;
        schema25.setXml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean34 = schema12.equals((java.lang.Object) schema31);
        java.lang.Boolean boolean35 = schema31.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema37 = schema31.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema37.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        java.lang.Boolean boolean21 = schema19.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema22.properties(strMap27);
        java.lang.String str29 = strSchema22.getPattern();
        strSchema22.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strSchema22.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema19.not(schema35);
        schema36.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.xml(xML39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema40.setXml(xML41);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        io.swagger.oas.models.media.Schema schema46 = strSchema29.not(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 0);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        schema27.setExample((java.lang.Object) schema48);
        schema48.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema48.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: false\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        strSchema9.setNot((io.swagger.oas.models.media.Schema) strSchema14);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema9.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema31.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema31.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema41.setRequired((java.util.List<java.lang.String>) strList45);
        schema30.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = strSchema9.required((java.util.List<java.lang.String>) strList45);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal51 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.lang.Boolean boolean56 = strSchema53.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = strSchema53.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        strSchema53.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema59);
        io.swagger.oas.models.media.Schema schema67 = strSchema53.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema69 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema69.setType("hi!");
        strSchema69.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        strSchema69.setNot((io.swagger.oas.models.media.Schema) strSchema74);
        strSchema69.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strSchema69.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        strSchema69.setProperties(strMap83);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = strSchema69.maximum(bigDecimal85);
        io.swagger.oas.models.media.Schema schema87 = strSchema53.addProperties("", (io.swagger.oas.models.media.Schema) strSchema69);
        io.swagger.oas.models.media.XML xML88 = null;
        schema87.setXml(xML88);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema87);
        java.lang.Boolean boolean91 = schema87.getDeprecated();
        java.lang.Boolean boolean92 = schema87.getWriteOnly();
        java.util.List<java.lang.String> strList93 = schema87.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation94 = null;
        schema87.setExternalDocs(externalDocumentation94);
        schema87.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str21 = strSchema20.getTitle();
        io.swagger.oas.models.media.Schema schema23 = strSchema20.format("");
        strSchema20.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        io.swagger.oas.models.media.Schema schema32 = strSchema26.type("");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema34.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema20.setRequired((java.util.List<java.lang.String>) strList37);
        boolean boolean41 = schema17.equals((java.lang.Object) strSchema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        io.swagger.oas.models.media.Schema schema46 = strSchema42.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean49 = schema48.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema schema53 = schema48.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = schema57.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema60 = schema57.maxLength((java.lang.Integer) 100);
        schema17.setDefault((java.lang.Object) schema57);
        java.util.List<java.lang.String> strList62 = schema17.getEnum();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strList62);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray10 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        schema8.setRequired((java.util.List<java.lang.String>) strList11);
        schema8.addEnumItemObject("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        io.swagger.oas.models.media.Schema schema19 = strSchema17.maxItems((java.lang.Integer) 100);
        schema19.setTitle("");
        java.lang.Integer int22 = schema19.getMaxLength();
        java.lang.String str23 = schema19.getPattern();
        java.lang.String str24 = schema19.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema25.not((io.swagger.oas.models.media.Schema) strSchema32);
        boolean boolean40 = schema19.equals((java.lang.Object) strSchema32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema19.setEnum((java.util.List<java.lang.String>) strList55);
        schema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema19);
        schema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema8.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        java.lang.String str9 = strSchema0.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = strSchema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        schema22.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.List<java.lang.String> strList29 = schema22.getEnum();
        java.lang.Integer int30 = schema22.getMaxLength();
        io.swagger.oas.models.media.Schema schema32 = schema22.pattern("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        schema32.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = strSchema0.additionalProperties(schema32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        schema37.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strSchema0.getExtensions();
        strSchema0.setType("no description");
        strSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema26.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean31 = schema30.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema30.setExternalDocs(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + true + "'", boolean31, true);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray23 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.List<java.lang.String> strList27 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema0.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema32 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.lang.Integer int34 = schema32.getMinItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.lang.Boolean boolean17 = strSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = strSchema14.type("default");
        java.lang.String str20 = schema19.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        schema19.setExtensions(strMap21);
        schema13.setDefault((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema25 = schema13.deprecated((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass26 = schema25.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.xml(xML11);
        schema12.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        java.lang.Integer int14 = schema12.getMaxItems();
        java.math.BigDecimal bigDecimal15 = schema12.getMaximum();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema16.minimum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema10.addProperties("no description", schema28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema10.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema35.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.lang.String str23 = schema21.getName();
        java.util.List<java.lang.String> strList24 = schema21.getRequired();
        schema21.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str27 = schema21.getType();
        java.lang.Object obj28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema21.example(obj28);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema6.minProperties((java.lang.Integer) 10);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass23 = schema20.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema26 = strSchema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strSchema18.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray31 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        schema28.setRequired((java.util.List<java.lang.String>) strList32);
        java.util.List<java.lang.String> strList35 = schema28.getEnum();
        java.lang.Integer int36 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema38 = schema28.pattern("default");
        io.swagger.oas.models.media.Schema schema40 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean41 = schema17.equals((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema42.type("");
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema50.not(schema57);
        io.swagger.oas.models.media.Schema schema62 = schema50.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema50.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        java.util.List<java.lang.String> strList68 = strSchema65.getRequired();
        strSchema65.setReadOnly((java.lang.Boolean) true);
        schema50.setNot((io.swagger.oas.models.media.Schema) strSchema65);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray73 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap74 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray73);
        strSchema65.addExtension("no description", (java.lang.Object) strMap75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = strSchema65.externalDocs(externalDocumentation77);
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema65);
        io.swagger.oas.models.media.Schema schema81 = strSchema65.writeOnly((java.lang.Boolean) true);
        schema81.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(linkParameterArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        schema6.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        java.lang.String str11 = schema10.toString();
        io.swagger.oas.models.media.Schema schema13 = schema10.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema13.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Schema schema36 = strSchema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.multipleOf(bigDecimal39);
        java.math.BigDecimal bigDecimal41 = schema40.getMaximum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = strSchema0.format("");
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.properties(strMap14);
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMinLength((java.lang.Integer) (-1));
        schema11.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        strSchema0.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int11 = strSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.lang.Boolean boolean17 = strSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = strSchema14.type("default");
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.example((java.lang.Object) schema23);
        java.lang.Boolean boolean25 = schema23.getUniqueItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML15 = null;
        strSchema7.setXml(xML15);
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = schema25.minProperties((java.lang.Integer) (-1));
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = strSchema33.properties(strMap38);
        java.lang.Integer int40 = schema39.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        java.util.List<java.lang.String> strList47 = strSchema44.getRequired();
        strSchema44.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int50 = strSchema44.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema58 = strSchema44.not((io.swagger.oas.models.media.Schema) strSchema51);
        io.swagger.oas.models.media.XML xML59 = null;
        strSchema51.setXml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema42.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema51);
        schema32.setDefault((java.lang.Object) strSchema51);
        strSchema7.setDefault((java.lang.Object) strSchema51);
        strSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        strSchema7.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = strSchema7.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema20.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.util.List<java.lang.String> strList9 = strSchema6.getRequired();
        strSchema6.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = strSchema6.getDeprecated();
        java.math.BigDecimal bigDecimal13 = strSchema6.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema14.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema20.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = strSchema26.getMinLength();
        java.lang.Integer int32 = strSchema26.getMaxLength();
        java.math.BigDecimal bigDecimal33 = strSchema26.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema25.additionalProperties((io.swagger.oas.models.media.Schema) strSchema26);
        java.lang.Integer int35 = strSchema26.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        strSchema45.setNot((io.swagger.oas.models.media.Schema) strSchema50);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strSchema45.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.type("");
        io.swagger.oas.models.media.Schema schema66 = schema64.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema75 = strSchema67.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = strSchema67.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray80 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema77.setRequired((java.util.List<java.lang.String>) strList81);
        schema66.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = strSchema45.required((java.util.List<java.lang.String>) strList81);
        strSchema36.setEnum((java.util.List<java.lang.String>) strList81);
        strSchema26.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema88 = strSchema6.required((java.util.List<java.lang.String>) strList81);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList81);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        java.lang.Integer int27 = schema26.getMaxProperties();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema26.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) (-1));
        schema19.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema31.minProperties((java.lang.Integer) (-1));
        java.lang.String str37 = schema31.getType();
        io.swagger.oas.models.media.Schema schema39 = schema31.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema39.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setDefault((java.lang.Object) (byte) 100);
        strSchema0.setMinProperties((java.lang.Integer) 0);
        strSchema0.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.util.List<java.lang.String> strList14 = strSchema11.getRequired();
        strSchema11.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = strSchema11.getMinLength();
        java.lang.String str18 = strSchema11.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strSchema0.getExtensions();
        java.lang.String str21 = strSchema0.getName();
        io.swagger.oas.models.media.Schema schema22 = strSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        io.swagger.oas.models.media.Schema schema27 = strSchema23.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean30 = schema29.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.discriminator(discriminator31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema32.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema32.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema36);
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema36);
        java.lang.String str49 = strSchema0.getName();
        io.swagger.oas.models.media.Schema schema51 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strSchema10.getExternalDocs();
        java.lang.String str16 = strSchema10.getTitle();
        strSchema10.setName("default");
        strSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema schema27 = strSchema21.type("");
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray31 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        schema29.setRequired((java.util.List<java.lang.String>) strList32);
        io.swagger.oas.models.media.Schema schema35 = strSchema10.required((java.util.List<java.lang.String>) strList32);
        io.swagger.oas.models.media.Schema schema36 = schema9.required((java.util.List<java.lang.String>) strList32);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema36.setExternalDocs(externalDocumentation39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        java.util.List<java.lang.String> strList56 = strSchema53.getRequired();
        strSchema53.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int59 = strSchema53.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema53.not((io.swagger.oas.models.media.Schema) strSchema60);
        java.lang.Boolean boolean68 = strSchema53.getUniqueItems();
        java.lang.Boolean boolean69 = strSchema53.getNullable();
        strSchema53.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema73 = strSchema53.$ref("");
        io.swagger.oas.models.media.Schema schema74 = schema52.example((java.lang.Object) "");
        schema74.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = strSchema0.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema42 = schema40.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema53 = schema51.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema51.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        java.lang.Boolean boolean59 = strSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema61 = strSchema56.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = strSchema56.getProperties();
        schema55.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema56);
        java.lang.String str64 = strSchema56.getPattern();
        io.swagger.oas.models.media.Schema schema66 = strSchema56.$ref("default");
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = strSchema56.multipleOf(bigDecimal67);
        schema42.setExample((java.lang.Object) strSchema56);
        io.swagger.oas.models.media.Schema schema71 = schema42.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str72 = schema42.getType();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int15 = schema14.getMaxItems();
        schema14.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minLength((java.lang.Integer) 1);
        schema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.lang.Boolean boolean17 = strSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = strSchema14.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = strSchema14.getProperties();
        io.swagger.oas.models.media.Schema schema22 = strSchema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema13.example((java.lang.Object) strSchema14);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = strSchema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = strSchema24.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = strSchema37.properties(strMap42);
        java.lang.Integer int44 = schema43.getMaxProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.type("*/*");
        schema34.setAdditionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema46.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        java.lang.Integer int57 = schema56.getMaxProperties();
        java.math.BigDecimal bigDecimal58 = null;
        schema56.setMinimum(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = schema56.getMultipleOf();
        io.swagger.oas.models.media.Schema schema62 = schema56.uniqueItems((java.lang.Boolean) true);
        java.lang.String str63 = schema56.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        strSchema64.setName("no description");
        io.swagger.oas.models.media.Schema schema70 = strSchema64.type("");
        io.swagger.oas.models.media.Schema schema72 = schema70.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        strSchema73.setName("no description");
        io.swagger.oas.models.media.Schema schema79 = strSchema73.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema73.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = strSchema73.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray86 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema83.setRequired((java.util.List<java.lang.String>) strList87);
        schema72.setRequired((java.util.List<java.lang.String>) strList87);
        schema56.setEnum((java.util.List<java.lang.String>) strList87);
        schema46.setRequired((java.util.List<java.lang.String>) strList87);
        strSchema14.setEnum((java.util.List<java.lang.String>) strList87);
        java.lang.Boolean boolean94 = strSchema14.getWriteOnly();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(boolean94);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        boolean boolean5 = strSchema0.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strSchema0.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strSchema0.deprecated((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 0);
        java.lang.Object obj12 = schema9.getExample();
        schema9.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema16 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        schema43.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema43.addRequiredItem("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.minimum(bigDecimal48);
        schema33.setAdditionalProperties(schema43);
        java.math.BigDecimal bigDecimal51 = schema33.getMultipleOf();
        io.swagger.oas.models.media.Schema schema53 = schema33.exclusiveMinimum((java.lang.Boolean) true);
        schema33.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema33.getNot();
        io.swagger.oas.models.media.Schema schema58 = schema56.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema58.getExtensions();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap59);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.discriminator(discriminator44);
        schema42.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.Integer int59 = strSchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        java.lang.Integer int67 = schema66.getMaxProperties();
        java.math.BigDecimal bigDecimal68 = null;
        schema66.setMinimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema66.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema66.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) true);
        boolean boolean78 = strSchema48.equals((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema79 = schema42.not((io.swagger.oas.models.media.Schema) strSchema48);
        java.lang.Boolean boolean80 = strSchema48.getWriteOnly();
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema48);
        io.swagger.oas.models.media.Schema schema83 = strSchema0.nullable((java.lang.Boolean) false);
        strSchema0.setTitle("#/components/schemas/no description");
        java.lang.Integer int86 = strSchema0.getMinItems();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        io.swagger.oas.models.media.Schema schema10 = strSchema6.maxLength((java.lang.Integer) 1);
        schema10.setPattern("");
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray18 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        schema14.setEnum((java.util.List<java.lang.String>) strList19);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList19);
        strSchema0.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str25 = strSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema27 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        io.swagger.oas.models.media.Schema schema34 = strSchema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean37 = schema36.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.discriminator(discriminator38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema39.setExternalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setName("no description");
        io.swagger.oas.models.media.Schema schema49 = strSchema43.type("");
        io.swagger.oas.models.media.Schema schema51 = strSchema43.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = strSchema43.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema43);
        io.swagger.oas.models.media.Schema schema56 = schema39.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML57 = schema56.getXml();
        strSchema0.setDefault((java.lang.Object) schema56);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(xML57);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str23 = strSchema22.getTitle();
        io.swagger.oas.models.media.Schema schema25 = strSchema22.format("");
        strSchema22.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = strSchema22.getMaximum();
        java.math.BigDecimal bigDecimal29 = strSchema22.getMinimum();
        io.swagger.oas.models.media.Schema schema31 = strSchema22.deprecated((java.lang.Boolean) true);
        schema31.setMinLength((java.lang.Integer) (-1));
        schema21.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) 100);
        schema36.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema10.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema10.getExternalDocs();
        java.lang.String str19 = schema10.getName();
        io.swagger.oas.models.media.XML xML20 = null;
        schema10.setXml(xML20);
        java.lang.Integer int22 = schema10.getMaxProperties();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        java.lang.String str10 = schema9.getType();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.maximum(bigDecimal11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        schema9.setExtensions(strMap13);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        schema10.setName("");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = strSchema50.properties(strMap55);
        java.lang.Integer int57 = schema56.getMaxProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = schema56.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = strSchema62.getMinLength();
        java.lang.Integer int68 = strSchema62.getMaxLength();
        java.math.BigDecimal bigDecimal69 = strSchema62.getMaximum();
        io.swagger.oas.models.media.Schema schema70 = schema61.additionalProperties((io.swagger.oas.models.media.Schema) strSchema62);
        strSchema62.setType("");
        java.lang.Integer int73 = strSchema62.getMaxLength();
        io.swagger.oas.models.media.Schema schema75 = strSchema62.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = strSchema62.getProperties();
        schema46.addExtension("hi!", (java.lang.Object) strSchema62);
        io.swagger.oas.models.media.XML xML78 = null;
        schema46.setXml(xML78);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap76);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMinimum(bigDecimal17);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema13);
        schema24.setDescription("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema28.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj31 = schema28.getExample();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + obj31 + "' != '" + (short) 0 + "'", obj31, (short) 0);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strSchema20.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema24.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean27 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema26.getExternalDocs();
        java.math.BigDecimal bigDecimal29 = schema26.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        strSchema31.setName("no description");
        io.swagger.oas.models.media.Schema schema37 = strSchema31.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema31);
        strSchema31.addEnumItemObject("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList41 = strSchema31.getEnum();
        io.swagger.oas.models.media.Schema schema42 = schema16.required(strList41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = schema16.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = schema16.minLength((java.lang.Integer) 1);
        java.lang.Object obj46 = schema45.getExample();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinItems();
        schema8.setExample((java.lang.Object) 0.0f);
        java.lang.Boolean boolean12 = schema8.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        java.lang.String str20 = strSchema13.getPattern();
        strSchema13.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = strSchema13.exclusiveMinimum((java.lang.Boolean) true);
        schema24.setReadOnly((java.lang.Boolean) true);
        schema24.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.lang.Boolean boolean33 = strSchema30.getWriteOnly();
        strSchema30.setMaxItems((java.lang.Integer) 10);
        strSchema30.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = strSchema30.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = strSchema30.externalDocs(externalDocumentation39);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema30);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema24.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator48 = schema24.getDiscriminator();
        java.lang.String str49 = schema24.getPattern();
        boolean boolean50 = schema8.equals((java.lang.Object) str49);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        java.util.List<java.lang.String> strList55 = strSchema52.getRequired();
        strSchema52.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int58 = strSchema52.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema66 = strSchema52.not((io.swagger.oas.models.media.Schema) strSchema59);
        strSchema59.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema70 = strSchema59.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema72 = strSchema59.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = strSchema59.$ref("");
        strSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema59.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema schema80 = strSchema59.minProperties((java.lang.Integer) 100);
        java.lang.String str81 = strSchema59.getType();
        strSchema59.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema59);
        java.math.BigDecimal bigDecimal85 = null;
        strSchema59.setMinimum(bigDecimal85);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.multipleOf(bigDecimal15);
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean19 = strSchema0.getExclusiveMinimum();
        java.lang.String str20 = strSchema0.getDescription();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema0.minimum(bigDecimal21);
        strSchema0.setType("");
        java.lang.Integer int25 = strSchema0.getMaxProperties();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        schema39.setFormat("");
        schema39.setTitle("hi!");
        schema39.setDeprecated((java.lang.Boolean) true);
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema39.getDeprecated();
        boolean boolean51 = schema24.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema53 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + true + "'", boolean50, true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        schema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxLength((java.lang.Integer) (-1));
        java.lang.String str26 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema28 = schema12.format("");
        java.lang.String str29 = schema28.getPattern();
        java.lang.String[] strArray32 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        boolean boolean35 = schema28.equals((java.lang.Object) tagSetOptional34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.util.List<java.lang.String> strList40 = strSchema37.getRequired();
        strSchema37.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int43 = strSchema37.getMinLength();
        java.lang.String str44 = strSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema46 = strSchema37.name("");
        java.lang.Object obj47 = strSchema37.getExample();
        io.swagger.oas.models.media.Schema schema49 = strSchema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = strSchema51.properties(strMap56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = strSchema51.discriminator(discriminator58);
        io.swagger.oas.models.media.Schema schema61 = schema59.description("default");
        java.math.BigDecimal bigDecimal62 = schema61.getMultipleOf();
        io.swagger.oas.models.media.Schema schema63 = strSchema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        io.swagger.oas.models.media.Schema schema64 = schema28.addProperties("default", schema63);
        java.lang.String str65 = schema63.getTitle();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema6.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = strSchema17.getDeprecated();
        strSchema17.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        strSchema17.setRequired((java.util.List<java.lang.String>) strList30);
        strSchema6.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = strSchema6.minLength((java.lang.Integer) (-1));
        java.lang.String str36 = strSchema6.getName();
        io.swagger.oas.models.media.Schema schema38 = strSchema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMultipleOf(bigDecimal19);
        java.lang.Boolean boolean21 = schema18.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator22 = schema18.getDiscriminator();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(discriminator22);
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int9 = schema8.getMinLength();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        schema11.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str16 = schema11.getDescription();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.XML xML15 = null;
        strSchema7.setXml(xML15);
        strSchema7.setNullable((java.lang.Boolean) true);
        java.lang.String str19 = strSchema7.get$ref();
        java.lang.String str20 = strSchema7.getName();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "no description" + "'", str20, "no description");
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        strSchema7.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = strSchema0.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean21 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int24 = strSchema0.getMinLength();
        java.lang.Boolean boolean25 = strSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        java.lang.String str22 = schema18.getFormat();
        java.math.BigDecimal bigDecimal23 = schema18.getMinimum();
        io.swagger.oas.models.media.Schema schema25 = schema18.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.lang.Boolean boolean23 = schema20.getExclusiveMaximum();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = strSchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema29.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        io.swagger.oas.models.media.Schema schema46 = strSchema29.not(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 0);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        schema27.setExample((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema53 = schema48.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int54 = schema53.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = schema53.getNot();
        java.util.List<java.lang.String> strList56 = schema55.getRequired();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema9.minimum(bigDecimal34);
        java.lang.String str36 = schema35.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.maximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strSchema23.properties(strMap28);
        strSchema23.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.pattern("no description");
        java.util.List<java.lang.String> strList34 = schema33.getEnum();
        schema20.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int42 = strSchema36.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        strSchema36.setMinimum(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = strSchema36.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema46.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema46.setNullable((java.lang.Boolean) true);
        schema20.setExample((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema58 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema20.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema61.setType("hi!");
        java.lang.Boolean boolean64 = strSchema61.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = strSchema61.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = strSchema67.getMinLength();
        strSchema67.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema66.setNot((io.swagger.oas.models.media.Schema) strSchema67);
        java.math.BigDecimal bigDecimal76 = strSchema67.getMultipleOf();
        io.swagger.oas.models.media.Schema schema77 = schema20.not((io.swagger.oas.models.media.Schema) strSchema67);
        java.lang.Boolean boolean78 = strSchema67.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema22 = schema19.minLength((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema19.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        strSchema0.setName("default");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strSchema0.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strSchema18.properties(strMap23);
        java.lang.Integer int25 = schema24.getMaxProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema24.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = strSchema30.getMinLength();
        java.lang.Integer int36 = strSchema30.getMaxLength();
        java.math.BigDecimal bigDecimal37 = strSchema30.getMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema29.additionalProperties((io.swagger.oas.models.media.Schema) strSchema30);
        strSchema30.setType("");
        io.swagger.oas.models.media.Schema schema41 = schema16.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema30);
        io.swagger.oas.models.media.Schema schema42 = strSchema30.getNot();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        io.swagger.oas.models.media.Schema schema47 = strSchema43.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema47.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean50 = schema49.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema49.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        io.swagger.oas.models.media.Schema schema58 = strSchema54.maxLength((java.lang.Integer) 1);
        schema58.setPattern("");
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray66 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        schema62.setEnum((java.util.List<java.lang.String>) strList67);
        schema53.setEnum((java.util.List<java.lang.String>) strList67);
        strSchema30.setEnum((java.util.List<java.lang.String>) strList67);
        strSchema0.setEnum((java.util.List<java.lang.String>) strList67);
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        java.lang.Integer int20 = schema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.type("*/*");
        schema10.setAdditionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.maxItems((java.lang.Integer) 1);
        schema22.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema22.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj30 = schema29.getExample();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        java.lang.Integer int4 = strSchema0.getMinItems();
        strSchema0.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.math.BigDecimal bigDecimal36 = null;
        schema33.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema33.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        io.swagger.oas.models.media.Schema schema17 = strSchema13.maxLength((java.lang.Integer) 1);
        schema17.setPattern("");
        io.swagger.oas.models.media.Schema schema21 = schema17.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 10);
        java.lang.String str24 = schema23.toString();
        io.swagger.oas.models.media.Schema schema26 = schema23.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema28.uniqueItems((java.lang.Boolean) false);
        boolean boolean33 = schema8.equals((java.lang.Object) false);
        java.math.BigDecimal bigDecimal34 = null;
        schema8.setMaximum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str24, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema6.pattern("*/*");
        io.swagger.oas.models.media.Schema schema28 = schema6.minItems((java.lang.Integer) 0);
        java.lang.Integer int29 = schema28.getMinProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.title("");
        schema25.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema4.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema17.minProperties((java.lang.Integer) (-1));
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = strSchema34.getDeprecated();
        java.lang.String str40 = strSchema34.getDescription();
        io.swagger.oas.models.media.Schema schema42 = strSchema34.maxLength((java.lang.Integer) 0);
        java.lang.Integer int43 = strSchema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema45 = strSchema34.format("");
        io.swagger.oas.models.media.Schema schema47 = strSchema34.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setDeprecated((java.lang.Boolean) true);
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema52.properties(strMap57);
        java.lang.Boolean boolean59 = strSchema52.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        io.swagger.oas.models.media.Schema schema64 = strSchema60.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema64.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean67 = schema66.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = schema66.getExternalDocs();
        java.math.BigDecimal bigDecimal69 = schema66.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema71.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema78 = schema66.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema71);
        io.swagger.oas.models.media.Schema schema80 = schema78.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = schema80.getProperties();
        io.swagger.oas.models.media.Schema schema82 = strSchema52.properties(strMap81);
        io.swagger.oas.models.media.Schema schema83 = schema47.properties(strMap81);
        strSchema23.setProperties(strMap81);
        schema17.setProperties(strMap81);
        schema4.setProperties(strMap81);
        io.swagger.oas.models.media.Schema schema88 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        schema4.setDiscriminator(discriminator89);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        schema4.setExternalDocs(externalDocumentation91);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(externalDocumentation68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        schema20.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema8.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema12.properties(strMap17);
        java.lang.Integer int19 = schema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = schema18.addRequiredItem("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        schema25.setExtensions(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema25.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = schema29.getMaxItems();
        schema8.setNot(schema29);
        java.math.BigDecimal bigDecimal32 = null;
        schema29.setMaximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean7 = schema6.getDeprecated();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema24 = strSchema10.not((io.swagger.oas.models.media.Schema) strSchema17);
        strSchema17.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema28 = strSchema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = strSchema17.format("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean32 = strSchema31.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = strSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema35 = strSchema31.description("");
        schema35.setPattern("hi!");
        java.lang.Integer int38 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema40 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = strSchema17.not(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Schema schema45 = schema6.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int55 = schema54.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setName("no description");
        io.swagger.oas.models.media.Schema schema62 = strSchema56.type("");
        io.swagger.oas.models.media.Schema schema64 = schema62.format("no description");
        io.swagger.oas.models.media.Schema schema65 = schema54.not(schema64);
        io.swagger.oas.models.media.Schema schema67 = schema64.format("default");
        io.swagger.oas.models.media.Schema schema69 = schema64.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal70 = null;
        schema69.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.xml(xML72);
        java.math.BigDecimal bigDecimal74 = null;
        schema69.setMinimum(bigDecimal74);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema76 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema76.setType("hi!");
        java.lang.Boolean boolean79 = strSchema76.getWriteOnly();
        io.swagger.oas.models.media.Schema schema81 = strSchema76.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema82 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema82.setType("hi!");
        strSchema82.setName("no description");
        io.swagger.oas.models.media.Schema schema88 = strSchema82.type("");
        java.lang.Integer int89 = schema88.getMaxProperties();
        java.math.BigDecimal bigDecimal90 = null;
        schema88.setMinimum(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema88.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema94 = schema88.getAdditionalProperties();
        boolean boolean95 = strSchema76.equals((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema97 = schema88.minProperties((java.lang.Integer) (-1));
        boolean boolean98 = schema69.equals((java.lang.Object) schema97);
        schema6.setDefault((java.lang.Object) boolean98);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strSchema0.getExternalDocs();
        java.lang.String str6 = strSchema0.getTitle();
        strSchema0.setMaxItems((java.lang.Integer) (-1));
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = strSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str10 = strSchema9.getTitle();
        io.swagger.oas.models.media.Schema schema12 = strSchema9.format("");
        io.swagger.oas.models.media.Schema schema14 = strSchema9.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) true);
        schema8.setNot(schema16);
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        java.lang.Integer int28 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = schema27.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = strSchema33.getMinLength();
        java.lang.Integer int39 = strSchema33.getMaxLength();
        java.math.BigDecimal bigDecimal40 = strSchema33.getMaximum();
        io.swagger.oas.models.media.Schema schema41 = schema32.additionalProperties((io.swagger.oas.models.media.Schema) strSchema33);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema8.not(schema42);
        io.swagger.oas.models.media.Schema schema44 = schema8.getNot();
        java.math.BigDecimal bigDecimal45 = schema8.getMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.discriminator(discriminator15);
        java.lang.Integer int17 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        strSchema18.setNot((io.swagger.oas.models.media.Schema) strSchema23);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema18.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema31 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema31.setType("hi!");
        java.util.List<java.lang.String> strList34 = strSchema31.getRequired();
        strSchema31.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strSchema31.title("no description");
        java.lang.String str39 = schema38.getDescription();
        boolean boolean40 = schema30.equals((java.lang.Object) schema38);
        java.util.List<java.lang.String> strList41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.required(strList41);
        schema38.setMaxItems((java.lang.Integer) 10);
        schema38.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean47 = schema38.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        java.lang.Boolean boolean62 = strSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strSchema59.type("default");
        io.swagger.oas.models.media.Schema schema65 = strSchema48.not(schema64);
        java.math.BigDecimal bigDecimal66 = null;
        schema64.setMultipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        io.swagger.oas.models.media.Schema schema72 = strSchema68.maxLength((java.lang.Integer) 1);
        schema72.setPattern("");
        io.swagger.oas.models.media.Schema schema76 = schema72.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray80 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema76.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema64.required((java.util.List<java.lang.String>) strList81);
        schema38.setEnum((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema86 = schema10.required((java.util.List<java.lang.String>) strList81);
        java.lang.String str87 = schema86.getFormat();
        java.lang.String str88 = schema86.getPattern();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = strSchema18.getDeprecated();
        java.lang.String str24 = strSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema26 = strSchema18.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema18.minimum(bigDecimal27);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema18);
        io.swagger.oas.models.media.Schema schema31 = strSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = strSchema0.description("");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = strSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema10.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray23 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        schema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.List<java.lang.String> strList27 = schema20.getEnum();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = strSchema29.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = strSchema29.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = strSchema37.properties(strMap42);
        java.lang.Integer int44 = schema43.getMaxProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema36.not(schema46);
        schema46.setNullable((java.lang.Boolean) false);
        java.lang.Integer int50 = schema46.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = schema46.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setAdditionalProperties(schema52);
        java.lang.String str54 = schema28.getDescription();
        schema28.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema16.description("default");
        schema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema16.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema0.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        io.swagger.oas.models.media.Schema schema18 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema18.getMaxItems();
        io.swagger.oas.models.media.Schema schema21 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema18.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal25 = null;
        schema23.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str28 = strSchema27.getTitle();
        io.swagger.oas.models.media.Schema schema30 = strSchema27.format("");
        schema30.addEnumItemObject("");
        io.swagger.oas.models.media.Schema schema33 = schema30.getNot();
        java.lang.Integer int34 = schema30.getMaxLength();
        schema30.setMaxProperties((java.lang.Integer) 10);
        boolean boolean37 = schema23.equals((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema39 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema30.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema21.getProperties();
        java.math.BigDecimal bigDecimal23 = null;
        schema21.setMultipleOf(bigDecimal23);
        schema21.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema21.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema6.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema6.format("");
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        java.lang.Boolean boolean7 = strSchema0.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        strSchema0.setExternalDocs(externalDocumentation8);
        java.lang.String str10 = strSchema0.get$ref();
        java.lang.Boolean boolean11 = strSchema0.getWriteOnly();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        schema30.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema30.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        strSchema36.setName("no description");
        io.swagger.oas.models.media.Schema schema42 = strSchema36.type("");
        java.lang.Integer int43 = schema42.getMaxProperties();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema42.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema42.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) true);
        java.lang.String str54 = schema53.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.discriminator(discriminator55);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema59 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema59.setType("hi!");
        strSchema59.setName("no description");
        io.swagger.oas.models.media.Schema schema65 = strSchema59.type("");
        io.swagger.oas.models.media.Schema schema67 = strSchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = strSchema59.maxItems((java.lang.Integer) 100);
        java.lang.Integer int70 = strSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema schema77 = strSchema71.type("");
        java.lang.Integer int78 = schema77.getMaxProperties();
        java.math.BigDecimal bigDecimal79 = null;
        schema77.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema77.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        schema77.setExternalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema77.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) true);
        boolean boolean89 = strSchema59.equals((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema90 = schema53.not((io.swagger.oas.models.media.Schema) strSchema59);
        java.lang.Integer int91 = strSchema59.getMaxLength();
        io.swagger.oas.models.media.Schema schema92 = schema34.addProperties("", (io.swagger.oas.models.media.Schema) strSchema59);
        io.swagger.oas.models.media.Schema schema94 = schema92.maxProperties((java.lang.Integer) 100);
        schema94.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str97 = schema94.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str97, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        strSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema10.properties(strMap15);
        java.lang.Integer int17 = schema16.getMaxProperties();
        io.swagger.oas.models.media.Schema schema19 = schema16.minProperties((java.lang.Integer) 0);
        java.lang.Integer int20 = schema19.getMaxProperties();
        java.util.List<java.lang.String> strList21 = schema19.getEnum();
        strSchema0.addExtension("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema24 = schema19.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.addRequiredItem("hi!");
        java.lang.Boolean boolean8 = strSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean11 = schema10.getExclusiveMinimum();
        schema10.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        java.util.List<java.lang.String> strList33 = strSchema30.getRequired();
        strSchema30.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int36 = strSchema30.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema44 = strSchema30.not((io.swagger.oas.models.media.Schema) strSchema37);
        strSchema37.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema48 = strSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema49.setType("hi!");
        io.swagger.oas.models.media.Schema schema53 = strSchema49.maxLength((java.lang.Integer) 1);
        schema53.setPattern("");
        schema48.setNot(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema29.not(schema53);
        java.lang.Boolean boolean58 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema60 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList61 = schema60.getRequired();
        schema60.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strList61);
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.minLength((java.lang.Integer) 100);
        schema17.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = strSchema18.getDeprecated();
        java.lang.String str24 = strSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema26 = strSchema18.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema18.minimum(bigDecimal27);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema18);
        strSchema18.setMinLength((java.lang.Integer) 10);
        strSchema18.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 0);
        schema19.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str22 = schema19.getPattern();
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMinimum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML9 = schema8.getXml();
        io.swagger.oas.models.media.Schema schema11 = schema8.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.lang.Boolean boolean16 = strSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = strSchema13.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = strSchema13.getProperties();
        java.util.List<java.lang.String> strList20 = strSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strSchema13.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        schema30.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema30.example((java.lang.Object) '#');
        java.lang.Boolean boolean35 = schema30.getNullable();
        io.swagger.oas.models.media.Schema schema37 = schema30.maxItems((java.lang.Integer) 100);
        schema30.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema30.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema42 = schema22.example((java.lang.Object) bigDecimal40);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema23.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema23.getProperties();
        java.lang.Integer int32 = schema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema13.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str25 = strSchema24.getTitle();
        io.swagger.oas.models.media.Schema schema27 = strSchema24.format("");
        strSchema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema38.setRequired((java.util.List<java.lang.String>) strList41);
        strSchema24.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = schema23.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        strSchema0.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.$ref("no description");
        io.swagger.oas.models.media.Schema schema54 = schema52.minProperties((java.lang.Integer) 100);
        schema54.setMinLength((java.lang.Integer) 1);
        java.lang.String str57 = schema54.getTitle();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema10 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strSchema0.$ref("default");
        java.lang.String str13 = strSchema0.getDefault();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = strSchema9.getDeprecated();
        java.lang.String str15 = strSchema9.getDescription();
        io.swagger.oas.models.media.Schema schema17 = strSchema9.maxLength((java.lang.Integer) 0);
        java.lang.Integer int18 = strSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema20 = strSchema9.format("");
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = strSchema9.not(schema21);
        strSchema0.setDefault((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema25 = strSchema0.maxItems((java.lang.Integer) 1);
        java.lang.Object obj26 = schema25.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.externalDocs(externalDocumentation27);
        java.lang.String str29 = schema25.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.name("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        schema6.setDiscriminator(discriminator7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.discriminator(discriminator9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.XML xML13 = schema6.getXml();
        io.swagger.oas.models.media.Schema schema15 = schema6.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        schema31.setPattern("");
        io.swagger.oas.models.media.Schema schema35 = schema31.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema35.setExternalDocs(externalDocumentation38);
        java.lang.String str40 = schema35.getType();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = strSchema41.getDeprecated();
        java.lang.String str47 = strSchema41.getDescription();
        io.swagger.oas.models.media.Schema schema49 = strSchema41.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema49.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setName("no description");
        io.swagger.oas.models.media.Schema schema60 = strSchema54.type("");
        io.swagger.oas.models.media.Schema schema62 = schema60.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema63 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema63.setType("hi!");
        strSchema63.setName("no description");
        io.swagger.oas.models.media.Schema schema69 = strSchema63.type("");
        io.swagger.oas.models.media.Schema schema71 = strSchema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = strSchema63.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray76 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        schema73.setRequired((java.util.List<java.lang.String>) strList77);
        schema62.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema81 = schema53.required((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema82 = schema35.required((java.util.List<java.lang.String>) strList77);
        schema22.setEnum((java.util.List<java.lang.String>) strList77);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema22.maximum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = schema22.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str12 = strSchema11.getTitle();
        io.swagger.oas.models.media.Schema schema14 = strSchema11.format("");
        io.swagger.oas.models.media.Schema schema16 = strSchema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema9.additionalProperties(schema16);
        java.lang.Object obj20 = schema9.getExample();
        java.lang.String str21 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean27 = strSchema22.getDeprecated();
        io.swagger.oas.models.media.Schema schema29 = strSchema22.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema30.properties(strMap35);
        java.lang.Integer int37 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema29.not(schema39);
        io.swagger.oas.models.media.Schema schema42 = schema29.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema42.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema9.additionalProperties(schema42);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema42.maximum(bigDecimal46);
        schema47.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.lang.Integer int23 = strSchema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema24 = strSchema12.getAdditionalProperties();
        io.swagger.oas.models.media.Discriminator discriminator25 = strSchema12.getDiscriminator();
        java.lang.String str26 = strSchema12.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean16 = schema15.getUniqueItems();
        schema15.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        java.lang.Integer int26 = schema25.getMaxProperties();
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMinimum(bigDecimal27);
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        java.util.List<java.lang.String> strList41 = strSchema38.getRequired();
        strSchema38.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int44 = strSchema38.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        io.swagger.oas.models.media.Schema schema51 = strSchema45.type("");
        io.swagger.oas.models.media.Schema schema52 = strSchema38.not((io.swagger.oas.models.media.Schema) strSchema45);
        strSchema33.setExample((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.maxProperties((java.lang.Integer) (-1));
        schema32.setExample((java.lang.Object) schema52);
        boolean boolean57 = schema15.equals((java.lang.Object) schema32);
        java.lang.Integer int58 = schema32.getMinLength();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        java.util.List<java.lang.String> strList12 = strSchema9.getRequired();
        strSchema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int15 = strSchema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema9.not((io.swagger.oas.models.media.Schema) strSchema16);
        java.lang.Boolean boolean24 = strSchema9.getUniqueItems();
        java.lang.Boolean boolean25 = strSchema9.getNullable();
        strSchema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema36.not(schema43);
        io.swagger.oas.models.media.Schema schema48 = schema36.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema36.name("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema36.writeOnly((java.lang.Boolean) false);
        strSchema9.setExample((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema54 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: [no description]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema9);
        java.lang.Integer int55 = strSchema9.getMaxLength();
        io.swagger.oas.models.media.Schema schema57 = strSchema9.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strSchema30.properties(strMap35);
        java.lang.Integer int37 = schema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema36.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = strSchema42.getMinLength();
        java.lang.Integer int48 = strSchema42.getMaxLength();
        java.math.BigDecimal bigDecimal49 = strSchema42.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema41.additionalProperties((io.swagger.oas.models.media.Schema) strSchema42);
        io.swagger.oas.models.media.Schema schema52 = schema50.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema20.addProperties("default", schema50);
        io.swagger.oas.models.media.Schema schema55 = schema50.minLength((java.lang.Integer) (-1));
        schema50.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema5.writeOnly((java.lang.Boolean) true);
        java.lang.String str8 = schema5.getType();
        io.swagger.oas.models.media.Schema schema10 = schema5.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.lang.Boolean boolean9 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        schema16.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema16.addRequiredItem("");
        schema16.setReadOnly((java.lang.Boolean) true);
        schema16.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema16.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str33 = strSchema32.getTitle();
        io.swagger.oas.models.media.Schema schema35 = strSchema32.format("");
        io.swagger.oas.models.media.Schema schema37 = strSchema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strSchema32.description("*/*");
        strSchema32.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = strSchema32.xml(xML42);
        java.lang.String str44 = strSchema32.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean46 = strSchema45.getNullable();
        java.lang.Object obj47 = strSchema45.getExample();
        io.swagger.oas.models.media.Schema schema49 = strSchema45.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = strSchema32.not(schema49);
        io.swagger.oas.models.media.Schema schema51 = schema31.not(schema50);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema52 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema52.setType("hi!");
        strSchema52.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = strSchema52.properties(strMap57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        strSchema52.setExternalDocs(externalDocumentation59);
        java.lang.Integer int61 = strSchema52.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = strSchema62.properties(strMap67);
        java.lang.String str69 = strSchema62.getPattern();
        strSchema62.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema73 = strSchema62.exclusiveMinimum((java.lang.Boolean) true);
        schema73.setReadOnly((java.lang.Boolean) true);
        schema73.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema79 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema79.setType("hi!");
        java.lang.Boolean boolean82 = strSchema79.getWriteOnly();
        strSchema79.setMaxItems((java.lang.Integer) 10);
        strSchema79.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean87 = strSchema79.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        io.swagger.oas.models.media.Schema schema89 = strSchema79.externalDocs(externalDocumentation88);
        schema73.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema79);
        io.swagger.oas.models.media.Schema schema92 = schema73.description("default");
        java.math.BigDecimal bigDecimal93 = schema73.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = schema73.getExtensions();
        strSchema52.setExtensions(strMap94);
        schema31.setExtensions(strMap94);
        schema5.setExtensions(strMap94);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        java.math.BigDecimal bigDecimal11 = null;
        schema6.setMaximum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.nullable((java.lang.Boolean) true);
        schema23.setWriteOnly((java.lang.Boolean) false);
        schema6.setDefault((java.lang.Object) schema23);
        schema6.setDeprecated((java.lang.Boolean) true);
        schema6.setPattern("");
        io.swagger.oas.models.media.Schema schema32 = schema6.maxProperties((java.lang.Integer) 10);
        schema32.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        java.lang.Integer int42 = schema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema43 = schema41.getNot();
        schema41.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema41.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema41.uniqueItems((java.lang.Boolean) false);
        schema41.setPattern("class Schema {\n    title: default\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema32.example((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema54 = schema52.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.String str18 = schema10.toString();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = strSchema27.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str46 = strSchema45.getTitle();
        io.swagger.oas.models.media.Schema schema48 = strSchema45.format("");
        strSchema45.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        io.swagger.oas.models.media.Schema schema55 = strSchema51.maxLength((java.lang.Integer) 1);
        schema55.setPattern("");
        io.swagger.oas.models.media.Schema schema59 = schema55.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray63 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema59.setEnum((java.util.List<java.lang.String>) strList64);
        strSchema45.setEnum((java.util.List<java.lang.String>) strList64);
        schema44.setRequired((java.util.List<java.lang.String>) strList64);
        schema33.setRequired((java.util.List<java.lang.String>) strList64);
        schema24.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema71 = schema10.required((java.util.List<java.lang.String>) strList64);
        schema71.setMaxLength((java.lang.Integer) 10);
        java.lang.String str74 = schema71.getType();
        io.swagger.oas.models.media.Schema schema76 = schema71.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema12.setMinimum(bigDecimal23);
        java.lang.Boolean boolean25 = strSchema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema27 = strSchema12.writeOnly((java.lang.Boolean) true);
        strSchema12.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        java.lang.Integer int12 = schema11.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema13.properties(strMap18);
        strSchema13.setMaxLength((java.lang.Integer) 0);
        strSchema13.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strSchema24.properties(strMap29);
        java.lang.String str31 = strSchema24.getPattern();
        strSchema24.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = strSchema24.exclusiveMinimum((java.lang.Boolean) true);
        schema35.setReadOnly((java.lang.Boolean) true);
        schema35.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        java.lang.Boolean boolean44 = strSchema41.getWriteOnly();
        strSchema41.setMaxItems((java.lang.Integer) 10);
        strSchema41.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean49 = strSchema41.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = strSchema41.externalDocs(externalDocumentation50);
        schema35.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema41);
        io.swagger.oas.models.media.Schema schema54 = schema35.description("default");
        schema54.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema58 = schema54.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = schema54.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema60.getExtensions();
        strSchema13.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema11.not((io.swagger.oas.models.media.Schema) strSchema13);
        io.swagger.oas.models.media.Schema schema65 = schema63.writeOnly((java.lang.Boolean) true);
        java.lang.String str66 = schema63.getType();
        java.lang.Boolean boolean67 = schema63.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.minimum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.nullable((java.lang.Boolean) true);
        java.lang.String str9 = strSchema0.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.xml(xML10);
        java.math.BigDecimal bigDecimal12 = strSchema0.getMaximum();
        java.math.BigDecimal bigDecimal13 = strSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = strSchema0.minLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList16 = strSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str21 = schema20.getName();
        schema20.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML24 = schema20.getXml();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.discriminator(discriminator34);
        java.lang.String str36 = schema35.getFormat();
        java.math.BigDecimal bigDecimal37 = schema35.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = strSchema40.getDeprecated();
        java.lang.String str46 = strSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema48 = strSchema40.maxLength((java.lang.Integer) 0);
        java.lang.Integer int49 = strSchema40.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = strSchema40.format("");
        io.swagger.oas.models.media.Schema schema53 = strSchema40.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema53.setDeprecated((java.lang.Boolean) true);
        schema53.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = strSchema58.properties(strMap63);
        java.lang.Boolean boolean65 = strSchema58.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema66 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema66.setType("hi!");
        io.swagger.oas.models.media.Schema schema70 = strSchema66.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema72 = schema70.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean73 = schema72.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = schema72.getExternalDocs();
        java.math.BigDecimal bigDecimal75 = schema72.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema77 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema77.setType("hi!");
        strSchema77.setName("no description");
        io.swagger.oas.models.media.Schema schema83 = strSchema77.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema84 = schema72.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema77);
        io.swagger.oas.models.media.Schema schema86 = schema84.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema88 = strSchema58.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema53.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema39.properties(strMap87);
        io.swagger.oas.models.media.Schema schema91 = schema20.properties(strMap87);
        io.swagger.oas.models.media.Schema schema93 = schema20.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema95 = schema20.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "no description" + "'", str21, "no description");
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema10.minItems((java.lang.Integer) (-1));
        schema10.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema10.discriminator(discriminator24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = strSchema0.getMinLength();
        java.lang.Boolean boolean20 = strSchema0.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strSchema0.setExtensions(strMap21);
        java.lang.String str23 = strSchema0.getTitle();
        java.lang.String str24 = strSchema0.getDescription();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        schema6.setMinProperties((java.lang.Integer) 0);
        java.lang.String str11 = schema6.getPattern();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.xml(xML12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        schema13.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        strSchema16.setNot((io.swagger.oas.models.media.Schema) strSchema21);
        java.lang.String str27 = strSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema29 = strSchema16.description("");
        schema29.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        schema26.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema26.getDescription();
        schema26.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        io.swagger.oas.models.media.XML xML19 = null;
        schema10.setXml(xML19);
        schema10.setReadOnly((java.lang.Boolean) false);
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema10.minimum(bigDecimal25);
        schema26.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        schema4.setPattern("");
        io.swagger.oas.models.media.Schema schema8 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML11 = null;
        schema8.setXml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema8.deprecated((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) 0);
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        schema8.setMultipleOf(bigDecimal21);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces33, produces34, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(contentOptional38);
        org.junit.Assert.assertNotNull(contentOptional40);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema22 = schema12.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        schema12.setProperties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = schema12.getDeprecated();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + true + "'", boolean27, true);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema9);
        io.swagger.oas.models.media.Schema schema18 = schema7.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema7.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema22.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.discriminator(discriminator25);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema0.setMinLength((java.lang.Integer) 0);
        strSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema0.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema20.getType();
        java.lang.String str22 = schema20.getType();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        strSchema0.setExternalDocs(externalDocumentation7);
        java.lang.Integer int9 = strSchema0.getMaxItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.xml(xML13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema11.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 100);
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema14.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema14.setDiscriminator(discriminator18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema14.externalDocs(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.lang.String str7 = strSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.minimum(bigDecimal14);
        java.lang.String str16 = schema9.toString();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema19 = schema9.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema6.setProperties(strMap7);
        io.swagger.oas.models.media.XML xML9 = schema6.getXml();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = strSchema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = strSchema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema19.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema19);
        io.swagger.oas.models.media.Schema schema28 = schema17.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema17.properties(strMap29);
        java.util.List<java.lang.String> strList31 = schema30.getEnum();
        io.swagger.oas.models.media.Schema schema33 = schema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = strSchema34.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strSchema34.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean50 = strSchema45.getDeprecated();
        java.lang.String str51 = strSchema45.getDescription();
        io.swagger.oas.models.media.Schema schema53 = strSchema45.maxLength((java.lang.Integer) 0);
        java.lang.Integer int54 = strSchema45.getMaxItems();
        io.swagger.oas.models.media.Schema schema56 = strSchema45.format("");
        io.swagger.oas.models.media.Schema schema58 = strSchema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setDeprecated((java.lang.Boolean) true);
        schema58.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema63 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema63.setType("hi!");
        strSchema63.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = strSchema63.properties(strMap68);
        java.lang.Boolean boolean70 = strSchema63.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        io.swagger.oas.models.media.Schema schema75 = strSchema71.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema77 = schema75.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean78 = schema77.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = schema77.getExternalDocs();
        java.math.BigDecimal bigDecimal80 = schema77.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema82 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema82.setType("hi!");
        strSchema82.setName("no description");
        io.swagger.oas.models.media.Schema schema88 = strSchema82.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema89 = schema77.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema82);
        io.swagger.oas.models.media.Schema schema91 = schema89.pattern("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        io.swagger.oas.models.media.Schema schema93 = strSchema63.properties(strMap92);
        io.swagger.oas.models.media.Schema schema94 = schema58.properties(strMap92);
        strSchema34.setProperties(strMap92);
        io.swagger.oas.models.media.Schema schema96 = schema30.properties(strMap92);
        schema6.setProperties(strMap92);
        io.swagger.oas.models.media.Schema schema99 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(externalDocumentation79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.util.List<java.lang.String> strList13 = strSchema10.getRequired();
        strSchema10.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = strSchema10.getMinLength();
        java.lang.String str17 = strSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strSchema10.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema9.not(schema19);
        java.lang.Object obj22 = schema19.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema19.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        java.lang.String str27 = schema26.getPattern();
        java.lang.Integer int28 = schema26.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.Schema schema30 = schema11.description("default");
        io.swagger.oas.models.media.Schema schema32 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        java.lang.Integer int34 = schema32.getMaxProperties();
        schema32.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema32.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.lang.String str8 = schema7.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema7.externalDocs(externalDocumentation9);
        schema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.util.List<java.lang.String> strList18 = strSchema15.getRequired();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj21 = strSchema15.getExample();
        io.swagger.oas.models.media.Schema schema23 = strSchema15.description("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema25 = strSchema15.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strSchema15.getAdditionalProperties();
        schema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema15);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.externalDocs(externalDocumentation12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        java.math.BigDecimal bigDecimal16 = schema13.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxProperties((java.lang.Integer) 1);
        java.lang.Object obj27 = schema26.getExample();
        io.swagger.oas.models.media.Schema schema29 = schema26.minItems((java.lang.Integer) 0);
        java.lang.String str30 = schema26.getType();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "default" + "'", str30, "default");
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.minItems((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean25 = strSchema24.getNullable();
        java.lang.Object obj26 = strSchema24.getExample();
        java.math.BigDecimal bigDecimal27 = null;
        strSchema24.setMaximum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        strSchema29.setName("no description");
        io.swagger.oas.models.media.Schema schema35 = strSchema29.type("");
        io.swagger.oas.models.media.Schema schema37 = schema35.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        io.swagger.oas.models.media.Schema schema44 = strSchema38.type("");
        io.swagger.oas.models.media.Schema schema46 = strSchema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strSchema38.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray51 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        schema48.setRequired((java.util.List<java.lang.String>) strList52);
        schema37.setRequired((java.util.List<java.lang.String>) strList52);
        strSchema24.setRequired((java.util.List<java.lang.String>) strList52);
        schema21.setEnum((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema59 = schema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        strSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        strSchema0.setMinProperties((java.lang.Integer) 1);
        strSchema0.setName("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str10 = strSchema0.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        strSchema0.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema10 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema9.setNot(schema10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema6.getExternalDocs();
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema schema17 = strSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema11);
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = schema22.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = strSchema0.$ref("no description");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema18 = strSchema14.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean21 = schema20.getExclusiveMaximum();
        schema20.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema13.example((java.lang.Object) schema20);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.minimum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setName("no description");
        io.swagger.oas.models.media.Schema schema45 = strSchema39.type("");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema38.not(schema45);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema49 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str50 = strSchema49.getTitle();
        io.swagger.oas.models.media.Schema schema52 = strSchema49.format("");
        strSchema49.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setName("no description");
        io.swagger.oas.models.media.Schema schema61 = strSchema55.type("");
        io.swagger.oas.models.media.Schema schema63 = schema61.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray65 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema63.setRequired((java.util.List<java.lang.String>) strList66);
        strSchema49.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema48.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.externalDocs(externalDocumentation71);
        schema72.setMinLength((java.lang.Integer) 1);
        schema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema72.description("*/*");
        schema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema24.additionalProperties(schema72);
        schema72.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        strSchema15.setNot((io.swagger.oas.models.media.Schema) strSchema20);
        strSchema15.setMinProperties((java.lang.Integer) 10);
        strSchema15.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strSchema15.getExtensions();
        strSchema15.setType("no description");
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema14.setProperties(strMap34);
        java.math.BigDecimal bigDecimal36 = null;
        schema14.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean40 = strSchema39.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = strSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema43 = strSchema39.description("");
        schema43.setPattern("hi!");
        java.lang.Integer int46 = schema43.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema43.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema48.pattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema52.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        java.util.List<java.lang.String> strList58 = schema57.getRequired();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strList58);
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema10.$ref("*/*");
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        schema20.setMaxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = null;
        schema20.setMinimum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.Integer int6 = schema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema15.not(schema22);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str27 = strSchema26.getTitle();
        io.swagger.oas.models.media.Schema schema29 = strSchema26.format("");
        strSchema26.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema40 = schema38.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray42 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        schema40.setRequired((java.util.List<java.lang.String>) strList43);
        strSchema26.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema25.required((java.util.List<java.lang.String>) strList43);
        java.lang.Integer int48 = schema25.getMinLength();
        schema25.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema25.type("hi!");
        java.math.BigDecimal bigDecimal53 = schema52.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema54 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema54.setType("hi!");
        strSchema54.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = strSchema54.properties(strMap59);
        java.lang.String str61 = strSchema54.getPattern();
        strSchema54.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema65 = strSchema54.exclusiveMinimum((java.lang.Boolean) true);
        schema65.setReadOnly((java.lang.Boolean) true);
        schema65.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        java.lang.Boolean boolean74 = strSchema71.getWriteOnly();
        strSchema71.setMaxItems((java.lang.Integer) 10);
        strSchema71.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean79 = strSchema71.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = strSchema71.externalDocs(externalDocumentation80);
        schema65.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema71);
        io.swagger.oas.models.media.Schema schema84 = schema65.description("default");
        schema84.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema88 = schema84.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.discriminator(discriminator89);
        boolean boolean91 = schema52.equals((java.lang.Object) schema88);
        io.swagger.oas.models.media.Schema schema92 = schema5.not(schema52);
        schema5.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        strSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.addProperties("", (io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema21 = strSchema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strSchema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = strSchema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator11 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = strSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        java.util.List<java.lang.String> strList17 = strSchema14.getRequired();
        strSchema14.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int20 = strSchema14.getMinLength();
        java.math.BigDecimal bigDecimal21 = null;
        strSchema14.setMinimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strSchema14.maxItems((java.lang.Integer) 1);
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 100);
        schema36.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema24.addProperties("*/*", schema36);
        schema24.setMinItems((java.lang.Integer) 10);
        schema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        strSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean49 = strSchema44.getDeprecated();
        java.lang.String str50 = strSchema44.getDescription();
        io.swagger.oas.models.media.Schema schema52 = strSchema44.maxLength((java.lang.Integer) 0);
        java.lang.Integer int53 = schema52.getMinItems();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema24.example((java.lang.Object) schema52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.xml(xML57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema60 = schema13.additionalProperties(schema56);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema20 = strSchema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strSchema7.$ref("");
        strSchema7.setExclusiveMinimum((java.lang.Boolean) false);
        strSchema7.addEnumItemObject("hi!");
        io.swagger.oas.models.media.Schema schema28 = strSchema7.minProperties((java.lang.Integer) 100);
        java.lang.String str29 = strSchema7.getType();
        strSchema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strSchema7.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList36 = strSchema7.getEnum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        java.lang.Boolean boolean11 = schema8.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema12.properties(strMap17);
        java.lang.Integer int19 = schema18.getMaxProperties();
        schema18.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.externalDocs(externalDocumentation22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema26 = schema8.example((java.lang.Object) bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema35 = strSchema27.nullable((java.lang.Boolean) true);
        java.lang.Integer int36 = schema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str39 = schema35.getPattern();
        io.swagger.oas.models.media.Schema schema41 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.setNot(schema41);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.discriminator(discriminator43);
        io.swagger.oas.models.media.XML xML45 = null;
        schema41.setXml(xML45);
        java.lang.Boolean boolean47 = schema41.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.description("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema50.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema50.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema6.minItems((java.lang.Integer) 1);
        schema6.setPattern("default");
        java.math.BigDecimal bigDecimal15 = null;
        schema6.setMinimum(bigDecimal15);
        schema6.addEnumItemObject("hi!");
        schema6.set$ref("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean6 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema9 = schema8.getNot();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        schema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.deprecated((java.lang.Boolean) true);
        java.lang.Integer int13 = schema8.getMaxLength();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        java.lang.String str32 = strSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema34 = strSchema25.minItems((java.lang.Integer) 100);
        schema34.setMinItems((java.lang.Integer) 0);
        schema34.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = schema23.not(schema34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema45 = strSchema40.type("default");
        io.swagger.oas.models.media.Schema schema47 = schema45.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) false);
        schema45.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        schema45.setDiscriminator(discriminator52);
        io.swagger.oas.models.media.Schema schema54 = schema34.not(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema34.externalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema57 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema57.setType("hi!");
        strSchema57.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = strSchema57.properties(strMap62);
        java.lang.Integer int64 = schema63.getMaxProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = schema63.description("no description");
        io.swagger.oas.models.media.Schema schema70 = schema68.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        strSchema71.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema76 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema76.setType("hi!");
        strSchema76.setName("no description");
        strSchema71.setNot((io.swagger.oas.models.media.Schema) strSchema76);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strSchema71.minimum(bigDecimal82);
        schema83.setDeprecated((java.lang.Boolean) true);
        schema83.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator88 = null;
        schema83.setDiscriminator(discriminator88);
        java.util.List<java.lang.String> strList90 = schema83.getRequired();
        schema70.setNot(schema83);
        schema34.setDefault((java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema94 = schema83.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema83.discriminator(discriminator95);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.properties(strMap8);
        schema6.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema13 = schema6.title("default");
        io.swagger.oas.models.media.Schema schema15 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean19 = strSchema18.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = strSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema22 = strSchema18.description("");
        strSchema18.setDefault((java.lang.Object) (byte) 100);
        strSchema18.setMinProperties((java.lang.Integer) 0);
        strSchema18.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema29.setType("hi!");
        java.util.List<java.lang.String> strList32 = strSchema29.getRequired();
        strSchema29.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int35 = strSchema29.getMinLength();
        java.lang.String str36 = strSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema37 = strSchema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema29);
        io.swagger.oas.models.media.Schema schema39 = strSchema18.name("hi!");
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema42.type("");
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema48.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema52.$ref("default");
        schema52.setDescription("default");
        java.lang.Object obj57 = schema52.getExample();
        io.swagger.oas.models.media.Schema schema58 = schema39.not(schema52);
        schema15.setAdditionalProperties(schema52);
        schema52.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.util.List<java.lang.String> strList15 = strSchema12.getRequired();
        strSchema12.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strSchema12.title("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema12.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema schema29 = strSchema23.type("");
        io.swagger.oas.models.media.Schema schema31 = strSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strSchema23.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema33.setRequired((java.util.List<java.lang.String>) strList37);
        strSchema12.addExtension("", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema41.setType("hi!");
        strSchema41.setName("no description");
        io.swagger.oas.models.media.Schema schema47 = strSchema41.type("");
        io.swagger.oas.models.media.Schema schema49 = strSchema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strSchema41.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        schema51.setRequired((java.util.List<java.lang.String>) strList55);
        schema33.setEnum((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema33.example(obj59);
        schema5.setExample(obj59);
        schema5.setDescription("default");
        io.swagger.oas.models.media.Schema schema65 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        schema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema68 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema68.setType("hi!");
        java.lang.Boolean boolean71 = strSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema73 = strSchema68.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        java.lang.Boolean boolean77 = strSchema74.getWriteOnly();
        io.swagger.oas.models.media.Schema schema79 = strSchema74.type("default");
        strSchema68.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema74);
        io.swagger.oas.models.media.Schema schema82 = strSchema68.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator83 = null;
        io.swagger.oas.models.media.Schema schema84 = strSchema68.discriminator(discriminator83);
        schema5.setNot(schema84);
        io.swagger.oas.models.media.Schema schema86 = schema84.getNot();
        java.lang.Boolean boolean87 = schema84.getWriteOnly();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        schema6.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.minimum(bigDecimal11);
        java.lang.Boolean boolean13 = schema6.getWriteOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.lang.String str23 = schema21.getName();
        io.swagger.oas.models.media.Schema schema25 = schema21.minLength((java.lang.Integer) 10);
        schema25.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        schema34.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.addRequiredItem("");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.minimum(bigDecimal39);
        io.swagger.oas.models.media.XML xML41 = null;
        schema34.setXml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema34.readOnly((java.lang.Boolean) false);
        schema25.setDefault((java.lang.Object) false);
        java.lang.Integer int46 = schema25.getMaxItems();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Object obj6 = strSchema0.getExample();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.description("#/components/schemas/default");
        io.swagger.oas.models.media.Schema schema10 = strSchema0.name("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema16.pattern("default");
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMaximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        java.lang.String str15 = strSchema0.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        strSchema0.setMinimum(bigDecimal16);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*/*" + "'", str15, "*/*");
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.type("*/*");
        schema7.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        schema7.set$ref("");
        schema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int19 = strSchema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setName("no description");
        io.swagger.oas.models.media.Schema schema26 = strSchema20.type("");
        io.swagger.oas.models.media.Schema schema27 = strSchema13.not((io.swagger.oas.models.media.Schema) strSchema20);
        java.lang.Boolean boolean28 = strSchema13.getUniqueItems();
        java.lang.Boolean boolean29 = strSchema13.getNullable();
        io.swagger.oas.models.media.Schema schema31 = strSchema13.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int32 = strSchema13.getMinItems();
        java.lang.Boolean boolean33 = strSchema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema34 = schema7.addProperties("#/components/schemas/hi!", (io.swagger.oas.models.media.Schema) strSchema13);
        io.swagger.oas.models.media.Schema schema36 = strSchema13.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        java.lang.Boolean boolean20 = strSchema17.getWriteOnly();
        strSchema17.setMaxItems((java.lang.Integer) 10);
        strSchema17.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = strSchema17.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema17.externalDocs(externalDocumentation26);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema17);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema11.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema11.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) (-1));
        schema34.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = strSchema7.properties(strMap12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = strSchema19.getMinLength();
        java.lang.Integer int25 = strSchema19.getMaxLength();
        java.math.BigDecimal bigDecimal26 = strSchema19.getMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema18.additionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        strSchema19.setType("");
        io.swagger.oas.models.media.Schema schema30 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema19);
        java.lang.String str31 = schema5.getPattern();
        io.swagger.oas.models.media.Schema schema33 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setReadOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = strSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean9 = strSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.discriminator(discriminator19);
        java.lang.Boolean boolean21 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strSchema22.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMaximum((java.lang.Boolean) true);
        schema30.setMaxItems((java.lang.Integer) 0);
        java.lang.String str33 = schema30.toString();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str46 = strSchema45.getTitle();
        io.swagger.oas.models.media.Schema schema48 = strSchema45.format("");
        strSchema45.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        io.swagger.oas.models.media.Schema schema55 = strSchema51.maxLength((java.lang.Integer) 1);
        schema55.setPattern("");
        io.swagger.oas.models.media.Schema schema59 = schema55.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray63 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema59.setEnum((java.util.List<java.lang.String>) strList64);
        strSchema45.setEnum((java.util.List<java.lang.String>) strList64);
        schema44.setRequired((java.util.List<java.lang.String>) strList64);
        schema30.setEnum((java.util.List<java.lang.String>) strList64);
        schema16.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema71 = strSchema0.example((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal72 = schema71.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator73 = schema71.getDiscriminator();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(discriminator73);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.externalDocs(externalDocumentation10);
        java.util.List<java.lang.String> strList12 = schema9.getEnum();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        schema6.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = schema11.type("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema11.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        schema24.setProperties(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strSchema28.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema35 = strSchema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = strSchema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setName("no description");
        strSchema38.setNot((io.swagger.oas.models.media.Schema) strSchema43);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strSchema38.minimum(bigDecimal49);
        schema50.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema37.additionalProperties(schema50);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        schema37.setDiscriminator(discriminator54);
        io.swagger.oas.models.media.Schema schema57 = schema37.minItems((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList58 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema59 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema5.setExtensions(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        schema5.setMinimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema5.title("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema5.setExternalDocs(externalDocumentation13);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        schema9.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        java.util.List<java.lang.String> strList18 = strSchema15.getRequired();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = strSchema15.title("no description");
        java.lang.String str23 = schema22.getDescription();
        java.lang.String str24 = schema22.getType();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema28 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema22.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean37 = strSchema32.getDeprecated();
        strSchema32.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strSchema32.setRequired((java.util.List<java.lang.String>) strList45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema32.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = strSchema32.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema31.example((java.lang.Object) strSchema32);
        schema9.addExtension("", (java.lang.Object) strSchema32);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        strSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema23 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema23.setType("hi!");
        strSchema23.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        strSchema23.setNot((io.swagger.oas.models.media.Schema) strSchema28);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = strSchema23.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        java.util.List<java.lang.String> strList39 = strSchema36.getRequired();
        strSchema36.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = strSchema36.title("no description");
        java.lang.String str44 = schema43.getDescription();
        boolean boolean45 = schema35.equals((java.lang.Object) schema43);
        java.util.List<java.lang.String> strList46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.required(strList46);
        schema43.setMaxItems((java.lang.Integer) 10);
        schema43.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean52 = schema43.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = strSchema53.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = strSchema53.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        java.lang.Boolean boolean67 = strSchema64.getWriteOnly();
        io.swagger.oas.models.media.Schema schema69 = strSchema64.type("default");
        io.swagger.oas.models.media.Schema schema70 = strSchema53.not(schema69);
        java.math.BigDecimal bigDecimal71 = null;
        schema69.setMultipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        io.swagger.oas.models.media.Schema schema77 = strSchema73.maxLength((java.lang.Integer) 1);
        schema77.setPattern("");
        io.swagger.oas.models.media.Schema schema81 = schema77.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray85 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema81.setEnum((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema89 = schema69.required((java.util.List<java.lang.String>) strList86);
        schema43.setEnum((java.util.List<java.lang.String>) strList86);
        schema22.setEnum((java.util.List<java.lang.String>) strList86);
        java.lang.String str92 = schema22.getPattern();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        java.util.List<java.lang.String> strList10 = strSchema7.getRequired();
        strSchema7.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = strSchema7.getMinLength();
        strSchema7.setUniqueItems((java.lang.Boolean) false);
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema schema18 = strSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strSchema20.getExternalDocs();
        java.lang.String str26 = strSchema20.getTitle();
        strSchema20.setMaxItems((java.lang.Integer) (-1));
        strSchema7.addExtension("hi!", (java.lang.Object) strSchema20);
        io.swagger.oas.models.media.Schema schema31 = strSchema20.type("no description");
        java.lang.Boolean boolean32 = strSchema20.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = strSchema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        java.lang.Integer int15 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema7.not(schema17);
        schema17.setNullable((java.lang.Boolean) false);
        java.lang.Integer int21 = schema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema17.setExternalDocs(externalDocumentation26);
        java.lang.Object obj28 = schema17.getExample();
        java.math.BigDecimal bigDecimal29 = schema17.getMinimum();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxLength((java.lang.Integer) 1);
        java.lang.Integer int30 = schema27.getMinLength();
        schema27.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator7 = strSchema0.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strSchema0.properties(strMap8);
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.lang.String str22 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema24 = schema21.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int25 = schema24.getMinProperties();
        java.lang.Integer int26 = schema24.getMaxProperties();
        java.math.BigDecimal bigDecimal27 = schema24.getMaximum();
        schema24.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema24.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(discriminator30);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("default");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setNullable((java.lang.Boolean) false);
        schema13.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.lang.Integer int20 = schema8.getMaxItems();
        java.lang.Integer int21 = schema8.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setMaxItems((java.lang.Integer) 1);
        schema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int28 = schema23.getMinProperties();
        java.lang.String str29 = schema23.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "no description" + "'", str29, "no description");
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        java.lang.Integer int15 = schema14.getMaxProperties();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMinimum(bigDecimal16);
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        java.util.List<java.lang.String> strList23 = strSchema20.getRequired();
        strSchema20.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema20.title("no description");
        schema27.set$ref("");
        io.swagger.oas.models.media.Schema schema31 = schema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        io.swagger.oas.models.media.Schema schema36 = strSchema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = strSchema32.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        java.util.List<java.lang.String> strList42 = strSchema39.getRequired();
        strSchema39.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strSchema39.title("no description");
        java.lang.String str47 = schema46.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str51 = strSchema50.getTitle();
        io.swagger.oas.models.media.Schema schema53 = strSchema50.format("");
        strSchema50.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        io.swagger.oas.models.media.Schema schema60 = strSchema56.maxLength((java.lang.Integer) 1);
        schema60.setPattern("");
        io.swagger.oas.models.media.Schema schema64 = schema60.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray68 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        schema64.setEnum((java.util.List<java.lang.String>) strList69);
        strSchema50.setEnum((java.util.List<java.lang.String>) strList69);
        schema49.setRequired((java.util.List<java.lang.String>) strList69);
        schema38.setRequired((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema75 = schema31.required((java.util.List<java.lang.String>) strList69);
        java.util.List<java.lang.String> strList76 = schema31.getRequired();
        schema14.setRequired(strList76);
        io.swagger.oas.models.media.Schema schema78 = strSchema0.required(strList76);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.multipleOf(bigDecimal17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema16.setExternalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getTitle();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str16 = strSchema15.getTitle();
        io.swagger.oas.models.media.Schema schema18 = strSchema15.format("");
        strSchema15.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strSchema15.getExtensions();
        java.lang.Integer int22 = strSchema15.getMinItems();
        strSchema15.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema15);
        java.math.BigDecimal bigDecimal26 = null;
        schema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj35 = null;
        schema33.addExtension("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj35);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = strSchema22.type("");
        io.swagger.oas.models.media.Schema schema30 = strSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = strSchema22.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema32.setRequired((java.util.List<java.lang.String>) strList36);
        schema21.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = schema12.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema42.type("");
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema50.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema61 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str62 = strSchema61.getTitle();
        io.swagger.oas.models.media.Schema schema64 = strSchema61.format("");
        strSchema61.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        strSchema67.setName("no description");
        io.swagger.oas.models.media.Schema schema73 = strSchema67.type("");
        io.swagger.oas.models.media.Schema schema75 = schema73.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray77 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema75.setRequired((java.util.List<java.lang.String>) strList78);
        strSchema61.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema60.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema85 = schema12.not(schema84);
        java.lang.Integer int86 = schema84.getMaxLength();
        schema84.setMaxProperties((java.lang.Integer) 0);
        schema84.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        java.lang.Boolean boolean22 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        java.lang.Boolean boolean27 = strSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = strSchema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.xml(xML32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema29.setProperties(strMap34);
        java.lang.Boolean boolean36 = schema29.getWriteOnly();
        schema10.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) boolean36);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = strSchema18.getDeprecated();
        java.lang.String str24 = strSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema26 = strSchema18.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strSchema18.minimum(bigDecimal27);
        strSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema18);
        java.lang.String str30 = strSchema0.get$ref();
        strSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = strSchema0.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "*/*" + "'", str30, "*/*");
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.addEnumItemObject("default");
        io.swagger.oas.models.media.Schema schema18 = strSchema7.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        java.lang.String str30 = schema29.getFormat();
        java.math.BigDecimal bigDecimal31 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema18.not(schema29);
        schema29.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema29.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema29.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.XML xML42 = schema39.getXml();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(xML42);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Discriminator discriminator5 = strSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setName("no description");
        io.swagger.oas.models.media.Schema schema14 = strSchema8.type("");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.lang.Boolean boolean22 = strSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strSchema19.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = strSchema19.getProperties();
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema19);
        io.swagger.oas.models.media.XML xML27 = null;
        schema18.setXml(xML27);
        schema18.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = strSchema0.not(schema18);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema33 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema33.setType("hi!");
        strSchema33.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = strSchema33.properties(strMap38);
        java.lang.Integer int40 = schema39.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema39.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int50 = strSchema45.getMinLength();
        java.lang.Integer int51 = strSchema45.getMaxLength();
        java.math.BigDecimal bigDecimal52 = strSchema45.getMaximum();
        io.swagger.oas.models.media.Schema schema53 = schema44.additionalProperties((io.swagger.oas.models.media.Schema) strSchema45);
        strSchema45.setType("");
        java.lang.Boolean boolean56 = strSchema45.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = strSchema45.getNot();
        io.swagger.oas.models.media.Schema schema58 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strSchema45);
        io.swagger.oas.models.media.Schema schema60 = strSchema45.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(discriminator5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        java.lang.String str6 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxLength((java.lang.Integer) 0);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.title("hi!");
        java.lang.String str15 = schema12.getName();
        schema12.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        schema12.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema12.discriminator(discriminator22);
        schema23.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema23.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.example((java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strSchema15.properties(strMap20);
        strSchema15.setMaxLength((java.lang.Integer) 0);
        strSchema15.setName("hi!");
        io.swagger.oas.models.media.Schema schema27 = strSchema15.description("*/*");
        strSchema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = strSchema15.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = strSchema15.$ref("");
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMaximum(bigDecimal34);
        java.lang.String str36 = schema33.getName();
        io.swagger.oas.models.media.Schema schema37 = schema13.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        strSchema39.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        java.util.List<java.lang.String> strList47 = strSchema44.getRequired();
        strSchema44.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int50 = strSchema44.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema58 = strSchema44.not((io.swagger.oas.models.media.Schema) strSchema51);
        strSchema39.setExample((java.lang.Object) schema58);
        strSchema39.setPattern("*/*");
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = strSchema39.discriminator(discriminator62);
        io.swagger.oas.models.media.Schema schema65 = strSchema39.readOnly((java.lang.Boolean) false);
        schema65.setMinItems((java.lang.Integer) 1);
        java.lang.String str68 = schema65.get$ref();
        schema13.addExtension("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema65);
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema13.discriminator(discriminator70);
        schema71.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema9 = strSchema0.minProperties((java.lang.Integer) 1);
        schema9.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        schema9.setMultipleOf(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        schema9.setMinimum(bigDecimal16);
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Integer int20 = schema9.getMinItems();
        schema9.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema4 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema4.setType("hi!");
        strSchema4.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int9 = strSchema4.getMinLength();
        java.lang.String str10 = strSchema4.getDescription();
        strSchema0.setExample((java.lang.Object) str10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strSchema18.getMinLength();
        strSchema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setNot((io.swagger.oas.models.media.Schema) strSchema18);
        java.math.BigDecimal bigDecimal27 = strSchema18.getMultipleOf();
        io.swagger.oas.models.media.Schema schema28 = strSchema0.example((java.lang.Object) strSchema18);
        schema28.setUniqueItems((java.lang.Boolean) false);
        schema28.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        java.math.BigDecimal bigDecimal7 = null;
        strSchema0.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        schema10.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        io.swagger.oas.models.media.Schema schema25 = strSchema19.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = schema25.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str30 = strSchema29.getTitle();
        io.swagger.oas.models.media.Schema schema32 = strSchema29.format("");
        strSchema29.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema35 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema35.setType("hi!");
        strSchema35.setName("no description");
        io.swagger.oas.models.media.Schema schema41 = strSchema35.type("");
        io.swagger.oas.models.media.Schema schema43 = schema41.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray45 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        schema43.setRequired((java.util.List<java.lang.String>) strList46);
        strSchema29.setRequired((java.util.List<java.lang.String>) strList46);
        schema28.setNot((io.swagger.oas.models.media.Schema) strSchema29);
        io.swagger.oas.models.media.Schema schema52 = schema28.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        schema52.setDiscriminator(discriminator53);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setName("no description");
        io.swagger.oas.models.media.Schema schema61 = strSchema55.name("*/*");
        io.swagger.oas.models.media.Schema schema62 = schema52.example((java.lang.Object) "*/*");
        java.util.List<java.lang.String> strList63 = schema62.getRequired();
        schema10.setRequired(strList63);
        io.swagger.oas.models.media.Schema schema66 = schema10.name("");
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema10.setDiscriminator(discriminator67);
        java.lang.Class<?> wildcardClass69 = schema10.getClass();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema9.minLength((java.lang.Integer) 100);
        java.lang.String str12 = schema11.getType();
        java.math.BigDecimal bigDecimal13 = schema11.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        schema6.setType("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema6.setExternalDocs(externalDocumentation10);
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema6.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema15.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema10.discriminator(discriminator20);
        io.swagger.oas.models.media.Schema schema23 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        schema31.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean34 = schema31.getExclusiveMinimum();
        schema31.addEnumItemObject("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema31.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        java.lang.Boolean boolean41 = strSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = strSchema38.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema44.setType("hi!");
        java.lang.Boolean boolean47 = strSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema49 = strSchema44.type("default");
        strSchema38.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema44);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = strSchema51.getDeprecated();
        java.lang.String str57 = strSchema51.getDescription();
        io.swagger.oas.models.media.Schema schema59 = strSchema51.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = schema59.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema59.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema64 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema64.setType("hi!");
        strSchema64.setName("no description");
        io.swagger.oas.models.media.Schema schema70 = strSchema64.type("");
        io.swagger.oas.models.media.Schema schema72 = schema70.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema73 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema73.setType("hi!");
        strSchema73.setName("no description");
        io.swagger.oas.models.media.Schema schema79 = strSchema73.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema73.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = strSchema73.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray86 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema83.setRequired((java.util.List<java.lang.String>) strList87);
        schema72.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema63.required((java.util.List<java.lang.String>) strList87);
        strSchema44.setRequired((java.util.List<java.lang.String>) strList87);
        schema31.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema94 = schema23.example((java.lang.Object) strList87);
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema23.minimum(bigDecimal95);
        java.lang.Integer int97 = schema23.getMinLength();
        java.lang.Boolean boolean98 = schema23.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(int97);
        org.junit.Assert.assertNull(boolean98);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        java.lang.Integer int21 = strSchema12.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strSchema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        strSchema12.setExternalDocs(externalDocumentation26);
        java.lang.Boolean boolean28 = strSchema12.getReadOnly();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        io.swagger.oas.models.media.Schema schema22 = strSchema12.type("default");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.util.List<java.lang.String> strList28 = strSchema25.getRequired();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int31 = strSchema25.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema32 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema32.setType("hi!");
        strSchema32.setName("no description");
        io.swagger.oas.models.media.Schema schema38 = strSchema32.type("");
        io.swagger.oas.models.media.Schema schema39 = strSchema25.not((io.swagger.oas.models.media.Schema) strSchema32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        strSchema40.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema45 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema45.setType("hi!");
        strSchema45.setName("no description");
        strSchema40.setNot((io.swagger.oas.models.media.Schema) strSchema45);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strSchema40.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema53 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema53.setType("hi!");
        strSchema53.setName("no description");
        io.swagger.oas.models.media.Schema schema59 = strSchema53.type("");
        io.swagger.oas.models.media.Schema schema61 = schema59.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema62 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema62.setType("hi!");
        strSchema62.setName("no description");
        io.swagger.oas.models.media.Schema schema68 = strSchema62.type("");
        io.swagger.oas.models.media.Schema schema70 = strSchema62.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = strSchema62.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray75 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema72.setRequired((java.util.List<java.lang.String>) strList76);
        schema61.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = strSchema40.required((java.util.List<java.lang.String>) strList76);
        strSchema32.setEnum((java.util.List<java.lang.String>) strList76);
        java.lang.Integer int82 = strSchema32.getMinLength();
        schema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema32);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int82);
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.maxLength((java.lang.Integer) 100);
        schema12.setMaxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema16 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = strSchema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema9);
        io.swagger.oas.models.media.Schema schema18 = schema7.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema7.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema7.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int25 = schema24.getMaxProperties();
        schema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema24.name("");
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        java.lang.Boolean boolean10 = schema6.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strSchema12.properties(strMap17);
        java.lang.Integer int19 = schema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.maxProperties((java.lang.Integer) 100);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema18);
        java.math.BigDecimal bigDecimal23 = schema18.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = strSchema24.getDeprecated();
        java.lang.String str30 = strSchema24.getDescription();
        io.swagger.oas.models.media.Schema schema32 = strSchema24.maxLength((java.lang.Integer) 0);
        java.lang.Integer int33 = strSchema24.getMaxItems();
        io.swagger.oas.models.media.Schema schema35 = strSchema24.format("");
        io.swagger.oas.models.media.Schema schema37 = strSchema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean38 = schema37.getReadOnly();
        schema37.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema41 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean42 = strSchema41.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strSchema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = strSchema41.description("");
        schema45.setPattern("hi!");
        java.lang.Integer int48 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema50 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList51 = schema50.getRequired();
        schema37.setEnum(strList51);
        io.swagger.oas.models.media.Schema schema53 = schema18.required(strList51);
        io.swagger.oas.models.media.Schema schema55 = schema53.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.minItems((java.lang.Integer) 0);
        java.lang.String str10 = schema5.toString();
        java.lang.Object obj11 = schema5.getExample();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        strSchema0.setMinProperties((java.lang.Integer) 100);
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "no description", "default" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        strSchema0.setRequired((java.util.List<java.lang.String>) strList13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strSchema0.properties(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema18 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema18.setType("hi!");
        strSchema18.setName("no description");
        io.swagger.oas.models.media.Schema schema24 = strSchema18.type("");
        io.swagger.oas.models.media.Schema schema26 = strSchema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = strSchema18.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray31 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        schema28.setRequired((java.util.List<java.lang.String>) strList32);
        java.util.List<java.lang.String> strList35 = schema28.getEnum();
        java.lang.Integer int36 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema38 = schema28.pattern("default");
        io.swagger.oas.models.media.Schema schema40 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean41 = schema17.equals((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema42 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema42.setType("hi!");
        strSchema42.setName("no description");
        io.swagger.oas.models.media.Schema schema48 = strSchema42.type("");
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema51 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema51.setType("hi!");
        strSchema51.setName("no description");
        io.swagger.oas.models.media.Schema schema57 = strSchema51.type("");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema50.not(schema57);
        io.swagger.oas.models.media.Schema schema62 = schema50.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema50.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        java.util.List<java.lang.String> strList68 = strSchema65.getRequired();
        strSchema65.setReadOnly((java.lang.Boolean) true);
        schema50.setNot((io.swagger.oas.models.media.Schema) strSchema65);
        io.swagger.oas.annotations.links.LinkParameter[] linkParameterArray73 = new io.swagger.oas.annotations.links.LinkParameter[] {};
        java.util.Map<java.lang.String, java.lang.String> strMap74 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray73);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameterArray73);
        strSchema65.addExtension("no description", (java.lang.Object) strMap75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = strSchema65.externalDocs(externalDocumentation77);
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema65);
        schema17.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema82 = schema17.getNot();
        java.math.BigDecimal bigDecimal83 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema82.setMaximum(bigDecimal83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertNotNull(linkParameterArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(schema82);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        strSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = schema11.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strSchema21.properties(strMap26);
        java.lang.Integer int28 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = schema27.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema27.addRequiredItem("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        schema34.setExtensions(strMap35);
        java.lang.String str37 = schema34.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema34.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema40 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema40.setType("hi!");
        java.lang.Boolean boolean43 = strSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = schema34.not((io.swagger.oas.models.media.Schema) strSchema40);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        java.lang.String str47 = schema46.getDescription();
        schema20.setNot(schema46);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray13 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema10.setRequired((java.util.List<java.lang.String>) strList14);
        java.util.List<java.lang.String> strList17 = schema10.getEnum();
        java.lang.Integer int18 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema20 = schema10.pattern("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        strSchema21.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema26 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema26.setType("hi!");
        strSchema26.setName("no description");
        strSchema21.setNot((io.swagger.oas.models.media.Schema) strSchema26);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strSchema21.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        java.util.List<java.lang.String> strList37 = strSchema34.getRequired();
        strSchema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strSchema34.title("no description");
        java.lang.String str42 = schema41.getDescription();
        boolean boolean43 = schema33.equals((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema10.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema47 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema47.setType("hi!");
        strSchema47.setName("no description");
        io.swagger.oas.models.media.Schema schema53 = strSchema47.type("");
        io.swagger.oas.models.media.Schema schema55 = strSchema47.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = strSchema47.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        java.lang.Boolean boolean61 = strSchema58.getWriteOnly();
        io.swagger.oas.models.media.Schema schema63 = strSchema58.type("default");
        io.swagger.oas.models.media.Schema schema64 = strSchema47.not(schema63);
        java.math.BigDecimal bigDecimal65 = null;
        schema63.setMultipleOf(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        io.swagger.oas.models.media.Schema schema71 = strSchema67.maxLength((java.lang.Integer) 1);
        schema71.setPattern("");
        io.swagger.oas.models.media.Schema schema75 = schema71.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray79 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        schema75.setEnum((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema83 = schema63.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema46.required((java.util.List<java.lang.String>) strList80);
        java.lang.Boolean boolean85 = schema46.getNullable();
        java.lang.Integer int86 = schema46.getMinItems();
        io.swagger.oas.models.media.Schema schema88 = schema46.deprecated((java.lang.Boolean) false);
        java.lang.String str89 = schema46.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        schema10.setMinItems((java.lang.Integer) 1);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema10.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        schema12.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema22 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = null;
        schema12.setXml(xML23);
        schema12.setPattern("default");
        java.lang.String str27 = schema12.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema12.externalDocs(externalDocumentation28);
        schema12.setMaxItems((java.lang.Integer) 10);
        schema12.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema12.discriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal25 = null;
        schema23.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = schema33.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = schema33.minProperties((java.lang.Integer) (-1));
        schema33.setExclusiveMinimum((java.lang.Boolean) false);
        schema33.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema33.writeOnly((java.lang.Boolean) false);
        schema23.setExample((java.lang.Object) false);
        schema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema23.multipleOf(bigDecimal46);
        schema23.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.title("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        strSchema19.setName("no description");
        strSchema14.setNot((io.swagger.oas.models.media.Schema) strSchema19);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema14.minimum(bigDecimal25);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema26.setDiscriminator(discriminator31);
        java.util.List<java.lang.String> strList33 = schema26.getRequired();
        schema13.setNot(schema26);
        java.lang.String str35 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema37 = schema26.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = schema5.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        schema5.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema5.setDiscriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema16.minItems((java.lang.Integer) 0);
        schema16.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        schema4.setPattern("hi!");
        java.lang.Integer int7 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: []\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema13.setXml(xML16);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema8.not(schema15);
        io.swagger.oas.models.media.Schema schema20 = schema8.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema8.name("hi!");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema34 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema34.setType("hi!");
        strSchema34.setName("no description");
        io.swagger.oas.models.media.Schema schema40 = strSchema34.type("");
        io.swagger.oas.models.media.Schema schema42 = schema40.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema33.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema44 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str45 = strSchema44.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strSchema44.format("");
        strSchema44.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema50 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema50.setType("hi!");
        strSchema50.setName("no description");
        io.swagger.oas.models.media.Schema schema56 = strSchema50.type("");
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray60 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        schema58.setRequired((java.util.List<java.lang.String>) strList61);
        strSchema44.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList61);
        schema22.setEnum((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema67 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema67.setType("hi!");
        java.util.List<java.lang.String> strList70 = strSchema67.getRequired();
        strSchema67.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int73 = strSchema67.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema74 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema74.setType("hi!");
        strSchema74.setName("no description");
        io.swagger.oas.models.media.Schema schema80 = strSchema74.type("");
        io.swagger.oas.models.media.Schema schema81 = strSchema67.not((io.swagger.oas.models.media.Schema) strSchema74);
        java.lang.Boolean boolean82 = strSchema67.getUniqueItems();
        java.lang.Boolean boolean83 = strSchema67.getNullable();
        io.swagger.oas.models.media.Schema schema85 = strSchema67.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strSchema67.maxItems((java.lang.Integer) (-1));
        strSchema67.setType("default");
        io.swagger.oas.models.media.Schema schema90 = schema22.not((io.swagger.oas.models.media.Schema) strSchema67);
        java.lang.Boolean boolean91 = schema90.getNullable();
        io.swagger.oas.models.media.Schema schema93 = schema90.type("");
        java.math.BigDecimal bigDecimal94 = schema93.getMultipleOf();
        io.swagger.oas.models.media.Schema schema96 = schema93.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema96.discriminator(discriminator97);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(bigDecimal94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.xml(xML24);
        java.lang.Class<?> wildcardClass26 = schema25.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.title("no description");
        schema7.set$ref("");
        io.swagger.oas.models.media.Schema schema11 = schema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        io.swagger.oas.models.media.Schema schema16 = strSchema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = strSchema12.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema19 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema19.setType("hi!");
        java.util.List<java.lang.String> strList22 = strSchema19.getRequired();
        strSchema19.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strSchema19.title("no description");
        java.lang.String str27 = schema26.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str31 = strSchema30.getTitle();
        io.swagger.oas.models.media.Schema schema33 = strSchema30.format("");
        strSchema30.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema36 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema36.setType("hi!");
        io.swagger.oas.models.media.Schema schema40 = strSchema36.maxLength((java.lang.Integer) 1);
        schema40.setPattern("");
        io.swagger.oas.models.media.Schema schema44 = schema40.maxItems((java.lang.Integer) 10);
        java.lang.String[] strArray48 = new java.lang.String[] { "default", "", "no description" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        schema44.setEnum((java.util.List<java.lang.String>) strList49);
        strSchema30.setEnum((java.util.List<java.lang.String>) strList49);
        schema29.setRequired((java.util.List<java.lang.String>) strList49);
        schema18.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema55 = schema11.required((java.util.List<java.lang.String>) strList49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        schema55.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = schema55.getExternalDocs();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(externalDocumentation60);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema4 = strSchema0.description("");
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str7 = strSchema0.getFormat();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        java.lang.Boolean boolean13 = strSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = strSchema10.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj18 = strSchema10.getExample();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = strSchema10.discriminator(discriminator19);
        boolean boolean21 = schema9.equals((java.lang.Object) discriminator19);
        java.lang.String str22 = schema9.getType();
        schema9.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        java.lang.Boolean boolean28 = strSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = strSchema25.type("default");
        io.swagger.oas.models.media.Schema schema32 = strSchema25.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema9.not(schema32);
        java.math.BigDecimal bigDecimal36 = null;
        schema32.setMaximum(bigDecimal36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema32.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation38);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        strSchema0.setMinProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strSchema0.setProperties(strMap14);
        java.lang.Class<?> wildcardClass16 = strSchema0.getClass();
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        java.lang.String str6 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema8 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema8.setType("hi!");
        strSchema8.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strSchema8.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = strSchema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema5.addProperties("no description", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema21 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema21.setType("hi!");
        java.util.List<java.lang.String> strList24 = strSchema21.getRequired();
        strSchema21.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int27 = strSchema21.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema35 = strSchema21.not((io.swagger.oas.models.media.Schema) strSchema28);
        java.lang.Boolean boolean36 = strSchema21.getUniqueItems();
        java.lang.Boolean boolean37 = strSchema21.getNullable();
        io.swagger.oas.models.media.Schema schema39 = strSchema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strSchema21.maxItems((java.lang.Integer) (-1));
        strSchema21.setType("default");
        io.swagger.oas.models.media.Discriminator discriminator44 = strSchema21.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strSchema21.getProperties();
        io.swagger.oas.models.media.Schema schema46 = schema5.addProperties("default", (io.swagger.oas.models.media.Schema) strSchema21);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        java.util.List<java.lang.String> strList51 = strSchema48.getRequired();
        strSchema48.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int54 = strSchema48.getMinLength();
        strSchema48.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema58 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema58.setType("hi!");
        strSchema58.setName("no description");
        io.swagger.oas.models.media.Schema schema64 = strSchema58.type("");
        io.swagger.oas.models.media.Schema schema66 = strSchema58.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = strSchema58.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray71 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        schema68.setRequired((java.util.List<java.lang.String>) strList72);
        java.util.List<java.lang.String> strList75 = schema68.getEnum();
        io.swagger.oas.models.media.Schema schema76 = strSchema48.addProperties("hi!", schema68);
        java.math.BigDecimal bigDecimal77 = schema68.getMinimum();
        io.swagger.oas.models.media.Schema schema78 = strSchema21.addProperties("", schema68);
        java.lang.Object obj79 = strSchema21.getExample();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        strSchema0.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int23 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema24.setType("hi!");
        strSchema24.setName("no description");
        io.swagger.oas.models.media.Schema schema30 = strSchema24.type("");
        io.swagger.oas.models.media.Schema schema32 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.format("default");
        io.swagger.oas.models.media.Schema schema37 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema38.setType("hi!");
        strSchema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strSchema38.properties(strMap43);
        java.lang.Integer int45 = schema44.getMaxProperties();
        schema44.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema37.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema52.getNot();
        io.swagger.oas.models.media.Schema schema54 = strSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        java.lang.String str55 = strSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema57 = strSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strSchema0.name("no description");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.Integer int19 = strSchema11.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema20 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema20.setType("hi!");
        strSchema20.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = strSchema20.properties(strMap25);
        java.lang.String str27 = strSchema20.getPattern();
        strSchema20.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strSchema20.exclusiveMinimum((java.lang.Boolean) true);
        schema31.setReadOnly((java.lang.Boolean) true);
        schema31.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        java.lang.Boolean boolean40 = strSchema37.getWriteOnly();
        strSchema37.setMaxItems((java.lang.Integer) 10);
        strSchema37.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = strSchema37.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = strSchema37.externalDocs(externalDocumentation46);
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strSchema37);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema31.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema31.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema11.setAdditionalProperties(schema54);
        io.swagger.oas.models.media.Schema schema59 = schema54.nullable((java.lang.Boolean) true);
        java.lang.String str60 = schema59.getFormat();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema59.maximum(bigDecimal61);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema6.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strSchema11.getProperties();
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema11);
        java.lang.String str19 = strSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema21 = strSchema11.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        io.swagger.oas.models.media.Schema schema25 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        schema21.setMinimum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str7 = strSchema6.getTitle();
        io.swagger.oas.models.media.Schema schema9 = strSchema6.format("");
        io.swagger.oas.models.media.Schema schema11 = strSchema6.exclusiveMaximum((java.lang.Boolean) true);
        strSchema0.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema14 = strSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema8.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema9.getExternalDocs();
        java.math.BigDecimal bigDecimal15 = null;
        schema9.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = schema22.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(xML23);
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        io.swagger.oas.models.media.Schema schema12 = schema8.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema8.xml(xML15);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.Boolean boolean1 = strSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation2 = strSchema0.getExternalDocs();
        strSchema0.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        io.swagger.oas.models.media.Schema schema11 = strSchema5.type("");
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema14 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema14.setType("hi!");
        strSchema14.setName("no description");
        io.swagger.oas.models.media.Schema schema20 = strSchema14.type("");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema13.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema24 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str25 = strSchema24.getTitle();
        io.swagger.oas.models.media.Schema schema27 = strSchema24.format("");
        strSchema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray40 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema38.setRequired((java.util.List<java.lang.String>) strList41);
        strSchema24.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = schema23.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.externalDocs(externalDocumentation46);
        strSchema0.setDefault((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema50 = schema45.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.$ref("no description");
        io.swagger.oas.models.media.Schema schema54 = schema50.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.discriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema58 = schema56.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(externalDocumentation2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema15 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema15.setType("hi!");
        strSchema15.setName("no description");
        io.swagger.oas.models.media.Schema schema21 = strSchema15.type("");
        io.swagger.oas.models.media.Schema schema23 = strSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = strSchema15.getDiscriminator();
        strSchema7.setDefault((java.lang.Object) strSchema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        java.lang.Integer int32 = strSchema28.getMinProperties();
        java.lang.String str33 = strSchema28.get$ref();
        strSchema7.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema28);
        io.swagger.oas.models.media.Schema schema36 = strSchema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strSchema7.nullable((java.lang.Boolean) false);
        java.lang.String str39 = strSchema7.getFormat();
        strSchema7.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        strSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = strSchema0.deprecated((java.lang.Boolean) false);
        schema23.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema30 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema30.setType("hi!");
        strSchema30.setName("no description");
        io.swagger.oas.models.media.Schema schema36 = strSchema30.type("");
        io.swagger.oas.models.media.Schema schema38 = strSchema30.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = strSchema30.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal41 = null;
        schema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema43 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema43.setType("hi!");
        strSchema43.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = strSchema43.properties(strMap48);
        java.lang.Integer int50 = schema49.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.type("*/*");
        schema40.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema27.example((java.lang.Object) schema52);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema27.discriminator(discriminator57);
        schema58.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        java.lang.Boolean boolean9 = strSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = strSchema6.type("default");
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema6);
        strSchema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strSchema6.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        io.swagger.oas.models.media.Schema schema4 = strSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.discriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setName("no description");
        io.swagger.oas.models.media.Schema schema19 = strSchema13.type("");
        io.swagger.oas.models.media.Schema schema21 = strSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strSchema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strSchema13);
        io.swagger.oas.models.media.Schema schema26 = schema9.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        strSchema27.setName("no description");
        io.swagger.oas.models.media.Schema schema33 = strSchema27.type("");
        java.lang.Integer int34 = schema33.getMaxProperties();
        java.math.BigDecimal bigDecimal35 = null;
        schema33.setMinimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema33.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema33.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = schema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.uniqueItems((java.lang.Boolean) true);
        java.lang.String str45 = schema44.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.discriminator(discriminator46);
        schema44.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema44.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema53 = schema26.not(schema44);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setName("no description");
        io.swagger.oas.models.media.Schema schema61 = strSchema55.type("");
        java.lang.Integer int62 = schema61.getMaxProperties();
        java.math.BigDecimal bigDecimal63 = null;
        schema61.setMinimum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema61.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        schema61.setExternalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema61.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema71 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema71.setType("hi!");
        java.lang.Boolean boolean74 = strSchema71.getWriteOnly();
        strSchema71.setWriteOnly((java.lang.Boolean) false);
        schema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema71);
        io.swagger.oas.models.media.Schema schema79 = schema61.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = schema79.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema82 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema82.setType("hi!");
        io.swagger.oas.models.media.Schema schema86 = strSchema82.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema88 = schema86.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean89 = schema88.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema88.xml(xML90);
        io.swagger.oas.models.media.Schema schema93 = schema88.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema94 = schema81.not(schema93);
        io.swagger.oas.models.media.Schema schema96 = schema93.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema98 = schema96.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema99 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/default\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema98);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        strSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema6 = strSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strSchema0.title("default");
        java.lang.String str9 = schema8.getType();
        io.swagger.oas.models.media.Schema schema11 = schema8.minLength((java.lang.Integer) 1);
        java.lang.String str12 = schema11.getType();
        java.lang.Object obj13 = schema11.getExample();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.minimum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema15.setDiscriminator(discriminator18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.multipleOf(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema18.description("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        java.util.List<java.lang.String> strList27 = schema25.getRequired();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema schema7 = strSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        strSchema0.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        strSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        strSchema11.setNot((io.swagger.oas.models.media.Schema) strSchema16);
        strSchema11.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = strSchema11.minProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList26 = schema25.getEnum();
        io.swagger.oas.annotations.media.Content[] contentArray27 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray27, components28);
        javax.ws.rs.Produces produces30 = null;
        javax.ws.rs.Produces produces31 = null;
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional33 = io.swagger.jaxrs2.OperationParser.getContent(contentArray27, produces30, produces31, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional35 = io.swagger.jaxrs2.OperationParser.getContents(contentArray27, components34);
        boolean boolean36 = schema25.equals((java.lang.Object) components34);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema25.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema39 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema39.setType("hi!");
        java.util.List<java.lang.String> strList42 = strSchema39.getRequired();
        strSchema39.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean45 = strSchema39.getDeprecated();
        io.swagger.oas.models.media.Schema schema47 = strSchema39.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema47.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = schema25.example((java.lang.Object) schema47);
        strSchema0.setExample((java.lang.Object) schema49);
        java.lang.String str51 = strSchema0.getPattern();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(contentArray27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(contentOptional33);
        org.junit.Assert.assertNotNull(contentOptional35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str51, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        java.lang.Integer int14 = schema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema13.getNot();
        schema6.setNot(schema13);
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMultipleOf(bigDecimal17);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = strSchema0.getMinLength();
        java.lang.Integer int6 = strSchema0.getMaxLength();
        java.lang.Integer int7 = strSchema0.getMinProperties();
        strSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        strSchema0.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = strSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = strSchema12.getMinLength();
        java.lang.Integer int18 = strSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal19 = strSchema12.getMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema12.setType("");
        java.math.BigDecimal bigDecimal23 = null;
        strSchema12.setMinimum(bigDecimal23);
        java.lang.Boolean boolean25 = strSchema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema27 = strSchema12.writeOnly((java.lang.Boolean) true);
        schema27.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setName("no description");
        io.swagger.oas.models.media.Schema schema31 = strSchema25.type("");
        java.lang.Integer int32 = schema31.getMaxProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) true);
        java.lang.String str43 = schema42.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.discriminator(discriminator44);
        schema42.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema48 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema48.setType("hi!");
        strSchema48.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = strSchema48.type("");
        io.swagger.oas.models.media.Schema schema56 = strSchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = strSchema48.maxItems((java.lang.Integer) 100);
        java.lang.Integer int59 = strSchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema60 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema60.setType("hi!");
        strSchema60.setName("no description");
        io.swagger.oas.models.media.Schema schema66 = strSchema60.type("");
        java.lang.Integer int67 = schema66.getMaxProperties();
        java.math.BigDecimal bigDecimal68 = null;
        schema66.setMinimum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema66.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema66.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) true);
        boolean boolean78 = strSchema48.equals((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema79 = schema42.not((io.swagger.oas.models.media.Schema) strSchema48);
        java.lang.Boolean boolean80 = strSchema48.getWriteOnly();
        strSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema48);
        io.swagger.oas.models.media.Schema schema83 = strSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.lang.Boolean boolean3 = strSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema5 = strSchema0.type("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema12.getAdditionalProperties();
        boolean boolean19 = strSchema0.equals((java.lang.Object) schema12);
        io.swagger.oas.models.media.Schema schema21 = schema12.uniqueItems((java.lang.Boolean) false);
        java.lang.String str22 = schema12.getDescription();
        schema12.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema12.description("default");
        java.lang.Boolean boolean27 = schema26.getReadOnly();
        io.swagger.oas.models.media.Schema schema29 = schema26.pattern("#/components/schemas/class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setMaxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.maximum(bigDecimal32);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema6 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema6.setType("hi!");
        strSchema6.setName("no description");
        io.swagger.oas.models.media.Schema schema12 = strSchema6.type("");
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("default");
        io.swagger.oas.models.media.Schema schema16 = strSchema0.addProperties("*/*", schema15);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema schema23 = strSchema17.type("");
        io.swagger.oas.models.media.Schema schema25 = strSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = strSchema17.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        java.lang.Boolean boolean31 = strSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = strSchema28.type("default");
        io.swagger.oas.models.media.Schema schema34 = strSchema17.not(schema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        java.lang.Integer int44 = schema43.getMaxProperties();
        java.math.BigDecimal bigDecimal45 = null;
        schema43.setMinimum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema43.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) (-1));
        schema36.setExample((java.lang.Object) schema48);
        java.math.BigDecimal bigDecimal52 = schema36.getMultipleOf();
        io.swagger.oas.models.media.Schema schema54 = schema36.title("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = strSchema0.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema57 = schema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML58 = schema57.getXml();
        io.swagger.oas.models.media.Schema schema60 = schema57.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean61 = schema57.getReadOnly();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        java.lang.Class<?> wildcardClass13 = apiResponseArray0.getClass();
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        java.lang.Boolean boolean15 = strSchema12.getDeprecated();
        boolean boolean17 = strSchema12.equals((java.lang.Object) "default");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strSchema12.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strSchema12.deprecated((java.lang.Boolean) false);
        boolean boolean22 = schema6.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.maximum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema6.maximum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema6.getExtensions();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema6.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        io.swagger.oas.models.media.XML xML31 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema30.setXml(xML31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        java.lang.Integer int7 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema6.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        java.lang.Boolean boolean19 = strSchema16.getWriteOnly();
        strSchema16.setWriteOnly((java.lang.Boolean) false);
        schema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strSchema16);
        io.swagger.oas.models.media.Schema schema24 = schema6.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema27 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema27.setType("hi!");
        io.swagger.oas.models.media.Schema schema31 = strSchema27.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.example((java.lang.Object) (short) 0);
        java.lang.Boolean boolean34 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema33.xml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema33.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema26.not(schema38);
        io.swagger.oas.models.media.Schema schema41 = schema38.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.String str7 = strSchema0.getPattern();
        java.lang.String str8 = strSchema0.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema9 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema9.setType("hi!");
        strSchema9.setName("no description");
        io.swagger.oas.models.media.Schema schema15 = strSchema9.type("");
        java.lang.Integer int16 = schema15.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = strSchema0.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema schema20 = schema15.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema20.setReadOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = strSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema7 = strSchema0.$ref("");
        schema7.addEnumItemObject("#/components/schemas/default");
        io.swagger.oas.models.media.XML xML10 = schema7.getXml();
        java.lang.Boolean boolean11 = schema7.getUniqueItems();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(xML10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        schema10.setFormat("");
        schema10.setTitle("hi!");
        schema10.setDeprecated((java.lang.Boolean) true);
        schema10.setName("*/*");
        io.swagger.oas.models.media.Schema schema22 = schema10.minLength((java.lang.Integer) (-1));
        schema22.setDefault((java.lang.Object) 1.0f);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema29 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str30 = strSchema29.getTitle();
        io.swagger.oas.models.media.Schema schema32 = strSchema29.format("");
        io.swagger.oas.models.media.Schema schema34 = strSchema29.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema34.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema34.setDiscriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema41 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) true);
        boolean boolean44 = schema26.equals((java.lang.Object) schema43);
        schema43.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 10\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema43.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str11 = strSchema10.getTitle();
        io.swagger.oas.models.media.Schema schema13 = strSchema10.format("");
        strSchema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema16 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema16.setType("hi!");
        strSchema16.setName("no description");
        io.swagger.oas.models.media.Schema schema22 = strSchema16.type("");
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        java.lang.String[] strArray26 = new java.lang.String[] { "default" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema24.setRequired((java.util.List<java.lang.String>) strList27);
        strSchema10.setRequired((java.util.List<java.lang.String>) strList27);
        schema9.setNot((io.swagger.oas.models.media.Schema) strSchema10);
        io.swagger.oas.models.media.Schema schema33 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema37 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema37.setType("hi!");
        strSchema37.setName("no description");
        io.swagger.oas.models.media.Schema schema43 = strSchema37.type("");
        schema43.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema43.addRequiredItem("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema43.minimum(bigDecimal48);
        schema33.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema33.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema schema54 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema55 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema55.setType("hi!");
        strSchema55.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = strSchema55.properties(strMap60);
        java.lang.Integer int62 = schema61.getMaxProperties();
        io.swagger.oas.models.media.Schema schema64 = schema61.minProperties((java.lang.Integer) 0);
        java.lang.String str65 = schema61.getType();
        io.swagger.oas.models.media.Schema schema67 = schema61.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema67.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema33.additionalProperties(schema67);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        strSchema0.setMaxLength((java.lang.Integer) 0);
        strSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema12 = strSchema0.description("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        strSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strSchema13.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.minLength((java.lang.Integer) 0);
        schema12.setNot(schema23);
        schema23.setMinItems((java.lang.Integer) 100);
        schema23.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema11 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema11.setType("hi!");
        java.lang.Boolean boolean14 = strSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = strSchema11.type("default");
        io.swagger.oas.models.media.Schema schema17 = strSchema0.not(schema16);
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setName("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = strSchema28.getDeprecated();
        java.lang.String str34 = strSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema36 = strSchema28.maxLength((java.lang.Integer) 0);
        java.lang.Integer int37 = schema36.getMinItems();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.minimum(bigDecimal38);
        schema36.setPattern("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 100\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema36.setExternalDocs(externalDocumentation42);
        schema36.setWriteOnly((java.lang.Boolean) true);
        schema27.setExample((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema10 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema10.setType("hi!");
        strSchema10.setName("no description");
        io.swagger.oas.models.media.Schema schema16 = strSchema10.type("");
        io.swagger.oas.models.media.Schema schema18 = schema16.format("no description");
        io.swagger.oas.models.media.Schema schema19 = schema8.not(schema18);
        io.swagger.oas.models.media.Schema schema21 = schema18.format("default");
        io.swagger.oas.models.media.Schema schema23 = schema18.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = schema23.getExclusiveMinimum();
        java.lang.Object obj27 = schema23.getExample();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema28 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema28.setType("hi!");
        strSchema28.setName("no description");
        io.swagger.oas.models.media.Schema schema34 = strSchema28.type("");
        io.swagger.oas.models.media.Schema schema36 = strSchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strSchema28.maxItems((java.lang.Integer) 100);
        java.lang.String[] strArray41 = new java.lang.String[] { "*/*", "*/*" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        schema38.setRequired((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.XML xML45 = null;
        schema38.setXml(xML45);
        schema38.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema38.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList51 = schema50.getRequired();
        io.swagger.oas.models.media.Schema schema52 = schema23.required(strList51);
        schema23.addEnumItemObject("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean55 = schema23.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        strSchema5.setName("no description");
        strSchema0.setNot((io.swagger.oas.models.media.Schema) strSchema5);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema13 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema13.setType("hi!");
        java.util.List<java.lang.String> strList16 = strSchema13.getRequired();
        strSchema13.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = strSchema13.title("no description");
        java.lang.String str21 = schema20.getDescription();
        boolean boolean22 = schema12.equals((java.lang.Object) schema20);
        java.util.List<java.lang.String> strList23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.required(strList23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str26 = strSchema25.getTitle();
        io.swagger.oas.models.media.Schema schema28 = strSchema25.format("");
        strSchema25.setDeprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strSchema25.getExtensions();
        java.lang.Integer int32 = strSchema25.getMinItems();
        strSchema25.setReadOnly((java.lang.Boolean) true);
        schema20.setDefault((java.lang.Object) strSchema25);
        schema20.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema38 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str39 = strSchema38.getTitle();
        io.swagger.oas.models.media.Schema schema41 = strSchema38.format("");
        io.swagger.oas.models.media.Schema schema43 = strSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema43.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema46 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema46.setType("hi!");
        strSchema46.setName("no description");
        io.swagger.oas.models.media.Schema schema52 = strSchema46.type("");
        java.lang.Integer int53 = schema52.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = schema52.name("default");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema56 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema56.setType("hi!");
        strSchema56.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = strSchema56.properties(strMap61);
        java.lang.String str63 = strSchema56.getType();
        schema52.setNot((io.swagger.oas.models.media.Schema) strSchema56);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema65 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema65.setType("hi!");
        strSchema65.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema70 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema70.setType("hi!");
        java.util.List<java.lang.String> strList73 = strSchema70.getRequired();
        strSchema70.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int76 = strSchema70.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema77 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema77.setType("hi!");
        strSchema77.setName("no description");
        io.swagger.oas.models.media.Schema schema83 = strSchema77.type("");
        io.swagger.oas.models.media.Schema schema84 = strSchema70.not((io.swagger.oas.models.media.Schema) strSchema77);
        strSchema65.setExample((java.lang.Object) schema84);
        java.math.BigDecimal bigDecimal86 = null;
        schema84.setMultipleOf(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = schema84.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema90 = schema52.example((java.lang.Object) schema89);
        io.swagger.oas.models.media.Schema schema91 = schema45.example((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema93 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema94 = schema20.example((java.lang.Object) schema93);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        java.lang.Boolean boolean15 = strSchema0.getUniqueItems();
        java.lang.Boolean boolean16 = strSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema18 = strSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = strSchema0.getMinLength();
        java.lang.Boolean boolean20 = strSchema0.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = null;
        strSchema0.setExtensions(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        strSchema0.setProperties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema25 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema25.setType("hi!");
        strSchema25.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strSchema25.properties(strMap30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema31.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema31.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema38.name("no description");
        java.lang.Integer int41 = schema40.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator42 = schema40.getDiscriminator();
        strSchema0.setExample((java.lang.Object) discriminator42);
        io.swagger.oas.models.media.Schema schema45 = strSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = strSchema0.discriminator(discriminator46);
        schema47.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        java.util.List<java.lang.String> strList3 = strSchema0.getRequired();
        strSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = strSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema7 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema7.setType("hi!");
        strSchema7.setName("no description");
        io.swagger.oas.models.media.Schema schema13 = strSchema7.type("");
        io.swagger.oas.models.media.Schema schema14 = strSchema0.not((io.swagger.oas.models.media.Schema) strSchema7);
        strSchema7.setName("");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema17 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema17.setType("hi!");
        strSchema17.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema22 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema22.setType("hi!");
        strSchema22.setName("no description");
        strSchema17.setNot((io.swagger.oas.models.media.Schema) strSchema22);
        java.lang.String str28 = strSchema17.getDescription();
        strSchema17.setDescription("default");
        io.swagger.oas.models.media.Schema schema31 = strSchema7.not((io.swagger.oas.models.media.Schema) strSchema17);
        strSchema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, */*]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str34 = strSchema7.getDefault();
        io.swagger.oas.models.media.Schema schema36 = strSchema7.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strSchema7.nullable((java.lang.Boolean) false);
        java.lang.Integer int39 = strSchema7.getMinItems();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema6.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema15.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strSchema0.properties(strMap5);
        java.lang.Integer int7 = schema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.type("*/*");
        java.lang.Integer int10 = schema6.getMaxLength();
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.xml(xML11);
        java.math.BigDecimal bigDecimal13 = schema12.getMaximum();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMaximum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setName("no description");
        io.swagger.oas.models.media.Schema schema6 = strSchema0.type("");
        io.swagger.oas.models.media.Schema schema8 = strSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.maxItems((java.lang.Integer) 100);
        schema14.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema14.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema23 = schema14.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema0.setType("hi!");
        strSchema0.setDefault((java.lang.Object) '#');
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema5 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema5.setType("hi!");
        java.util.List<java.lang.String> strList8 = strSchema5.getRequired();
        strSchema5.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema19 = strSchema5.not((io.swagger.oas.models.media.Schema) strSchema12);
        strSchema0.setExample((java.lang.Object) schema19);
        strSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema24 = strSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = strSchema0.getExclusiveMaximum();
        strSchema0.setMinItems((java.lang.Integer) (-1));
        java.lang.String str28 = strSchema0.get$ref();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema0 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        java.lang.String str1 = strSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema3 = strSchema0.format("");
        io.swagger.oas.models.media.Schema schema5 = strSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal6 = null;
        schema5.setMaximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.multipleOf(bigDecimal8);
        java.lang.String str10 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.String> strSchema12 = new io.swagger.oas.models.media.Schema<java.lang.String>();
        strSchema12.setType("hi!");
        strSchema12.setName("no description");
        io.swagger.oas.models.media.Schema schema18 = strSchema12.type("");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: 10\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        java.math.BigDecimal bigDecimal24 = null;
        schema22.setMultipleOf(bigDecimal24);
        schema22.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }
}

